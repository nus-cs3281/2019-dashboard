[
  {
    "path": "test/api/v3/integration/hall/GET-hall_heroes_heroId.test.js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  generateUser,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  translate as t,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../../helpers/api-integration/v3\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { v4 as generateUUID } from \u0027uuid\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027GET /heroes/:heroId\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  let user;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  before(async () \u003d\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    user \u003d await generateUser({"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "      contributor: {admin: true},"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027requires the caller to be an admin\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    let nonAdmin \u003d await generateUser();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    await expect(nonAdmin.get(`/hall/heroes/${user._id}`)).to.eventually.be.rejected.and.eql({"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      code: 401,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      error: \u0027NotAuthorized\u0027,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      message: t(\u0027noAdminAccess\u0027),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027validates req.params.heroId\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    await expect(user.get(\u0027/hall/heroes/invalidUUID\u0027)).to.eventually.be.rejected.and.eql({"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "      code: 404,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "      error: \u0027NotFound\u0027,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "      message: t(\u0027userWithIDNotFound\u0027, {userId: \u0027invalidUUID\u0027}),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027handles non-existing heroes\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    let dummyId \u003d generateUUID();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    await expect(user.get(`/hall/heroes/${dummyId}`)).to.eventually.be.rejected.and.eql({"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      code: 404,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      error: \u0027NotFound\u0027,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      message: t(\u0027userWithIDNotFound\u0027, {userId: dummyId}),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "  it(\u0027returns only necessary hero data given user id\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    let hero \u003d await generateUser({"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      contributor: {tier: 23},"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    let heroRes \u003d await user.get(`/hall/heroes/${hero._id}`);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(heroRes).to.have.all.keys([ // works as: object has all and only these keys"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027_id\u0027, \u0027id\u0027, \u0027balance\u0027, \u0027profile\u0027, \u0027purchased\u0027,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027contributor\u0027, \u0027auth\u0027, \u0027items\u0027,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    ]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(heroRes.auth.local).not.to.have.keys([\u0027salt\u0027, \u0027hashed_password\u0027]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(heroRes.profile).to.have.all.keys([\u0027name\u0027]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027returns only necessary hero data given username\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    let hero \u003d await generateUser({"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "      contributor: {tier: 23},"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    });"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    let heroRes \u003d await user.get(`/hall/heroes/${hero.auth.local.username}`);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    expect(heroRes).to.have.all.keys([ // works as: object has all and only these keys"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "      \u0027_id\u0027, \u0027id\u0027, \u0027balance\u0027, \u0027profile\u0027, \u0027purchased\u0027,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "      \u0027contributor\u0027, \u0027auth\u0027, \u0027items\u0027,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    ]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    expect(heroRes.auth.local).not.to.have.keys([\u0027salt\u0027, \u0027hashed_password\u0027]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    expect(heroRes.profile).to.have.all.keys([\u0027name\u0027]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "  });"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027returns correct hero using search with difference case\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    await generateUser({}, { username: \u0027TestUpperCaseName123\u0027 });"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    let heroRes \u003d await user.get(\u0027/hall/heroes/TestuPPerCasEName123\u0027);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(heroRes.auth.local.username).to.equal(\u0027TestUpperCaseName123\u0027);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 17,
      "-": 59
    }
  },
  {
    "path": "test/api/v3/integration/user/auth/POST-login-local.test.js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  generateUser,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  requester,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  translate as t,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../../../helpers/api-integration/v3\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  bcryptCompare,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  sha1MakeSalt,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  sha1Encrypt as sha1EncryptPassword,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../../../../website/server/libs/password\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import nconf from \u0027nconf\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027POST /user/auth/local/login\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  let api;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  let user;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  let endpoint \u003d \u0027/user/auth/local/login\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  let password \u003d \u0027password\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async () \u003d\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    api \u003d requester();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    user \u003d await generateUser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027success with username\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    let response \u003d await api.post(endpoint, {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      username: user.auth.local.username,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      password,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(response.apiToken).to.eql(user.apiToken);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027success with email\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    let response \u003d await api.post(endpoint, {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      username: user.auth.local.email,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      password,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(response.apiToken).to.eql(user.apiToken);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027user is blocked\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    await user.update({ \u0027auth.blocked\u0027: 1 });"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    await expect(api.post(endpoint, {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      username: user.auth.local.username,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      password,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    })).to.eventually.be.rejected.and.eql({"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      code: 401,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      error: \u0027NotAuthorized\u0027,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      message: t(\u0027accountSuspended\u0027, { communityManagerEmail: nconf.get(\u0027EMAILS_COMMUNITY_MANAGER_EMAIL\u0027), userId: user._id }),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027wrong password\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    await expect(api.post(endpoint, {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      username: user.auth.local.username,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      password: \u0027wrong-password\u0027,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    })).to.eventually.be.rejected.and.eql({"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      code: 401,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      error: \u0027NotAuthorized\u0027,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      message: t(\u0027invalidLoginCredentialsLong\u0027),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027missing username\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    await expect(api.post(endpoint, {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      password: \u0027wrong-password\u0027,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    })).to.eventually.be.rejected.and.eql({"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      code: 400,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      error: \u0027BadRequest\u0027,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      message: t(\u0027invalidReqParams\u0027),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027missing password\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    await expect(api.post(endpoint, {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      username: user.auth.local.username,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    })).to.eventually.be.rejected.and.eql({"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      code: 400,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      error: \u0027BadRequest\u0027,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      message: t(\u0027invalidReqParams\u0027),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027converts user with SHA1 encrypted password to bcrypt encryption\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    let textPassword \u003d \u0027mySecretPassword\u0027;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    let salt \u003d sha1MakeSalt();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    let sha1HashedPassword \u003d sha1EncryptPassword(textPassword, salt);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    await user.update({"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027auth.local.hashed_password\u0027: sha1HashedPassword,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027auth.local.passwordHashMethod\u0027: \u0027sha1\u0027,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027auth.local.salt\u0027: salt,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    await user.sync();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(user.auth.local.passwordHashMethod).to.equal(\u0027sha1\u0027);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(user.auth.local.salt).to.equal(salt);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(user.auth.local.hashed_password).to.equal(sha1HashedPassword);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    // login"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    await api.post(endpoint, {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      username: user.auth.local.email,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      password: textPassword,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    await user.sync();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(user.auth.local.passwordHashMethod).to.equal(\u0027bcrypt\u0027);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(user.auth.local.salt).to.be.undefined;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(user.auth.local.hashed_password).not.to.equal(sha1HashedPassword);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    let isValidPassword \u003d await bcryptCompare(textPassword, user.auth.local.hashed_password);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(isValidPassword).to.equal(true);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "  it(\u0027user uses social authentication and has no password\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    await user.unset({"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "      \u0027auth.local.hashed_password\u0027: 1,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    });"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    await user.sync();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    expect(user.auth.local.hashed_password).to.be.undefined;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    await expect(api.post(endpoint, {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "      username: user.auth.local.username,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "      password: \u0027any-password\u0027,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    })).to.eventually.be.rejected.and.eql({"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "      code: 401,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "      error: \u0027NotAuthorized\u0027,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "      message: t(\u0027invalidLoginCredentialsLong\u0027),"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    });"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "  });"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 18,
      "-": 113
    }
  },
  {
    "path": "test/helpers/api-integration/api-classes.js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "/* eslint-disable no-use-before-define */"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import moment from \u0027moment\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { requester } from \u0027./requester\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  getDocument as getDocumentFromMongo,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  updateDocument as updateDocumentInMongo,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "  unsetDocument as unsetDocumentInMongo,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../mongo\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  assign,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  each,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  isEmpty,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  set,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027lodash\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "class ApiObject {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor (options) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    assign(this, options);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  async update (options) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    if (isEmpty(options)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    await updateDocumentInMongo(this._docType, this, options);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    _updateLocalParameters(this, options);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    return this;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "  async unset (options) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    if (isEmpty(options)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    await unsetDocumentInMongo(this._docType, this, options);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    _updateLocalParameters((this, options));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    return this;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  async sync () {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    let updatedDoc \u003d await getDocumentFromMongo(this._docType, this);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    assign(this, updatedDoc);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    return this;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "export class ApiUser extends ApiObject {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor (options) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    super(options);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    this._docType \u003d \u0027users\u0027;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    let _requester \u003d requester(this);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    this.get \u003d _requester.get;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    this.post \u003d _requester.post;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    this.put \u003d _requester.put;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    this.del \u003d _requester.del;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "export class ApiGroup extends ApiObject {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor (options) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    super(options);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    this._docType \u003d \u0027groups\u0027;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  async addChat (chat) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    let group \u003d this;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!chat) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      chat \u003d {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        id: \u0027Test_ID\u0027,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        text: \u0027Test message\u0027,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        flagCount: 0,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        timestamp: Date(),"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        likes: {},"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        flags: {},"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        uuid: group.leader,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        contributor: {},"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        backer: {},"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        user: group.leader,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    let update \u003d { chat };"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    return await this.update(update);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  async createCancelledSubscription () {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    let update \u003d {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      purchased: {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        plan: {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "          customerId: \u0027example-customer\u0027,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "          dateTerminated: moment().add(1, \u0027days\u0027).toDate(),"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    return await this.update(update);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "export class ApiChallenge extends ApiObject {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor (options) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    super(options);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    this._docType \u003d \u0027challenges\u0027;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "function _updateLocalParameters (doc, update) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "  each(update, (value, param) \u003d\u003e {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    set(doc, param, value);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 13,
      "-": 112
    }
  },
  {
    "path": "test/helpers/mongo.js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import mongoose from \u0027mongoose\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { TAVERN_ID } from \u0027../../website/server/models/group\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { get } from \u0027lodash\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "// Useful for checking things that have been deleted,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "// but you no longer have access to,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "// like private parties or users"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "export async function checkExistence (collectionName, id) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  return new Promise((resolve, reject) \u003d\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    let collection \u003d mongoose.connection.db.collection(collectionName);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    collection.find({_id: id}, {_id: 1}).limit(1).toArray((findError, docs) \u003d\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "      if (findError) return reject(findError);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      let exists \u003d docs.length \u003e 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      resolve(exists);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "// Obtain a property from the database. Useful if the property is private"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "// and thus unavailable to the client"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "export async function getProperty (collectionName, id, path) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  return new Promise((resolve, reject) \u003d\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    let collection \u003d mongoose.connection.db.collection(collectionName);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    collection.find({_id: id}, {[path]: 1}).limit(1).toArray((findError, docs) \u003d\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      if (findError) return reject(findError);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      resolve(get(docs[0], path));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "// Specifically helpful for the GET /groups tests,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "// resets the db to an empty state and creates a tavern document"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "export async function resetHabiticaDB () {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  return new Promise((resolve, reject) \u003d\u003e {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    mongoose.connection.dropDatabase((dbErr) \u003d\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      if (dbErr) return reject(dbErr);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      let groups \u003d mongoose.connection.db.collection(\u0027groups\u0027);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      let users \u003d mongoose.connection.db.collection(\u0027users\u0027);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      users.count({_id: \u00277bde7864-ebc5-4ee2-a4b7-1070d464cdb0\u0027}, (err, count) \u003d\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        if (err) return reject(err);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        if (count \u003e 0) return resolve();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        // create the leader for the tavern"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        users.insertOne({"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "          _id: \u00277bde7864-ebc5-4ee2-a4b7-1070d464cdb0\u0027,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "          apiToken: TAVERN_ID,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "          auth: {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            local: {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "              username: \u0027username\u0027,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "              lowerCaseUsername: \u0027username\u0027,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "              email: \u0027username@email.com\u0027,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "              hashed_password: \u0027hashed_password\u0027, // eslint-disable-line camelcase"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "              passwordHashMethod: \u0027bcrypt\u0027,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (insertErr) \u003d\u003e {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "          if (insertErr) return reject(insertErr);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "          // For some mysterious reason after a dropDatabase there can still be a group..."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "          groups.count({_id: TAVERN_ID}, (err2, count2) \u003d\u003e {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            if (err2) return reject(err2);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            if (count2 \u003e 0) return resolve();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            groups.insertOne({"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "              _id: TAVERN_ID,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "              chat: [],"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "              leader: \u00277bde7864-ebc5-4ee2-a4b7-1070d464cdb0\u0027, // Siena Leslie"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "              name: \u0027HabitRPG\u0027,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "              type: \u0027guild\u0027,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "              privacy: \u0027public\u0027,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "              memberCount: 0,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            }, (insertErr2) \u003d\u003e {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "              if (insertErr2) return reject(insertErr2);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "              resolve();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "export async function updateDocument (collectionName, doc, update) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  let collection \u003d mongoose.connection.db.collection(collectionName);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  return new Promise((resolve) \u003d\u003e {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    collection.updateOne({ _id: doc._id }, { $set: update }, (updateErr) \u003d\u003e {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "      if (updateErr) throw new Error(`Error updating ${collectionName}: ${updateErr}`);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      resolve();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "// Unset a property in the database."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "// Useful for testing."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "export async function unsetDocument (collectionName, doc, update) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "  let collection \u003d mongoose.connection.db.collection(collectionName);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "  return new Promise((resolve) \u003d\u003e {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    collection.updateOne({ _id: doc._id }, { $unset: update }, (updateErr) \u003d\u003e {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "      if (updateErr) throw new Error(`Error updating ${collectionName}: ${updateErr}`);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "      resolve();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    });"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "  });"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "export async function getDocument (collectionName, doc) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  let collection \u003d mongoose.connection.db.collection(collectionName);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  return new Promise((resolve) \u003d\u003e {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    collection.findOne({ _id: doc._id }, (lookupErr, found) \u003d\u003e {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      if (lookupErr) throw new Error(`Error looking up ${collectionName}: ${lookupErr}`);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      resolve(found);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "before((done) \u003d\u003e {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  mongoose.connection.on(\u0027open\u0027, (err) \u003d\u003e {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    if (err) return done(err);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    resetHabiticaDB()"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "      .then(() \u003d\u003e done())"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      .catch(done);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "after((done) \u003d\u003e {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  mongoose.connection.dropDatabase((err) \u003d\u003e {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    if (err) return done(err);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    mongoose.connection.close(done);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 13,
      "-": 126
    }
  },
  {
    "path": "website/client/components/hall/heroes.vue",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctemplate lang\u003d\"pug\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ".row.standard-page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  small.muted(v-html\u003d\"$t(\u0027blurbHallContributors\u0027)\")"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  .well"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    div(v-if\u003d\u0027user.contributor.admin\u0027)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "      h2 {{ $t(\u0027rewardUser\u0027) }}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      .row"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        .form.col-6(v-if\u003d\u0027!hero.profile\u0027)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "          .form-group"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "            input.form-control(type\u003d\u0027text\u0027, v-model\u003d\u0027heroID\u0027, :placeholder\u003d\"\u0027User ID or Username\u0027\")"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "          .form-group"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            button.btn.btn-secondary(@click\u003d\u0027loadHero(heroID)\u0027)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "              | {{ $t(\u0027loadUser\u0027) }}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      .row"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        .form.col-6(v-if\u003d\u0027hero \u0026\u0026 hero.profile\u0027, submit\u003d\u0027saveHero(hero)\u0027)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "          router-link(:to\u003d\"{\u0027name\u0027: \u0027userProfile\u0027, \u0027params\u0027: {\u0027userId\u0027: hero._id}}\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            h3 {{hero.profile.name}}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "          .form-group"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            input.form-control(type\u003d\u0027text\u0027, v-model\u003d\u0027hero.contributor.text\u0027, :placeholder\u003d\"$t(\u0027contribTitle\u0027)\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "          .form-group"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            label {{ $t(\u0027contribLevel\u0027) }}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            input.form-control(type\u003d\u0027number\u0027, v-model\u003d\u0027hero.contributor.level\u0027)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            small {{ $t(\u0027contribHallText\u0027) }}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "              |\u0026nbsp;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "              a(target\u003d\u0027_blank\u0027, href\u003d\u0027https://trello.com/c/wkFzONhE/277-contributor-gear\u0027) {{ $t(\u0027moreDetails\u0027) }}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "              |,\u0026nbsp;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "              a(target\u003d\u0027_blank\u0027, href\u003d\u0027https://github.com/HabitRPG/habitica/issues/3801\u0027) {{ $t(\u0027moreDetails2\u0027) }}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "          .form-group"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            textarea.form-control(cols\u003d5, :placeholder\u003d\"$t(\u0027contributions\u0027)\", v-model\u003d\u0027hero.contributor.contributions\u0027)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            //include ../../shared/formattiv-help"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "          hr"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "          .form-group"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            label {{ $t(\u0027balance\u0027) }}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            input.form-control(type\u003d\u0027number\u0027, step\u003d\"any\", v-model\u003d\u0027hero.balance\u0027)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            small"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "              span ‘{{ hero.balance }}’\u0026nbsp;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "              span(v-html\u003d\u0027$t(\"notGems\")\u0027)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "          .accordion"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            .accordion-group(heading\u003d\u0027Items\u0027)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "              h4.expand-toggle(:class\u003d\"{\u0027open\u0027: expandItems}\", @click\u003d\"expandItems \u003d !expandItems\") Update Item"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "              .form-group.well(v-if\u003d\"expandItems\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                input.form-control(type\u003d\u0027text\u0027,placeholder\u003d\u0027Path (eg, items.pets.BearCub-Base)\u0027,v-model\u003d\u0027hero.itemPath\u0027)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                small.muted Enter the \u003cstrong\u003eitem path\u003c/strong\u003e. E.g., \u003ccode\u003eitems.pets.BearCub-Zombie\u003c/code\u003e or \u003ccode\u003eitems.gear.owned.head_special_0\u003c/code\u003e or \u003ccode\u003eitems.gear.equipped.head\u003c/code\u003e. You can find all the item paths below."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                br"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                input.form-control(type\u003d\u0027text\u0027,placeholder\u003d\u0027Value (eg, 5)\u0027,v-model\u003d\u0027hero.itemVal\u0027)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                small.muted Enter the \u003cstrong\u003eitem value\u003c/strong\u003e. E.g., \u003ccode\u003e5\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e or \u003ccode\u003ehead_warrior_3\u003c/code\u003e. All values are listed in the All Item Paths section below."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                .accordion"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                  .accordion-group(heading\u003d\u0027All Item Paths\u0027)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                    pre {{allItemPaths}}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                  .accordion-group(heading\u003d\u0027Current Items\u0027)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                    pre {{hero.items}}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            .accordion-group(heading\u003d\u0027Auth\u0027)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "              h4.expand-toggle(:class\u003d\"{\u0027open\u0027: expandAuth}\", @click\u003d\"expandAuth \u003d !expandAuth\") Auth"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "              div(v-if\u003d\"expandAuth\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                pre {{hero.auth}}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                .form-group"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                  .checkbox"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                    label"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                      input(type\u003d\u0027checkbox\u0027, v-if\u003d\u0027hero.flags\u0027, v-model\u003d\u0027hero.flags.chatRevoked\u0027)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                      strong Chat Privileges Revoked"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                .form-group"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                  .checkbox"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                    label"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                      input(type\u003d\u0027checkbox\u0027, v-model\u003d\u0027hero.auth.blocked\u0027)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                      | Blocked"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "          // h4 Backer Status"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "          // Add backer stuff like tier, disable adds, etcs"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "          .form-group"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            button.form-control.btn.btn-primary(@click\u003d\u0027saveHero()\u0027)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "              | {{ $t(\u0027save\u0027) }}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    .table-responsive"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      table.table.table-striped"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        thead"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "          tr"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            th {{ $t(\u0027name\u0027) }}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            th(v-if\u003d\u0027user.contributor \u0026\u0026 user.contributor.admin\u0027) {{ $t(\u0027UUID\u0027) }}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            th {{ $t(\u0027contribLevel\u0027) }}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            th {{ $t(\u0027title\u0027) }}"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            th {{ $t(\u0027contributions\u0027) }}"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        tbody"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "          tr(v-for\u003d\u0027(hero, index) in heroes\u0027)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            td"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "              span(v-if\u003d\u0027hero.contributor \u0026\u0026 hero.contributor.admin\u0027, :popover\u003d\"$t(\u0027gamemaster\u0027)\", popover-trigger\u003d\u0027mouseenter\u0027, popover-placement\u003d\u0027right\u0027)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                .label.label-default(:class\u003d\u0027userLevelStyle(hero)\u0027)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                  | {{hero.profile.name}}\u0026nbsp;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                  //- span(v-class\u003d\u0027userAdminGlyphiconStyle(hero)\u0027)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "              span(v-if\u003d\u0027!hero.contributor || !hero.contributor.admin\u0027)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                .label.label-default(v-if\u003d\u0027hero.profile\u0027, v-class\u003d\u0027userLevelStyle(hero)\u0027) {{hero.profile.name}}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            td(v-if\u003d\u0027user.contributor.admin\u0027, @click\u003d\u0027populateContributorInput(hero._id, index)\u0027).btn-link {{hero._id}}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            td {{hero.contributor.level}}"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            td {{hero.contributor.text}}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            td"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "              div(v-markdown\u003d\u0027hero.contributor.contributions\u0027, target\u003d\u0027_blank\u0027)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/template\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cstyle lang\u003d\"scss\" scoped\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  h4.expand-toggle::after {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-left: 5px;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/style\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cscript\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "import each from \u0027lodash/each\u0027;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "import markdownDirective from \u0027client/directives/markdown\u0027;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "import styleHelper from \u0027client/mixins/styleHelper\u0027;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "import { mapState } from \u0027client/libs/store\u0027;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "import quests from \u0027common/script/content/quests\u0027;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "import { mountInfo, petInfo } from \u0027common/script/content/stable\u0027;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "import { food, hatchingPotions, special } from \u0027common/script/content\u0027;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "import gear from \u0027common/script/content/gear\u0027;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "import notifications from \u0027client/mixins/notifications\u0027;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "export default {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  mixins: [notifications, styleHelper],"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  data () {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    return {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "      heroes: [],"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      hero: {},"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      heroID: \u0027\u0027,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "      currentHeroIndex: -1,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      allItemPaths: this.getAllItemPaths(),"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      quests,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "      mountInfo,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      petInfo,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      food,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      hatchingPotions,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      special,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      gear,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "      expandItems: false,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      expandAuth: false,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "  directives: {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    markdown: markdownDirective,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  async mounted () {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    this.heroes \u003d await this.$store.dispatch(\u0027hall:getHeroes\u0027);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  computed: {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    ...mapState({user: \u0027user.data\u0027}),"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "  methods: {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    getAllItemPaths () {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "      // let questsFormat \u003d this.getFormattedItemReference(\u0027items.quests\u0027, keys(this.quests), \u0027Numeric Quantity\u0027);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "      // let mountsFormat \u003d this.getFormattedItemReference(\u0027items.mounts\u0027, keys(this.mountInfo), \u0027Boolean\u0027);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "      // let foodFormat \u003d this.getFormattedItemReference(\u0027items.food\u0027, keys(this.food), \u0027Numeric Quantity\u0027);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "      // let eggsFormat \u003d this.getFormattedItemReference(\u0027items.eggs\u0027, keys(this.eggs), \u0027Numeric Quantity\u0027);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "      // let hatchingPotionsFormat \u003d this.getFormattedItemReference(\u0027items.hatchingPotions\u0027, keys(this.hatchingPotions), \u0027Numeric Quantity\u0027);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "      // let petsFormat \u003d this.getFormattedItemReference(\u0027items.pets\u0027, keys(this.petInfo), \u0027-1: Owns Mount, 0: Not Owned, 1-49: Progress to mount\u0027);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "      // let specialFormat \u003d this.getFormattedItemReference(\u0027items.special\u0027, keys(this.special), \u0027Numeric Quantity\u0027);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "      // let gearFormat \u003d this.getFormattedItemReference(\u0027items.gear.owned\u0027, keys(this.gear.flat), \u0027Boolean\u0027);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "      //"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "      // let equippedGearFormat \u003d \u0027\u0027; // @TODO: \u0027\\nEquipped Gear:\\n\\titems.gear.{equipped/costume}.{head/headAccessory/eyewear/armor/body/back/shield/weapon}.{gearKey}\\n\u0027;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "      // let equippedPetFormat \u003d \u0027\u0027; // @TODO: \u0027\\nEquipped Pet:\\n\\titems.currentPet.{petKey}\\n\u0027;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "      // let equippedMountFormat \u003d \u0027\u0027; // @TODO: \u0027\\nEquipped Mount:\\n\\titems.currentMount.{mountKey}\\n\u0027;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "      //"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "      // let data \u003d questsFormat.concat(mountsFormat, foodFormat, eggsFormat, hatchingPotionsFormat, petsFormat, specialFormat, gearFormat, equippedGearFormat, equippedPetFormat, equippedMountFormat);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "      //"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "      // return data;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    getFormattedItemReference (pathPrefix, itemKeys, values) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "      let finishedString \u003d \u0027\\n\u0027.concat(\u0027path: \u0027, pathPrefix, \u0027, \u0027, \u0027value: {\u0027, values, \u0027}\\n\u0027);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "      each(itemKeys, (key) \u003d\u003e {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        finishedString \u003d finishedString.concat(\u0027\\t\u0027, pathPrefix, \u0027.\u0027, key, \u0027\\n\u0027);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "      return finishedString;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    async loadHero (uuid, heroIndex) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "      this.currentHeroIndex \u003d heroIndex;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "      let hero \u003d await this.$store.dispatch(\u0027hall:getHero\u0027, { uuid });"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "      this.hero \u003d Object.assign({}, hero);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!this.hero.flags) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        this.hero.flags \u003d {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "          chatRevoked: false,"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "      this.expandItems \u003d false;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "      this.expandAuth \u003d false;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    async saveHero () {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "      this.hero.contributor.admin \u003d this.hero.contributor.level \u003e 7 ? true : false;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "      let heroUpdated \u003d await this.$store.dispatch(\u0027hall:updateHero\u0027, { heroDetails: this.hero });"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "      this.text(\u0027User updated\u0027);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "      this.hero \u003d {};"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "      this.heroID \u003d -1;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "      this.heroes[this.currentHeroIndex] \u003d heroUpdated;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "      this.currentHeroIndex \u003d -1;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    populateContributorInput (id, index) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "      this.heroID \u003d id;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "      window.scrollTo(0, 200);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadHero(id, index);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/script\u003e"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 1,
      "-": 203
    }
  },
  {
    "path": "website/client/components/shops/market/sellModal.vue",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctemplate lang\u003d\"pug\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  b-modal#sell-modal("
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    :hide-header\u003d\"true\","
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    @change\u003d\"onChange($event)\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  )"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    div.close"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "      span.svg-icon.inline.icon-10(aria-hidden\u003d\"true\", v-html\u003d\"icons.close\", @click\u003d\"hideDialog()\")"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    div.content(v-if\u003d\"item\")"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      div.inner-content"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        item.flat("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "          :item\u003d\"item\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "          :itemContentClass\u003d\"itemContextToSell.itemClass\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "          :showPopover\u003d\"false\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        )"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "          countBadge("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            slot\u003d\"itemBadge\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            :show\u003d\"true\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            :count\u003d\"itemContextToSell.itemCount\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "          )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        h4.title {{ itemContextToSell.itemName }}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        div(v-if\u003d\"item.sellWarningNote\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "          div.text {{ item.sellWarningNote() }}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "          br"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "        div(v-else)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "          div"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            div.text {{ item.notes() }}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            div"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "              b.how-many-to-sell {{ $t(\u0027howManyToSell\u0027) }}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            div"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "              b-input.itemsToSell(type\u003d\"number\", v-model\u003d\"selectedAmountToSell\", :max\u003d\"itemContextToSell.itemCount\", min\u003d\"1\", @keyup.native\u003d\"preventNegative($event)\", step\u003d\"1\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "              span.svg-icon.inline.icon-32(aria-hidden\u003d\"true\", v-html\u003d\"icons.gold\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "              span.value {{ item.value }}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            button.btn.btn-primary(@click\u003d\"sellItems()\") {{ $t(\u0027sell\u0027) }}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    div.clearfix(slot\u003d\"modal-footer\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      span.balance.float-left {{ $t(\u0027yourBalance\u0027) }}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      balanceInfo.float-right"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/template\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cstyle lang\u003d\"scss\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  @import \u0027~client/assets/scss/modal.scss\u0027;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  @import \u0027~client/assets/scss/colors.scss\u0027;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  #sell-modal {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @include centeredModal();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    .itemsToSell {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      display: inline-block;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      width: 5em;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    .modal-dialog {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      width: 330px;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    .content {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      text-align: center;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    .inner-content {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      margin: 33px auto auto;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      width: 282px;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    span.svg-icon.inline.icon-32 {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      height: 32px;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      width: 32px;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      margin-left: 24px;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      margin-right: 8px;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      vertical-align: middle;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    .value {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "      width: 28px;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      height: 32px;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      font-size: 24px;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      font-weight: bold;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      line-height: 1.33;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      color: #df911e;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      vertical-align: middle;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    button.btn.btn-primary {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "      margin-top: 24px;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      margin-bottom: 24px;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    .balance {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      width: 74px;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      height: 16px;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      font-size: 12px;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "      font-weight: bold;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "      line-height: 1.33;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "      color: $gray-200;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    .modal-footer {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      height: 48px;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "      background-color: $gray-700;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      border-bottom-right-radius: 8px;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      border-bottom-left-radius: 8px;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      display: block;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    .how-many-to-sell {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      margin-bottom: 16px;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "      display: block;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/style\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cscript\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "  import svgClose from \u0027assets/svg/close.svg\u0027;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  import svgGold from \u0027assets/svg/gold.svg\u0027;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  import svgGem from \u0027assets/svg/gem.svg\u0027;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  import BalanceInfo  from \u0027../balanceInfo.vue\u0027;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "  import Item from \u0027client/components/inventory/item\u0027;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  import CountBadge from \u0027client/components/ui/countBadge\u0027;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "  export default {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    components: {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      BalanceInfo,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "      Item,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      CountBadge,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    data () {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        selectedAmountToSell: 1,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        itemContextToSell: null,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        icons: Object.freeze({"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "          close: svgClose,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "          gold: svgGold,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "          gem: svgGem,"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    computed: {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "      item () {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.itemContextToSell \u0026\u0026 this.itemContextToSell.item;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    mounted () {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "      this.$root.$on(\u0027sellItem\u0027, (itemCtx) \u003d\u003e {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        this.itemContextToSell \u003d itemCtx;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        this.$root.$emit(\u0027bv::show::modal\u0027, \u0027sell-modal\u0027);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    destroyed () {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "      this.$root.$off(\u0027sellItem\u0027);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    methods: {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "      onChange ($event) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        this.$emit(\u0027change\u0027, $event);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        this.selectedAmountToSell \u003d 1;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "      preventNegative ($event) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        let value \u003d $event.target.value;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        if (Number(value) \u003c 0) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "          this.selectedAmountToSell \u003d 0;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "      sellItems () {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Number.isInteger(Number(this.selectedAmountToSell))) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "          this.selectedAmountToSell \u003d 0;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "          return;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        this.$store.dispatch(\u0027shops:sellItems\u0027, {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "          type: this.itemContextToSell.itemType,"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "          key: this.item.key,"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "          amount: this.selectedAmountToSell,"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        this.hideDialog();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "      hideDialog () {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        this.$root.$emit(\u0027bv::hide::modal\u0027, \u0027sell-modal\u0027);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/script\u003e"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 1,
      "-": 194
    }
  },
  {
    "path": "website/server/controllers/api-v3/auth.js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import validator from \u0027validator\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import moment from \u0027moment\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import nconf from \u0027nconf\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  authWithHeaders,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../middlewares/auth\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { model as User } from \u0027../../models/user\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import common from \u0027../../../common\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  NotAuthorized,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  BadRequest,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../libs/errors\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import * as passwordUtils from \u0027../../libs/password\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { send as sendEmail } from \u0027../../libs/email\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import { validatePasswordResetCodeAndFindUser, convertToBcrypt} from \u0027../../libs/password\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import { encrypt } from \u0027../../libs/encryption\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  loginRes,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  hasBackupAuth,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  loginSocial,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  registerLocal,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../libs/auth\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import {verifyUsername} from \u0027../../libs/user/validation\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "const BASE_URL \u003d nconf.get(\u0027BASE_URL\u0027);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "const TECH_ASSISTANCE_EMAIL \u003d nconf.get(\u0027EMAILS_TECH_ASSISTANCE_EMAIL\u0027);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "let api \u003d {};"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " * @api {post} /api/v3/user/auth/local/register Register"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiDescription Register a new user with email, login name, and password or attach local auth to a social user"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiName UserRegisterLocal"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiGroup User"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiParam (Body) {String} username Login name of the new user. Must be 1-36 characters, containing only a-z, 0-9, hyphens (-), or underscores (_)."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiParam (Body) {String} email Email address of the new user"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiParam (Body) {String} password Password for the new user"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiParam (Body) {String} confirmPassword Password confirmation"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiSuccess {Object} data The user object, if local auth was just attached to a social user then only user.auth.local"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "api.registerLocal \u003d {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  method: \u0027POST\u0027,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  middlewares: [authWithHeaders({"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    optional: true,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  })],"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  url: \u0027/user/auth/local/register\u0027,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  async handler (req, res) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    await registerLocal(req, res, { isV3: true });"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": " * @api {post} /api/v3/user/auth/local/login Login"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiDescription Login a user with email / username and password"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiName UserLoginLocal"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiGroup User"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiParam (Body) {String} username Username or email of the user"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiParam (Body) {String} password The user\u0027s password"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiSuccess {String} data._id The user\u0027s unique identifier"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiSuccess {String} data.apiToken The user\u0027s api token that must be used to authenticate requests."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiSuccess {Boolean} data.newUser Returns true if the user was just created (always false for local login)."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "api.loginLocal \u003d {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  method: \u0027POST\u0027,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  url: \u0027/user/auth/local/login\u0027,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  middlewares: [],"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  async handler (req, res) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    req.checkBody({"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "      username: {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        notEmpty: true,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        errorMessage: res.t(\u0027missingUsernameEmail\u0027),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      password: {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        notEmpty: true,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        errorMessage: res.t(\u0027missingPassword\u0027),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    let validationErrors \u003d req.validationErrors();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    if (validationErrors) throw validationErrors;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    req.sanitizeBody(\u0027username\u0027).trim();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    req.sanitizeBody(\u0027password\u0027).trim();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    let login;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    let username \u003d req.body.username;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    let password \u003d req.body.password;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    if (validator.isEmail(String(username))) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "      login \u003d {\u0027auth.local.email\u0027: username.toLowerCase()}; // Emails are stored lowercase"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "      login \u003d {\u0027auth.local.username\u0027: username};"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    // load the entire user because we may have to save it to convert the password to bcrypt"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    let user \u003d await User.findOne(login).exec();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    // if user is using social login, then user will not have a hashed_password stored"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!user || !user.auth.local.hashed_password) throw new NotAuthorized(res.t(\u0027invalidLoginCredentialsLong\u0027));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    let isValidPassword;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!user) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      isValidPassword \u003d false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      isValidPassword \u003d await passwordUtils.compare(user, password);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!isValidPassword) throw new NotAuthorized(res.t(\u0027invalidLoginCredentialsLong\u0027));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    // convert the hashed password to bcrypt from sha1"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    if (user.auth.local.passwordHashMethod \u003d\u003d\u003d \u0027sha1\u0027) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      await passwordUtils.convertToBcrypt(user, password);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      await user.save();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    res.analytics.track(\u0027login\u0027, {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      category: \u0027behaviour\u0027,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "      type: \u0027local\u0027,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "      gaLabel: \u0027local\u0027,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      uuid: user._id,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      headers: req.headers,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    return loginRes(user, ...arguments);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "// Called as a callback by Facebook (or other social providers). Internal route"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "api.loginSocial \u003d {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "  method: \u0027POST\u0027,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  middlewares: [authWithHeaders({"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    optional: true,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "  })],"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "  url: \u0027/user/auth/social\u0027,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "  async handler (req, res) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    return await loginSocial(req, res);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": " * @api {put} /api/v3/user/auth/update-username Update username"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiDescription Update the username of a local user"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiName UpdateUsername"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiGroup User"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiParam (Body) {String} username The new username"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiSuccess {String} data.username The new username"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": " **/"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "api.updateUsername \u003d {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "  method: \u0027PUT\u0027,"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "  middlewares: [authWithHeaders()],"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "  url: \u0027/user/auth/update-username\u0027,"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "  async handler (req, res) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    const user \u003d res.locals.user;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    req.checkBody({"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "      username: {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        notEmpty: {errorMessage: res.t(\u0027missingUsername\u0027)},"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    const validationErrors \u003d req.validationErrors();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    if (validationErrors) throw validationErrors;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    const newUsername \u003d req.body.username;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    const issues \u003d verifyUsername(newUsername, res);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    if (issues.length \u003e 0) throw new BadRequest(issues.join(\u0027 \u0027));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    const password \u003d req.body.password;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    if (password !\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "      let isValidPassword \u003d await passwordUtils.compare(user, password);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!isValidPassword) throw new NotAuthorized(res.t(\u0027wrongPassword\u0027));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    const existingUser \u003d await User.findOne({ \u0027auth.local.lowerCaseUsername\u0027: newUsername.toLowerCase() }, {auth: 1}).exec();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    if (existingUser !\u003d\u003d undefined \u0026\u0026 existingUser !\u003d\u003d null \u0026\u0026 existingUser._id !\u003d\u003d user._id) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new BadRequest(res.t(\u0027usernameTaken\u0027));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    // if password is using old sha1 encryption, change it"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    if (user.auth.local.passwordHashMethod \u003d\u003d\u003d \u0027sha1\u0027 \u0026\u0026 password !\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "      await passwordUtils.convertToBcrypt(user, password); // user is saved a few lines below"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    // save username"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    user.auth.local.lowerCaseUsername \u003d newUsername.toLowerCase();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    user.auth.local.username \u003d newUsername;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!user.flags.verifiedUsername) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "      user.flags.verifiedUsername \u003d true;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "      if (user.items.pets[\u0027Bear-Veteran\u0027]) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        user.items.pets[\u0027Fox-Veteran\u0027] \u003d 5;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (user.items.pets[\u0027Lion-Veteran\u0027]) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        user.items.pets[\u0027Bear-Veteran\u0027] \u003d 5;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (user.items.pets[\u0027Tiger-Veteran\u0027]) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        user.items.pets[\u0027Lion-Veteran\u0027] \u003d 5;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (user.items.pets[\u0027Wolf-Veteran\u0027]) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        user.items.pets[\u0027Tiger-Veteran\u0027] \u003d 5;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        user.items.pets[\u0027Wolf-Veteran\u0027] \u003d 5;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "      user.markModified(\u0027items.pets\u0027);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    await user.save();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    res.respond(200, { username: req.body.username });"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": " * @api {put} /api/v3/user/auth/update-password"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiDescription Update the password of a local user"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiName UpdatePassword"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiGroup User"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiParam (Body) {String} password The old password"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiParam (Body) {String} newPassword The new password"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiParam (Body) {String} confirmPassword New password confirmation"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiSuccess {Object} data An empty object"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": " **/"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "api.updatePassword \u003d {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "  method: \u0027PUT\u0027,"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "  middlewares: [authWithHeaders()],"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "  url: \u0027/user/auth/update-password\u0027,"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "  async handler (req, res) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    let user \u003d res.locals.user;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!user.auth.local.hashed_password) throw new BadRequest(res.t(\u0027userHasNoLocalRegistration\u0027));"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    req.checkBody({"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "      password: {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        notEmpty: {errorMessage: res.t(\u0027missingPassword\u0027)},"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "      newPassword: {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        notEmpty: {errorMessage: res.t(\u0027missingNewPassword\u0027)},"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "      confirmPassword: {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        notEmpty: {errorMessage: res.t(\u0027missingNewPassword\u0027)},"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    let validationErrors \u003d req.validationErrors();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    if (validationErrors) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "      throw validationErrors;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    let oldPassword \u003d req.body.password;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    let isValidPassword \u003d await passwordUtils.compare(user, oldPassword);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!isValidPassword) throw new NotAuthorized(res.t(\u0027wrongPassword\u0027));"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    let newPassword \u003d req.body.newPassword;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    if (newPassword !\u003d\u003d req.body.confirmPassword) throw new NotAuthorized(res.t(\u0027passwordConfirmationMatch\u0027));"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    // set new password and make sure it\u0027s using bcrypt for hashing"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    await passwordUtils.convertToBcrypt(user, newPassword);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "    await user.save();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    res.respond(200, {});"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": " * @api {post} /api/v3/user/reset-password Reset password"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiDescription Send the user an email to let them reset their password"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiName ResetPassword"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiGroup User"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiParam (Body) {String} email The email address of the user"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiSuccess {String} message The localized success message"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": " **/"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "api.resetPassword \u003d {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "  method: \u0027POST\u0027,"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "  middlewares: [],"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "  url: \u0027/user/reset-password\u0027,"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "  async handler (req, res) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "    req.checkBody({"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "      email: {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        notEmpty: {errorMessage: res.t(\u0027missingEmail\u0027)},"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    let validationErrors \u003d req.validationErrors();"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    if (validationErrors) throw validationErrors;"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "    let email \u003d req.body.email.toLowerCase();"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    let user \u003d await User.findOne({ \u0027auth.local.email\u0027: email }).exec();"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    if (user) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "      // create an encrypted link to be used to reset the password"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "      const passwordResetCode \u003d encrypt(JSON.stringify({"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        userId: user._id,"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        expiresAt: moment().add({ hours: 24 }),"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "      }));"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "      let link \u003d `${BASE_URL}/static/user/auth/local/reset-password-set-new-one?code\u003d${passwordResetCode}`;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "      user.auth.local.passwordResetCode \u003d passwordResetCode;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "      sendEmail({"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        from: \u0027Habitica \u003cadmin@habitica.com\u003e\u0027,"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        to: email,"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        subject: res.t(\u0027passwordResetEmailSubject\u0027),"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        text: res.t(\u0027passwordResetEmailText\u0027, {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "          username: user.auth.local.username,"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "          passwordResetLink: link,"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        html: res.t(\u0027passwordResetEmailHtml\u0027, {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "          username: user.auth.local.username,"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "          passwordResetLink: link,"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "      await user.save();"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    res.respond(200, {}, res.t(\u0027passwordReset\u0027));"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": " * @api {put} /api/v3/user/auth/update-email Update email"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiDescription Change the user email address"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiName UpdateEmail"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiGroup User"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiParam (Body) {String} newEmail The new email address."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiParam (Body) {String} password The user password."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiSuccess {String} data.email The updated email address"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "api.updateEmail \u003d {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "  method: \u0027PUT\u0027,"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "  middlewares: [authWithHeaders()],"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "  url: \u0027/user/auth/update-email\u0027,"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "  async handler (req, res) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "    let user \u003d res.locals.user;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!user.auth.local.email) throw new BadRequest(res.t(\u0027userHasNoLocalRegistration\u0027));"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "    req.checkBody(\u0027newEmail\u0027, res.t(\u0027newEmailRequired\u0027)).notEmpty().isEmail();"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "    req.checkBody(\u0027password\u0027, res.t(\u0027missingPassword\u0027)).notEmpty();"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "    let validationErrors \u003d req.validationErrors();"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "    if (validationErrors) throw validationErrors;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "    let emailAlreadyInUse \u003d await User.findOne({"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027auth.local.email\u0027: req.body.newEmail.toLowerCase(),"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "    }).select({_id: 1}).lean().exec();"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "    if (emailAlreadyInUse) throw new NotAuthorized(res.t(\u0027cannotFulfillReq\u0027, { techAssistanceEmail: TECH_ASSISTANCE_EMAIL }));"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "    let password \u003d req.body.password;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "    let isValidPassword \u003d await passwordUtils.compare(user, password);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!isValidPassword) throw new NotAuthorized(res.t(\u0027wrongPassword\u0027));"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "    // if password is using old sha1 encryption, change it"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "    if (user.auth.local.passwordHashMethod \u003d\u003d\u003d \u0027sha1\u0027) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "      await passwordUtils.convertToBcrypt(user, password);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "    user.auth.local.email \u003d req.body.newEmail.toLowerCase();"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "    await user.save();"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "    return res.respond(200, { email: user.auth.local.email });"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": " * @api {post} /api/v3/user/auth/reset-password-set-new-one Reser Password Set New one"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiDescription Set a new password for a user that reset theirs. Not meant for public usage."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiName ResetPasswordSetNewOne"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiGroup User"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiParam (Body) {String} newPassword The new password."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiParam (Body) {String} confirmPassword Password confirmation."
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiSuccess {String} data An empty object"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiSuccess {String} data Success message"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "api.resetPasswordSetNewOne \u003d {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "  method: \u0027POST\u0027,"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "  url: \u0027/user/auth/reset-password-set-new-one\u0027,"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "  async handler (req, res) {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "    let user \u003d await validatePasswordResetCodeAndFindUser(req.body.code);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "    let isValidCode \u003d Boolean(user);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!isValidCode) throw new NotAuthorized(res.t(\u0027invalidPasswordResetCode\u0027));"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "    req.checkBody(\u0027newPassword\u0027, res.t(\u0027missingNewPassword\u0027)).notEmpty();"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "    req.checkBody(\u0027confirmPassword\u0027, res.t(\u0027missingNewPassword\u0027)).notEmpty();"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "    let validationErrors \u003d req.validationErrors();"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "    if (validationErrors) throw validationErrors;"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "    let newPassword \u003d req.body.newPassword;"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "    let confirmPassword \u003d req.body.confirmPassword;"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "    if (newPassword !\u003d\u003d confirmPassword) {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new BadRequest(res.t(\u0027passwordConfirmationMatch\u0027));"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "    // set new password and make sure it\u0027s using bcrypt for hashing"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "    await convertToBcrypt(user, String(newPassword));"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "    user.auth.local.passwordResetCode \u003d undefined; // Reset saved password reset code"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "    await user.save();"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "    return res.respond(200, {}, res.t(\u0027passwordChangeSuccess\u0027));"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": " * @api {delete} /api/v3/user/auth/social/:network Delete social authentication method"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiDescription Remove a social authentication method (only facebook supported) from a user profile. The user must have local authentication enabled"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiName UserDeleteSocial"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiGroup User"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiSuccess {Object} data Empty object"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "api.deleteSocial \u003d {"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "  method: \u0027DELETE\u0027,"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "  url: \u0027/user/auth/social/:network\u0027,"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "  middlewares: [authWithHeaders()],"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "  async handler (req, res) {"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "    let user \u003d res.locals.user;"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "    let network \u003d req.params.network;"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "    let isSupportedNetwork \u003d common.constants.SUPPORTED_SOCIAL_NETWORKS.find(supportedNetwork \u003d\u003e {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "      return supportedNetwork.key \u003d\u003d\u003d network;"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!isSupportedNetwork) throw new BadRequest(res.t(\u0027unsupportedNetwork\u0027));"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!hasBackupAuth(user, network)) throw new NotAuthorized(res.t(\u0027cantDetachSocial\u0027));"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "    let unset \u003d {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "      [`auth.${network}`]: 1,"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "    await User.update({_id: user._id}, {$unset: unset}).exec();"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "    res.respond(200, {});"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "module.exports \u003d api;"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 2,
      "-": 443
    }
  },
  {
    "path": "website/server/controllers/api-v3/hall.js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { authWithHeaders } from \u0027../../middlewares/auth\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ensureAdmin } from \u0027../../middlewares/ensureAccessRight\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { model as User } from \u0027../../models/user\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  NotFound,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../libs/errors\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import _ from \u0027lodash\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import apiError from \u0027../../libs/apiError\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "import validator from \u0027validator\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { validateItemPath } from \u0027../../libs/items/utils\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "let api \u003d {};"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * @api {get} /api/v3/hall/patrons Get all patrons"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiDescription Returns an array of objects containing the patrons who backed Habitica\u0027s"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * original kickstarter. The array is sorted by the backer tier in descending order."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * By default, only the first 50 patrons are returned. More can be accessed by passing ?page\u003dn"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiName GetPatrons"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiGroup Hall"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiParam (Query) {Number} [page\u003d0] The result page."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiSuccess {Array} data An array of patrons"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiSuccessExample {json} Example response"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " *   \"success\": true,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " *   \"data\": ["
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " *     {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " *       \"_id\": \"3adb52a9-0dfb-4752-81f2-a62d911d1bf5\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " *       \"profile\": {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": " *         \"name\": \"mattboch\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " *       },"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " *       \"contributor\": {},"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " *       \"backer\": {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " *         \"tier\": 800,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " *         \"npc\": \"Beast Master\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": " *       }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": " *     },"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": " *     {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": " *       \"_id\": \"9da65443-ed43-4c21-804f-d260c1361596\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": " *       \"profile\": {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": " *         \"name\": \"ʎǝlᴉɐq s,┴I\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": " *       },"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": " *       \"contributor\": {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": " *         \"text\": \"Pollen Purveyor\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": " *         \"admin\": true,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": " *         \"level\": 8"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": " *       },"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": " *       \"backer\": {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": " *         \"npc\": \"Town Crier\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": " *         \"tier\": 800,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": " *         \"tokensApplied\": true"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": " *       }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": " *     }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": " *   ]"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": " * }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiUse NoAuthHeaders"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiUse NoAccount"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "api.getPatrons \u003d {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  method: \u0027GET\u0027,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  url: \u0027/hall/patrons\u0027,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  middlewares: [authWithHeaders()],"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  async handler (req, res) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    req.checkQuery(\u0027page\u0027).optional().isInt({min: 0}, apiError(\u0027queryPageInteger\u0027));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    let validationErrors \u003d req.validationErrors();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    if (validationErrors) throw validationErrors;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    let page \u003d req.query.page ? Number(req.query.page) : 0;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    const perPage \u003d 50;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    let patrons \u003d await User"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      .find({"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027backer.tier\u0027: {$gt: 0},"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "      .select(\u0027contributor backer profile.name\u0027)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "      .sort(\u0027-backer.tier\u0027)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "      .skip(page * perPage)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "      .limit(perPage)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      .lean()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      .exec();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    res.respond(200, patrons);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": " * @api {get} /api/v3/hall/heroes Get all Heroes"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiName GetHeroes"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiGroup Hall"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiDescription Returns an array of objects containing the heroes who have"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": " * contributed for Habitica. The array is sorted by the contribution level in descending order."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiSuccess {Array} heroes An array of heroes"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiSuccessExample {json} Example response:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": " * {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": " *   \"success\": true,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": " *   \"data\": ["
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": " *    {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": " *      \"_id\": \"e6e01d2a-c2fa-4b9f-9c0f-7865b777e7b5\","
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": " *      \"profile\": {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": " *        \"name\": \"test2\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": " *      },"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": " *      \"contributor\": {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": " *        \"admin\": false,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": " *        \"level\": 2,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": " *        \"text\": \"Linguist\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": " *      },"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": " *      \"backer\": {}"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": " *     }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": " *   ]"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": " * }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiUse NoAuthHeaders"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiUse NoAccount"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "api.getHeroes \u003d {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  method: \u0027GET\u0027,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  url: \u0027/hall/heroes\u0027,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "  middlewares: [authWithHeaders()],"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  async handler (req, res) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    let heroes \u003d await User"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      .find({"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027contributor.level\u0027: {$gt: 0},"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      .select(\u0027contributor backer profile.name\u0027)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      .sort(\u0027-contributor.level\u0027)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "      .lean()"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      .exec();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    res.respond(200, heroes);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "// Note, while the following routes are called getHero / updateHero"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "// they can be used by admins to get/update any user"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "const heroAdminFields \u003d \u0027contributor balance profile.name purchased items auth flags.chatRevoked\u0027;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": " * @api {get} /api/v3/hall/heroes/:heroId Get any user (\"hero\") given the UUID or Username"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiParam (Path) {UUID} heroId user ID"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiName GetHero"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiGroup Hall"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiPermission Admin"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiDescription Returns the profile of the given user"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiSuccess {Object} data The user object"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiUse NoAuthHeaders"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiUse NoAccount"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiUse NoUser"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiUse NotAdmin"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "api.getHero \u003d {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "  method: \u0027GET\u0027,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "  url: \u0027/hall/heroes/:heroId\u0027,"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "  middlewares: [authWithHeaders(), ensureAdmin],"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "  async handler (req, res) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    let validationErrors;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    req.checkParams(\u0027heroId\u0027, res.t(\u0027heroIdRequired\u0027)).notEmpty();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    validationErrors \u003d req.validationErrors();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    if (validationErrors) throw validationErrors;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    const heroId \u003d req.params.heroId;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    let query;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    if (validator.isUUID(heroId)) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "      query \u003d {_id: heroId};"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "      query \u003d {\u0027auth.local.lowerCaseUsername\u0027: heroId.toLowerCase()};"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "    const hero \u003d await User"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ChesterSng"
        },
        "content": "      .findOne(query)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "      .select(heroAdminFields)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "      .exec();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!hero) throw new NotFound(res.t(\u0027userWithIDNotFound\u0027, {userId: heroId}));"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    let heroRes \u003d hero.toJSON({minimize: true});"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    // supply to the possible absence of hero.contributor"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    // if we didn\u0027t pass minimize: true it would have returned all fields as empty"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!heroRes.contributor) heroRes.contributor \u003d {};"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    res.respond(200, heroRes);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "// e.g., tier 5 gives 4 gems. Tier 8 \u003d moderator. Tier 9 \u003d staff"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "const gemsPerTier \u003d {1: 3, 2: 3, 3: 3, 4: 4, 5: 4, 6: 4, 7: 4, 8: 0, 9: 0};"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": " * @api {put} /api/v3/hall/heroes/:heroId Update any user (\"hero\")"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiParam (Path) {UUID} heroId User ID"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiName UpdateHero"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiGroup Hall"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiPermission Admin"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiDescription Update user\u0027s gem balance, contributions \u0026 contribution tier and admin status. Grant items, block / unblock user\u0027s account and revoke / unrevoke chat privileges."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiExample Example Body:"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": " * {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": " *    \"balance\": 1000,"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": " *    \"auth\": {\"blocked\": false},"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": " *    \"flags\": {\"chatRevoked\": true},"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": " *    \"purchased\": {\"ads\": true},"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": " *    \"contributor\": {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": " *      \"admin\": true,"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": " *      \"contributions\": \"Improving API documentation\","
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": " *      \"level\": 5,"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": " *      \"text\": \"Scribe, Blacksmith\""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": " *    },"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": " *    \"itemPath\": \"items.pets.BearCub-Skeleton\","
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": " *    \"itemVal\": 1"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": " * }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiSuccess {Object} data The updated user object"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiUse NoAuthHeaders"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiUse NoAccount"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiUse NoUser"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": " * @apiUse NotAdmin"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "api.updateHero \u003d {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "  method: \u0027PUT\u0027,"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "  url: \u0027/hall/heroes/:heroId\u0027,"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "  middlewares: [authWithHeaders(), ensureAdmin],"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "  async handler (req, res) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    let heroId \u003d req.params.heroId;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    let updateData \u003d req.body;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    req.checkParams(\u0027heroId\u0027, res.t(\u0027heroIdRequired\u0027)).notEmpty().isUUID();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    let validationErrors \u003d req.validationErrors();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    if (validationErrors) throw validationErrors;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    let hero \u003d await User.findById(heroId).exec();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!hero) throw new NotFound(res.t(\u0027userWithIDNotFound\u0027, {userId: heroId}));"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    if (updateData.balance) hero.balance \u003d updateData.balance;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    // give them gems if they got an higher level"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    let newTier \u003d updateData.contributor \u0026\u0026 updateData.contributor.level; // tier \u003d level in this context"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    let oldTier \u003d hero.contributor \u0026\u0026 hero.contributor.level || 0;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    if (newTier \u003e oldTier) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "      hero.flags.contributor \u003d true;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "      let tierDiff \u003d newTier - oldTier; // can be 2+ tier increases at once"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "      while (tierDiff) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        hero.balance +\u003d gemsPerTier[newTier] / 4; // balance is in $"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        tierDiff--;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        newTier--; // give them gems for the next tier down if they weren\u0027t aready that tier"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "      hero.addNotification(\u0027NEW_CONTRIBUTOR_LEVEL\u0027);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    if (updateData.contributor) _.assign(hero.contributor, updateData.contributor);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    if (updateData.purchased \u0026\u0026 updateData.purchased.ads) hero.purchased.ads \u003d updateData.purchased.ads;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    // give them the Dragon Hydra pet if they\u0027re above level 6"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    if (hero.contributor.level \u003e\u003d 6) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "      hero.items.pets[\u0027Dragon-Hydra\u0027] \u003d 5;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "      hero.markModified(\u0027items.pets\u0027);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "    if (updateData.itemPath \u0026\u0026 updateData.itemVal \u0026\u0026 validateItemPath(updateData.itemPath)) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "      _.set(hero, updateData.itemPath, updateData.itemVal); // Sanitization at 5c30944 (deemed unnecessary)"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    if (updateData.auth \u0026\u0026 updateData.auth.blocked \u003d\u003d\u003d true) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "      hero.auth.blocked \u003d updateData.auth.blocked;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "      hero.preferences.sleep \u003d true; // when blocking, have them rest at an inn to prevent damage"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "    if (updateData.auth \u0026\u0026 updateData.auth.blocked \u003d\u003d\u003d false) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "      hero.auth.blocked \u003d false;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "    if (updateData.flags \u0026\u0026 _.isBoolean(updateData.flags.chatRevoked)) hero.flags.chatRevoked \u003d updateData.flags.chatRevoked;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    let savedHero \u003d await hero.save();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    let heroJSON \u003d savedHero.toJSON();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    let responseHero \u003d {_id: heroJSON._id}; // only respond with important fields"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    heroAdminFields.split(\u0027 \u0027).forEach(field \u003d\u003e {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "      _.set(responseHero, field, _.get(heroJSON, field));"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    res.respond(200, responseHero);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "module.exports \u003d api;"
      }
    ],
    "authorContributionMap": {
      "ChesterSng": 15,
      "-": 283
    }
  }
]
