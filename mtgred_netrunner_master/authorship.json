[
  {
    "path": "src/clj/game/cards/agendas.clj",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "(ns game.cards.agendas"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  (:require [game.core :refer :all]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "            [game.core.eid :refer [effect-completed]]"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "            [game.utils :refer :all]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "            [game.macros :refer [effect req msg wait-for continue-ability]]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "            [clojure.string :refer [split-lines split join lower-case includes? starts-with?]]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "            [clojure.stacktrace :refer [print-stack-trace]]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "            [jinteki.utils :refer [str-\u003eint other-side is-tagged? count-tags has-subtype?]]))"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "(defn ice-boost-agenda [subtype]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  (letfn [(count-ice [corp]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            (reduce (fn [c server]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                      (+ c (count (filter #(and (has-subtype? % subtype)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                                                (rezzed? %))"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                                          (:ices server)))))"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                    0 (flatten (seq (:servers corp)))))]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    {:msg (msg \"gain \" (count-ice corp) \" [Credits]\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     :interactive (req true)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     :effect (effect (gain-credits (count-ice corp))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                     (update-all-ice))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     :swapped {:effect (req (update-all-ice state side))}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     :events {:pre-ice-strength {:req (req (has-subtype? target subtype))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :effect (effect (ice-strength-bonus 1 target))}}}))"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ";; Card definitions"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "(def card-definitions"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  {\"15 Minutes\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   {:abilities [{:cost [:click 1] :msg \"shuffle 15 Minutes into R\u0026D\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                 :label \"Shuffle 15 Minutes into R\u0026D\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (req (let [corp-agendas (get-in corp [:scored])"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                                    agenda-owner (if (some #(same-card? % card) corp-agendas) :corp :runner)]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                                (gain-agenda-point state agenda-owner (- (:agendapoints card))))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                              ; refresh agendapoints to 1 before shuffle in case it was modified by e.g. The Board"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                              (move state :corp (dissoc (assoc card :agendapoints 1) :seen :rezzed) :deck {:front true})"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                              (shuffle! state :corp :deck))}]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    :flags {:has-abilities-when-stolen true}}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Accelerated Beta Test\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(abt [n i]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "             (if (pos? i)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "               {:async true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                :prompt \"Select a piece of ICE from the Temporary Zone to install\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                :choices {:req #(and (corp? %)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (ice? %)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (in-play-area? %))}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                :effect (req (wait-for (corp-install state side target nil"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     {:ignore-all-cost true :install-state :rezzed-no-cost})"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                                       (let [card (get-card state card)]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (unregister-events state side card)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (if (not (:shuffle-occurred card))"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (if (\u003c n i)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (continue-ability state side (abt (inc n) i) card nil)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (do (doseq [c (get-in @state [:corp :play-area])]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   (system-msg state side \"trashes a card\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   (trash state side c {:unpreventable true}))"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 (effect-completed state side eid)))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (do (doseq [c (get-in @state [:corp :play-area])]"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 (move state side c :deck))"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                                               (shuffle! state side :deck)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                                               (effect-completed state side eid))))))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                :cancel-effect (req (doseq [c (get-in @state [:corp :play-area])]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (system-msg state side \"trashes a card\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (trash state side c {:unpreventable true})))}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "               {:prompt \"None of the cards are ice. Say goodbye!\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                :choices [\"I have no regrets\"]"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                :effect (req (doseq [c (get-in @state [:corp :play-area])]"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                               (system-msg state side \"trashes a card\")"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                               (trash state side c {:unpreventable true})))}))]"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     {:interactive (req true)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      :optional {:prompt \"Look at the top 3 cards of R\u0026D?\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                 :yes-ability {:async true"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                               :msg \"look at the top 3 cards of R\u0026D\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                               :effect (req (register-events state side"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             {:corp-shuffle-deck"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                                                              {:effect (effect (update! (assoc card :shuffle-occurred true)))}}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             card)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (let [n (count (filter ice? (take 3 (:deck corp))))]"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (doseq [c (take (min (count (:deck corp)) 3) (:deck corp))]"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (move state side c :play-area))"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (continue-ability state side (abt 1 n) card nil)))}}})"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Advanced Concept Hopper\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    {:run"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     {:req (req (first-event? state side :run))"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      :effect (effect (show-wait-prompt :runner \"Corp to use Advanced Concept Hopper\")"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                      (continue-ability"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                        {:player :corp"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                         :prompt \"Use Advanced Concept Hopper to draw 1 card or gain 1 [Credits]?\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                         :once :per-turn"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                         :choices [\"Draw 1 card\" \"Gain 1 [Credits]\" \"No action\"]"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                         :effect (req (case target"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                                        \"Gain 1 [Credits]\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                                        (do (gain-credits state :corp 1)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                                            (system-msg state :corp (str \"uses Advanced Concept Hopper to gain 1 [Credits]\")))"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                                        \"Draw 1 card\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                                        (do (draw state :corp)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                                            (system-msg state :corp (str \"uses Advanced Concept Hopper to draw 1 card\")))"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                                        \"No action\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                                        (system-msg state :corp (str \"doesn\u0027t use Advanced Concept Hopper\")))"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (clear-wait-prompt state :runner)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (effect-completed state side eid))}"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                        card nil))}}}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Ancestral Imager\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:jack-out {:msg \"do 1 net damage\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                        :effect (effect (damage :net 1))}}}"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "   \"AR-Enhanced Security\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:runner-trash {:once :per-turn"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                            :async true"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                            :req (req (some corp? targets))"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                            :msg \"give the Runner a tag for trashing a Corp card\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                            :effect (effect (gain-tags eid 1))}}}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Architect Deployment Test\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "   {:interactive (req true)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    :async true"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    :msg \"look at the top 5 cards of R\u0026D\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    :prompt (msg \"The top cards of R\u0026D are (top-\u003ebottom) \" (join \", \" (map :title (take 5 (:deck corp)))))"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    :choices [\"OK\"]"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (continue-ability"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                      {:prompt \"Install a card?\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                       :choices (filter corp-installable-type? (take 5 (:deck corp)))"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                       :effect (effect (corp-install eid target nil"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     {:ignore-all-cost true"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                                                      :install-state :rezzed-no-rez-cost}))"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                       :cancel-effect (effect (system-msg \"does not install any of the top 5 cards\")"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                                              (effect-completed eid))}"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                      card nil))}"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Armed Intimidation\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "   {:async true"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (show-wait-prompt :corp \"Runner to suffer 5 meat damage or take 2 tags\")"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                    (continue-ability"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                      :runner"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                      {:async true"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                       :choices [\"Suffer 5 meat damage\" \"Take 2 tags\"]"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                       :prompt \"Choose Armed Intimidation score effect\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                       :effect (req (clear-wait-prompt state :corp)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (case target"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \"Suffer 5 meat damage\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (do (damage state :runner eid :meat 5 {:card card :unboostable true})"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                                          (system-msg state :runner \"chooses to suffer 5 meat damage from Armed Intimidation\"))"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                                      \"Take 2 tags\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (do (gain-tags state :runner eid 2 {:card card})"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                                          (system-msg state :runner \"chooses to take 2 tags from Armed Intimidation\"))))}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                      card nil))}"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Armored Servers\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "   {:implementation \"Runner must trash cards manually when required\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (add-counter card :agenda 1))"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    :silent (req true)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:counter-cost [:agenda 1]"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                 :req (req (:run @state))"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"make the Runner trash a card from their grip to jack out or break subroutines for the remainder of the run\"}]}"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "   \"AstroScript Pilot Program\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "   {:effect (effect (add-counter card :agenda 1))"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    :silent (req true)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:counter-cost [:agenda 1]"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg (msg \"place 1 advancement token on \" (card-str state target))"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                 :choices {:req can-be-advanced?}"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (add-prop target :advance-counter 1 {:placed true}))}]}"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Award Bait\""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "   {:flags {:rd-reveal (req true)}"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    :access {:async true"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "             :req (req (not-empty (filter #(can-be-advanced? %) (all-installed state :corp))))"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "             :effect (effect (show-wait-prompt :runner \"Corp to place advancement tokens with Award Bait\")"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                             (continue-ability"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                               {:async true"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                                :choices [\"0\", \"1\", \"2\"]"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                                :prompt \"How many advancement tokens?\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                                :effect (req (let [c (str-\u003eint target)]"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                                               (continue-ability"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 state side"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 {:choices {:req can-be-advanced?}"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  :msg (msg \"place \" c \" advancement tokens on \" (card-str state target))"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  :cancel-effect (req (clear-wait-prompt state :runner)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                      (effect-completed state side eid))"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  :effect (effect (add-prop :corp target :advance-counter c {:placed true})"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                  (clear-wait-prompt :runner))} card nil)))}"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                               card nil))}}"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Bacterial Programming\""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(hq-step [remaining to-trash to-hq]"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "             {:async true"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "              :prompt \"Select a card to move to HQ\""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "              :choices (conj (vec remaining) \"Done\")"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (if (\u003d \"Done\" target)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                             (do"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                               (doseq [t to-trash]"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (trash state :corp t {:unpreventable true}))"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                               (doseq [h to-hq]"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (move state :corp h :hand))"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "                               (if (not-empty remaining)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (continue-ability state :corp (reorder-choice :corp (vec remaining)) card nil)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (do (clear-wait-prompt state :runner)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (effect-completed state :corp eid)))"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                               (system-msg state :corp (str \"uses Bacterial Programming to add \" (count to-hq)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            \" cards to HQ, discard \" (count to-trash)"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            \", and arrange the top cards of R\u0026D\")))"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                             (continue-ability state :corp (hq-step"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             (clojure.set/difference (set remaining) (set [target]))"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             to-trash"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             (conj to-hq target)) card nil)))})"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "           (trash-step [remaining to-trash]"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "             {:async true"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "              :prompt \"Select a card to discard\""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "              :choices (conj (vec remaining) \"Done\")"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (if (\u003d \"Done\" target)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                             (continue-ability state :corp (hq-step remaining to-trash `()) card nil)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                             (continue-ability state :corp (trash-step"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             (clojure.set/difference (set remaining) (set [target]))"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             (conj to-trash target)) card nil)))})]"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "     (let [arrange-rd (effect (continue-ability"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                                {:optional"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "                                 {:async true"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "                                  :prompt \"Arrange top 7 cards of R\u0026D?\""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                                  :yes-ability {:async true"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                                                :effect (req (let [c (take 7 (:deck corp))]"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                                                               (when (:run @state)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                 (swap! state assoc-in [:run :shuffled-during-access :rd] true))"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                                                               (show-wait-prompt state :runner \"Corp to use Bacterial Programming\")"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "                                                               (continue-ability state :corp (trash-step c `()) card nil)))}}}"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                                card nil))]"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "       {:effect arrange-rd"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        :async true"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        :stolen {:async true"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect arrange-rd}"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        :interactive (req true)}))"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Better Citizen Program\""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(ability [kind]"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "             (effect (show-wait-prompt :runner \"Corp to use Better Citizen Program\")"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "                     (continue-ability"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                       :corp"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                       {:optional"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                        {:prompt \"Give the runner 1 tag?\""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                         :yes-ability {:async true"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                                       :msg (str \"give the Runner a tag for \" kind)"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                                       :effect (req (swap! state assoc-in [:per-turn (:cid card)] true)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    (gain-tags state :corp eid 1))}"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                         :end-effect (effect (clear-wait-prompt :runner))}}"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                       card nil)))]"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "     {:events {:play-event {:req (req (and (first-event? state :runner :run)"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (has-subtype? target \"Run\")"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (not (used-this-turn? (:cid card) state))))"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                            :async true"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "                            :effect (ability \"playing a run event\")}"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "               :runner-install {:silent (req true)"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "                                :req (req (and (has-subtype? target \"Icebreaker\")"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "                                               (first-event? state :runner :runner-install #(has-subtype? (first %) \"Icebreaker\"))"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "                                               (not (used-this-turn? (:cid card) state))))"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "                                :async true"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "                                :effect (ability \"installing an icebreaker\")}}})"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Bifrost Array\""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "   {:req (req (not (empty? (filter #(not\u003d (:title %)"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "                                          \"Bifrost Array\")"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "                                   (:scored corp)))))"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    :optional {:prompt \"Trigger the ability of a scored agenda?\""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "               :yes-ability {:prompt \"Select an agenda to trigger the \\\"when scored\\\" ability of\""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "                             :choices {:req #(and (agenda? %)"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  (not\u003d (:title %)"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        \"Bifrost Array\")"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  (\u003d (first (:zone %))"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     :scored)"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  (when-scored? %)"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  (:abilities %))}"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "                             :msg (msg \"trigger the \\\"when scored\\\" ability of \" (:title target))"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "                             :effect (effect (continue-ability (card-def target) target nil))}"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "               :no-ability {:effect (effect (clear-wait-prompt :runner))}}}"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Brain Rewiring\""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "   {:effect (effect (show-wait-prompt :runner \"Corp to use Brain Rewiring\")"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "                    (resolve-ability"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                      {:optional"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "                       {:prompt \"Pay credits to add random cards from Runner\u0027s Grip to the bottom of their Stack?\""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "                        :yes-ability {:prompt \"How many credits?\""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "                                      :choices {:number (req (min (:credit corp)"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                  (count (:hand runner))))}"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "                                      :async true"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "                                      :effect (req (when (pos? target)"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     (pay state :corp card :credit target)"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     (let [from (take target (shuffle (:hand runner)))]"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "                                                       (doseq [c from]"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "                                                         (move state :runner c :deck))"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "                                                       (system-msg state side (str \"uses Brain Rewiring to pay \" target"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                   \" [Credits] and add \" target"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                   \" cards from the Runner\u0027s Grip\""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                   \" to the bottom of their Stack.\""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                   \" The Runner draws 1 card\"))"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "                                                       (wait-for (draw state :runner 1 nil)"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                 (clear-wait-prompt state :runner)"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                 (effect-completed state side eid)))))}"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                        :no-ability {:effect (effect (clear-wait-prompt :runner))}}}"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "                      card nil))}"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Braintrust\""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "   {:effect (effect (add-counter card :agenda (quot (- (get-counters card :advancement) 3) 2)))"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "    :silent (req true)"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "    :events {:pre-rez-cost {:req (req (ice? target))"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "                            :effect (req (rez-cost-bonus state side (- (get-counters card :agenda))))}}}"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Breaking News\""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "   {:async true"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (gain-tags :corp eid 2)"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "                    (register-events"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "                      {:corp-turn-ends {:msg \"make the Runner lose 2 tags\""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "                                        :effect (effect (lose :runner :tag 2)"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        (unregister-events card))}"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "                       :runner-turn-ends {:msg \"make the Runner lose 2 tags\""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "                                          :effect (effect (lose :runner :tag 2)"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          (unregister-events card))}}"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "                      card))"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "    :silent (req true)"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "    :msg \"give the Runner 2 tags\""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "    :events {:corp-turn-ends nil"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "             :runner-turn-ends nil}}"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Broad Daylight\""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(add-counters [state side card eid]"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "             (let [bp (get-in @state [:corp :bad-publicity] 0)]"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "               (add-counter state :corp card :agenda bp)"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "               (effect-completed state side eid)))]"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "     {:effect (effect"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "                (continue-ability"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "                  {:optional"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "                   {:prompt \"Take 1 bad publicity?\""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "                    :async true"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "                    :yes-ability {:effect (req (wait-for (gain-bad-publicity state :corp 1)"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                                                         (system-msg state :corp \"used Broad Daylight to take 1 bad publicity\")"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "                                                         (add-counters state side card eid)))}"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "                    :no-ability {:effect (effect (add-counters card eid))}}}"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "                  card nil))"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "      :abilities [{:cost [:click 1]"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                   :counter-cost [:agenda 1]"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "                   :async true"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                   :label \"Do 2 meat damage\""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "                   :once :per-turn"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "                   :msg \"do 2 meat damage\""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "                   :effect (effect (damage eid :meat 2 {:card card}))}]})"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "   \"CFC Excavation Contract\""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "   {:effect (req (let [bios (count (filter #(has-subtype? % \"Bioroid\") (all-active-installed state :corp)))"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "                       bucks (* bios 2)]"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                   (gain-credits state side bucks)"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "                   (system-msg state side (str \"gains \" bucks \" [Credits] from CFC Excavation Contract\"))))}"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Character Assassination\""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "   {:prompt \"Select a resource to trash\""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "    :choices {:req #(and (installed? %)"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "                         (resource? %))}"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "    :msg (msg \"trash \" (:title target))"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "    :interactive (req true)"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "    :async true"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (trash eid target {:unpreventable true}))}"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Chronos Project\""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "   {:msg \"remove all cards in the Runner\u0027s Heap from the game\""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "    :interactive (req true)"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (move-zone :runner :discard :rfg))}"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "   \"City Works Project\""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(meat-damage [s c] (+ 2 (get-counters (get-card s c) :advancement)))]"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "     {:install-state :face-up"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "      :access {:req (req installed)"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "               :msg (msg \"do \" (meat-damage state card) \" meat damage\")"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "               :async true"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "               :effect (effect (damage eid :meat (meat-damage state card) {:card card}))}})"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Clone Retirement\""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "   {:msg \"remove 1 bad publicity\""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (lose-bad-publicity 1))"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "    :silent (req true)"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "    :stolen {:msg \"force the Corp to take 1 bad publicity\""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "             :effect (effect (gain-bad-publicity :corp 1))}}"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Corporate Sales Team\""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [e {:effect (req (when (pos? (get-counters card :credit))"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "                           (gain-credits state :corp 1)"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "                           (system-msg state :corp (str \"uses Corporate Sales Team to gain 1 [Credits]\"))"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "                           (add-counter state side card :credit -1)))}]"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "     {:effect (effect (add-counter card :credit 10))"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "      :silent (req true)"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "      :events {:runner-turn-begins e"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "               :corp-turn-begins e}})"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Corporate War\""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "   {:msg (msg (if (\u003e (:credit corp) 6) \"gain 7 [Credits]\" \"lose all credits\"))"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "    :interactive (req true)"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (req (if (\u003e (:credit corp) 6)"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "                   (gain-credits state :corp 7) (lose-credits state :corp :all)))}"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Crisis Management\""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [ability {:req (req tagged)"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "                  :async true"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "                  :label \"Do 1 meat damage (start of turn)\""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "                  :once :per-turn"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "                  :msg \"do 1 meat damage\""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "                  :effect (effect (damage eid :meat 1 {:card card}))}]"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "     {:events {:corp-turn-begins ability}"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "      :abilities [ability]})"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Dedicated Neural Net\""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [psi-effect"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "         {:async true"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "          :mandatory true"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "          :effect (req (if (not-empty (:hand corp))"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "                         (do (show-wait-prompt state :runner \"Corp to select cards in HQ to be accessed\")"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "                             (continue-ability"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "                               state :corp"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "                               {:prompt (msg \"Select \" (access-count state side :hq-access) \" cards in HQ for the Runner to access\")"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "                                :choices {:req #(and (in-hand? %) (corp? %))"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "                                          :max (req (access-count state side :hq-access))}"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "                                :effect (effect (clear-wait-prompt :runner)"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "                                                (continue-ability"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  :runner"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  (access-helper-hq"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    state (access-count state side :hq-access)"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    ; access-helper-hq uses a set to keep track of which cards have already"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    ; been accessed. Using the set difference we make the runner unable to"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    ; access non-selected cards from the corp prompt"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    (clojure.set/difference (set (:hand corp)) (set targets)))"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  card nil))}"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "                               card nil))"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "                         (effect-completed state side eid)))}]"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "     {:events {:successful-run {:interactive (req true)"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "                                :psi {:req (req (\u003d target :hq))"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "                                      :once :per-turn"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "                                      :not-equal {:effect (req (when-not (:replace-access (get-in @state [:run :run-effect]))"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                 (swap! state update-in [:run :run-effect]"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                        #(assoc % :replace-access psi-effect)))"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "                                                               (effect-completed state side eid))}}}}})"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Degree Mill\""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "   {:steal-cost-bonus (req [:shuffle-installed-to-stack 2])}"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Director Haas\u0027 Pet Project\""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(install-ability [server-name n]"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "             {:prompt \"Select a card to install\""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "              :show-discard true"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "              :choices {:req #(and (corp? %)"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "                                   (not (operation? %))"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "                                   (#{[:hand] [:discard]} (:zone %)))}"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (corp-install state side target server-name {:ignore-all-cost true})"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "                           (if (\u003c n 2)"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "                             (continue-ability state side"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "                                               (install-ability (last (get-remote-names state)) (inc n))"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "                                               card nil)"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "                             (effect-completed state side eid)))"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "              :msg (msg (corp-install-msg target)"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "                        (when (zero? n)"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "                          \", creating a new remote server\")"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "                        \", ignoring all install costs\")})]"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "     {:optional {:prompt \"Install cards in a new remote server?\""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "                 :yes-ability (install-ability \"New remote\" 0)}})"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Divested Trust\""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "    {:agenda-stolen"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "     {:async true"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "      :interactive (req true)"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "      :effect (req (if (:winner @state)"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "                     (effect-completed state side eid)"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "                     (let [stolen-agenda target"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "                           title (:title stolen-agenda)"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "                           prompt (str \"Forfeit Divested Trust to add \" title"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "                                       \" to HQ and gain 5[Credits]?\")"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "                           message (str \"add \" title \" to HQ and gain 5 [Credits]\")]"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "                       (show-wait-prompt state :runner \"Corp to use Divested Trust\")"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "                       (continue-ability"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "                         state side"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "                         {:optional"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "                          {:prompt prompt"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "                           :yes-ability"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "                           {:msg message"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "                            :effect (effect (forfeit card)"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "                                            (move stolen-agenda :hand)"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "                                            (gain-agenda-point :runner (- (:agendapoints stolen-agenda)))"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "                                            (gain-credits 5)"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "                                            (effect-completed eid))}"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "                           :end-effect (effect (clear-wait-prompt :runner))}}"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "                         card nil))))}}}"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Domestic Sleepers\""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "   {:agendapoints-runner (req 0)"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:cost [:click 3] :msg \"place 1 agenda counter on Domestic Sleepers\""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "                 :req (req (not (:counter card)))"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (gain-agenda-point 1)"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (set-prop card :counter {:agenda 1} :agendapoints 1))}]}"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Eden Fragment\""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-corp-install"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "             {:req (req (and (ice? target)"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "                             (empty? (let [cards (map first (turn-events state side :corp-install))]"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "                                       (filter ice? cards)))))"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (effect (ignore-install-cost true))}"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "             :corp-install"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "             {:req (req (and (ice? target)"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "                             (empty? (let [cards (map first (turn-events state side :corp-install))]"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "                                       (filter ice? cards)))))"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "              :msg (msg \"ignore the install cost of the first ICE this turn\")}}}"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Efficiency Committee\""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "   {:silent (req true)"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (add-counter card :agenda 3))"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:cost [:click 1] :counter-cost [:agenda 1]"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (gain :click 2)"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (register-turn-flag!"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "                                   card :can-advance"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "                                   (fn [state side card]"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "                                     ((constantly false)"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "                                       (toast state :corp \"Cannot advance cards this turn due to Efficiency Committee.\" \"warning\")))))"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"gain [Click][Click]\"}]}"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Elective Upgrade\""
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "   {:silent (req true)"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (add-counter card :agenda 2))"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:cost [:click 1]"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "                 :counter-cost [:agenda 1]"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "                 :once :per-turn"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (gain :click 2))"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"gain [Click][Click]\"}]}"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Encrypted Portals\""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "   (ice-boost-agenda \"Code Gate\")"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Escalate Vitriol\""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "   {:abilities [{:label \"Gain 1 [Credit] for each Runner tag\""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "                 :cost [:click 1]"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "                 :once :per-turn"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg (msg \"gain \" (count-tags state) \" [Credits]\")"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (gain-credits (count-tags state)))}]}"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Executive Retreat\""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "   {:effect (effect (add-counter card :agenda 1)"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "                    (shuffle-into-deck :hand))"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "    :interactive (req true)"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:cost [:click 1]"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "                 :counter-cost [:agenda 1]"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"draw 5 cards\""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (draw 5))}]}"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Explode-a-palooza\""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "   {:flags {:rd-reveal (req true)}"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "    :access {:async true"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "             :effect (effect (show-wait-prompt :runner \"Corp to use Explode-a-palooza\")"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "                             (continue-ability"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "                               {:optional {:prompt \"Gain 5 [Credits] with Explode-a-palooza ability?\""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "                                           :yes-ability {:msg \"gain 5 [Credits]\""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "                                                         :effect (effect (gain-credits :corp 5)"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                         (clear-wait-prompt :runner))}"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "                                           :no-ability {:effect (effect (clear-wait-prompt :runner))}}}"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "                               card nil))}}"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "   \"False Lead\""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "   {:abilities [{:req (req (\u003e\u003d (:click runner) 2))"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"force the Runner to lose [Click][Click]\""
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (forfeit card)"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (lose :runner :click 2))}]}"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Fetal AI\""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "   {:flags {:rd-reveal (req true)}"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "    :access {:async true"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "             :req (req (not\u003d (first (:zone card)) :discard)) :msg \"do 2 net damage\""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "             :effect (effect (damage eid :net 2 {:card card}))}"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "    :steal-cost-bonus (req [:credit 2])}"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Firmware Updates\""
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "   {:silent (req true)"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (add-counter card :agenda 3))"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:counter-cost [:agenda 1]"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "                 :choices {:req #(and (ice? %)"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (can-be-advanced? %))}"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "                 :req (req (pos? (get-counters card :agenda)))"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg (msg \"place 1 advancement token on \" (card-str state target))"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "                 :once :per-turn"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (add-prop target :advance-counter 1))}]}"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Fly on the Wall\""
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "   {:msg \"give the runner 1 tag\""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "    :async true"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (req (gain-tags state :runner eid 1))}"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Genetic Resequencing\""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "   {:choices {:req #(\u003d (last (:zone %)) :scored)}"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "    :msg (msg \"add 1 agenda counter on \" (:title target))"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (add-counter target :agenda 1))"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "    :silent (req true)}"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Geothermal Fracking\""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "   {:effect (effect (add-counter card :agenda 2))"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "    :silent (req true)"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:cost [:click 1]"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "                 :counter-cost [:agenda 1]"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"gain 7 [Credits] and take 1 bad publicity\""
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (gain-credits 7)"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (gain-bad-publicity :corp 1))}]}"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Gila Hands Arcology\""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "   {:abilities [{:cost [:click 2]"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"gain 3 [Credits]\""
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (gain-credits 3))}]}"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Glenn Station\""
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "   {:implementation \"Doesn\u0027t prohibit hosting multiple cards\""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:label \"Host a card from HQ on Glenn Station\""
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "                 :cost [:click 1]"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"host a card from HQ\""
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "                 :prompt \"Choose a card to host on Glenn Station\""
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "                 :choices (req (:hand corp))"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (host card target {:facedown true}))}"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "                {:label \"Add a card on Glenn Station to HQ\""
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "                 :cost [:click 1]"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"add a hosted card to HQ\""
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "                 :prompt \"Choose a card on Glenn Station\""
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "                 :choices (req (:hosted card))"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (move target :hand))}]}"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Global Food Initiative\""
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "   {:agendapoints-runner (req 2)}"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Government Contracts\""
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "   {:abilities [{:cost [:click 2]"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (gain-credits 4))"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"gain 4 [Credits]\"}]}"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Government Takeover\""
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "   {:abilities [{:cost [:click 1]"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (gain-credits 3))"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"gain 3 [Credits]\"}]}"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Graft\""
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(graft [n] {:prompt \"Choose a card to add to HQ with Graft\""
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "                       :async true"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "                       :choices (req (cancellable (:deck corp) :sorted))"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "                       :msg (msg \"add \" (:title target) \" to HQ from R\u0026D\")"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "                       :cancel-effect (req (shuffle! state side :deck)"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (system-msg state side (str \"shuffles R\u0026D\"))"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (effect-completed state side eid))"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "                       :effect (req (move state side target :hand)"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (if (\u003c n 3)"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (continue-ability state side (graft (inc n)) card nil)"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (do (shuffle! state side :deck)"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "                                          (system-msg state side (str \"shuffles R\u0026D\"))"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "                                          (effect-completed state side eid))))})]"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "     {:async true"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "      :msg \"add up to 3 cards from R\u0026D to HQ\""
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "      :effect (effect (continue-ability (graft 1) card nil))})"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Hades Fragment\""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "   {:flags {:corp-phase-12 (req (and (not-empty (get-in @state [:corp :discard]))"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (is-scored? state :corp card)))}"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:prompt \"Select a card to add to the bottom of R\u0026D\""
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "                 :show-discard true"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "                 :choices {:req #(and (corp? %)"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (in-discard? %))}"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (move target :deck))"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg (msg \"add \""
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "                           (if (:seen target)"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "                             (:title target)"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "                             \"a card\")"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "                           \" to the bottom of R\u0026D\")}]}"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Helium-3 Deposit\""
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "   {:async true"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "    :interactive (req true)"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "    :prompt \"How many power counters?\""
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "    :choices [\"0\" \"1\" \"2\"]"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (req (let [c (str-\u003eint target)]"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "                   (continue-ability"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "                     state side"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "                     {:choices {:req #(pos? (get-counters % :power))}"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "                      :msg (msg \"add \" c \" power counters on \" (:title target))"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "                      :effect (effect (add-counter target :power c))}"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "                     card nil)))}"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "   \"High-Risk Investment\""
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "   {:effect (effect (add-counter card :agenda 1))"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "    :silent (req true)"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:cost [:click 1]"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "                 :counter-cost [:agenda 1]"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg (msg \"gain \" (:credit runner) \" [Credits]\")"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (gain-credits (:credit runner)))}]}"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Hollywood Renovation\""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "   {:install-state :face-up"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "    :events {:advance"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "             {:async true"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "              :req (req (same-card? card target))"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (let [n (if (\u003e\u003d (get-counters (get-card state card) :advancement) 6) 2 1)]"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "                             (continue-ability"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "                               state side"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "                               {:choices {:req #(and (not (same-card? % card))"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     (can-be-advanced? %))}"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "                                :msg (msg \"place \" n"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "                                          \" advancement tokens on \""
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "                                          (card-str state target))"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "                                :effect (effect (add-prop :corp target :advance-counter n {:placed true}))}"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "                               card nil)))}}}"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Hostile Takeover\""
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "   {:msg \"gain 7 [Credits] and take 1 bad publicity\""
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (gain-credits 7)"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "                    (gain-bad-publicity :corp 1))"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "    :interactive (req true)}"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "   \"House of Knives\""
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "   {:effect (effect (add-counter card :agenda 3))"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "    :silent (req true)"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:counter-cost [:agenda 1]"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"do 1 net damage\""
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "                 :req (req (:run @state))"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "                 :once :per-run"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (damage eid :net 1 {:card card}))}]}"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Hyperloop Extension\""
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [he (req (gain-credits state :corp 3)"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "                 (system-msg state side (str \"uses Hyperloop Extension to gain 3 [Credits]\")))]"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "     {:effect he"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "      :stolen {:effect he}})"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Ikawah Project\""
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "   {:steal-cost-bonus (req [:credit 2 :click 1])}"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Illicit Sales\""
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "   {:async true"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (req (wait-for (resolve-ability"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "                             state side"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "                             {:optional"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "                              {:prompt \"Take 1 bad publicity from Illicit Sales?\""
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "                               :yes-ability {:msg \"take 1 bad publicity\""
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "                                             :effect (effect (gain-bad-publicity :corp 1))}}}"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "                             card nil)"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "                           (let [n (* 3 (+ (get-in @state [:corp :bad-publicity]) (:has-bad-pub corp)))]"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "                             (gain-credits state side n)"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "                             (system-msg state side (str \"gains \" n \" [Credits] from Illicit Sales\"))"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "                             (effect-completed state side eid))))}"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Improved Protein Source\""
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "   {:msg \"make the Runner gain 4 [Credits]\""
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (gain-credits :runner 4))"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "    :interactive (req true)"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "    :stolen {:msg \"make the Runner gain 4 [Credits]\""
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "             :effect (effect (gain-credits :runner 4))}}"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Improved Tracers\""
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "   {:silent (req true)"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (req (update-all-ice state side))"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "    :swapped {:effect (req (update-all-ice state side))}"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "    :events {:pre-ice-strength {:req (req (has-subtype? target \"Tracer\"))"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "                                :effect (effect (ice-strength-bonus 1 target))}"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "             :pre-init-trace {:req (req (and (has-subtype? target \"Tracer\")"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (\u003d :subroutine (:source-type (second targets)))))"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "                              :effect (effect (init-trace-bonus 1))}}}"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Jumon\""
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "    {:corp-turn-ends"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "     {:req (req (some #(and (\u003d (last (:zone %)) :content)"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "                            (is-remote? (second (:zone %))))"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "                      (all-installed state :corp)))"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "      :prompt \"Select a card to place 2 advancement tokens on\""
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "      :player :corp"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "      :choices {:req #(and (\u003d (last (:zone %)) :content)"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "                           (is-remote? (second (:zone %))))}"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "      :msg (msg \"place 2 advancement token on \" (card-str state target))"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "      :effect (effect (add-prop :corp target :advance-counter 2 {:placed true}))}}}"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Labyrinthine Servers\""
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "   {:interactions {:prevent [{:type #{:jack-out}"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "                              :req (req (pos? (get-counters card :power)))}]}"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "    :silent (req true)"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (add-counter card :power 2))"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:req (req (:run @state))"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "                 :counter-cost [:power 1]"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (req (let [ls (filter #(\u003d \"Labyrinthine Servers\" (:title %)) (:scored corp))]"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "                                (jack-out-prevent state side)"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "                                (when (zero? (reduce + (for [c ls] (get-counters c :power))))"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "                                  (swap! state update-in [:prevent] dissoc :jack-out))))"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"prevent the Runner from jacking out\"}]}"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "   \"License Acquisition\""
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "   {:interactive (req true)"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "    :prompt \"Select an asset or upgrade to install from Archives or HQ\""
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "    :show-discard true"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "    :choices {:req #(and (#{\"Asset\" \"Upgrade\"} (:type %))"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "                         (#{[:hand] [:discard]} (:zone %))"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "                         (corp? %))}"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "    :msg (msg \"install and rez \" (:title target) \", ignoring all costs\")"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (corp-install eid target nil {:install-state :rezzed-no-cost}))}"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Mandatory Seed Replacement\""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(msr [] {:prompt \"Select two pieces of ICE to swap positions\""
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "                    :choices {:req #(and (installed? %)"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (ice? %))"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "                              :max 2}"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "                    :async true"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "                    :effect (req (if (\u003d (count targets) 2)"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "                                   (do (swap-ice state side (first targets) (second targets))"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "                                       (system-msg state side"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   (str \"swaps the position of \""
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        (card-str state (first targets))"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        \" and \""
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        (card-str state (second targets))))"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "                                       (continue-ability state side (msr) card nil))"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "                                   (do (system-msg state :corp (str \"has finished rearranging ICE\"))"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "                                       (effect-completed state side eid))))})]"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "     {:async true"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "      :msg \"rearrange any number of ICE\""
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "      :effect (effect (continue-ability (msr) card nil))})"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Mandatory Upgrades\""
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "   {:msg \"gain an additional [Click] per turn\""
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "    :silent (req true)"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (req (gain state :corp"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "                       :click-per-turn 1))"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "    :swapped {:msg \"gain an additional [Click] per turn\""
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (when (\u003d (:active-player @state) :corp)"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "                             (gain state :corp :click 1))"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "                           (gain state :corp :click-per-turn 1))}"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "    :leave-play (req (lose state :corp"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "                           :click 1"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "                           :click-per-turn 1))}"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Market Research\""
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "   {:interactive (req true)"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "    :req (req tagged)"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (add-counter card :agenda 1)"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "                    (set-prop card :agendapoints 3))}"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Medical Breakthrough\""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "   {:silent (req true)"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (update-all-advancement-costs))"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "    :stolen {:effect (effect (update-all-advancement-costs))}"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "    :advancement-cost-bonus (req (- (count (filter #(\u003d (:title %) \"Medical Breakthrough\")"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   (concat (:scored corp) (:scored runner))))))}"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Merger\""
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "   {:agendapoints-runner (req 3)}"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Meteor Mining\""
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "   {:interactive (req true)"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "    :async true"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "    :prompt \"Use Meteor Mining?\""
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "    :choices (req (if (\u003c (count-tags state) 2)"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "                    [\"Gain 7 [Credits]\" \"No action\"]"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "                    [\"Gain 7 [Credits]\" \"Do 7 meat damage\" \"No action\"]))"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (req (case target"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "                   \"Gain 7 [Credits]\""
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "                   (do (gain-credits state side 7)"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "                       (system-msg state side \"uses Meteor Mining to gain 7 [Credits]\")"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "                       (effect-completed state side eid))"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "                   \"Do 7 meat damage\""
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "                   (do (damage state side eid :meat 7 {:card card})"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "                       (system-msg state side \"uses Meteor Mining do 7 meat damage\"))"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "                   \"No action\""
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "                   (do (system-msg state side \"does not use Meteor Mining\")"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "                       (effect-completed state side eid))))}"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "   \"NAPD Contract\""
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "   {:steal-cost-bonus (req [:credit 4])"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "    :advancement-cost-bonus (req (+ (:bad-publicity corp)"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (:has-bad-pub corp)))}"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Net Quarantine\""
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [nq {:effect (req (let [extra (int (/ (:runner-spent target) 2))]"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "                            (when (pos? extra)"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "                              (gain-credits state side extra)"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "                              (system-msg state :corp (str \"uses Net Quarantine to gain \" extra \"[Credits]\")))))}]"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "     {:events {:pre-init-trace {:once :per-turn"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "                                :silent (req true)"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "                                :effect (req (system-msg state :corp \"uses Net Quarantine to reduce Runner\u0027s base link to zero\")"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (swap! state assoc-in [:trace :force-link] 0))}"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "               :successful-trace nq"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "               :unsuccessful-trace nq}})"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "   \"New Construction\""
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "   {:install-state :face-up"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "    :events {:advance"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "             {:optional"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "              {:req (req (same-card? card target))"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "               :prompt \"Install a card from HQ in a new remote?\""
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "               :yes-ability {:prompt \"Select a card to install\""
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "                             :choices {:req #(and (not (operation? %))"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  (not (ice? %))"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  (corp? %)"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  (in-hand? %))}"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "                             :msg (msg \"install a card from HQ\""
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "                                       (when (\u003e\u003d (get-counters (get-card state card) :advancement) 5)"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "                                         \" and rez it, ignoring all costs\"))"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "                             :effect (req (if (\u003e\u003d (get-counters (get-card state card) :advancement) 5)"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "                                            (do (corp-install state side target \"New remote\""
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "                                                              {:install-state :rezzed-no-cost})"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "                                                (trigger-event state side :rez target))"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "                                            (corp-install state side target \"New remote\")))}}}}}"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "   \"NEXT Wave 2\""
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "   {:not-when-scored true"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "    :req (req (some #(and (rezzed? %)"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "                          (ice? %)"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "                          (has-subtype? % \"NEXT\"))"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "                    (all-installed state :corp)))"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "    :optional {:prompt \"Do 1 brain damage with NEXT Wave 2?\""
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "               :yes-ability {:msg \"do 1 brain damage\""
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "                             :effect (effect (damage eid :brain 1 {:card card}))}}}"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Nisei MK II\""
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "   {:silent (req true)"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (add-counter card :agenda 1))"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:req (req (:run @state))"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "                 :counter-cost [:agenda 1]"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"end the run\""
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "                 :async true"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (end-run eid card))}]}"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Oaktown Renovation\""
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "   {:install-state :face-up"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "    :events {:advance {:req (req (same-card? card target))"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "                       :msg (msg \"gain \" (if (\u003e\u003d (get-counters (get-card state card) :advancement) 5) \"3\" \"2\") \" [Credits]\")"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "                       :effect (req (gain-credits state side"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  (if (\u003e\u003d (get-counters (get-card state card) :advancement) 5) 3 2)))}}}"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Obokata Protocol\""
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "   {:steal-cost-bonus (req [:net 4])}"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Paper Trail\""
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "   {:trace {:base 6"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "            :successful {:msg \"trash all connection and job resources\""
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "                         :effect (req (doseq [resource (filter #(or (has-subtype? % \"Job\")"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                    (has-subtype? % \"Connection\"))"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "                                                               (all-active-installed state :runner))]"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "                                        (trash state side resource)))}}}"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Personality Profiles\""
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [pp {:req (req (pos? (count (:hand runner))))"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "             :effect (effect (trash (first (shuffle (:hand runner)))))"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "             :msg (msg \"force the Runner to trash \" (:title (last (:discard runner))) \" from their Grip at random\")}]"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "     {:events {:searched-stack pp"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "               :runner-install (assoc pp :req (req (and (some #{:discard} (:previous-zone target))"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        (pos? (count (:hand runner))))))}})"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Philotic Entanglement\""
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "   {:interactive (req true)"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "    :req (req (pos? (count (:scored runner))))"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "    :msg (msg \"do \" (count (:scored runner)) \" net damage\")"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (damage eid :net (count (:scored runner)) {:card card}))}"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Posted Bounty\""
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "   {:optional {:prompt \"Forfeit Posted Bounty to give the Runner 1 tag and take 1 bad publicity?\""
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "               :yes-ability {:msg \"give the Runner 1 tag and take 1 bad publicity\""
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "                             :async true"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "                             :effect (effect (gain-bad-publicity :corp eid 1)"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (gain-tags :corp eid 1)"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (forfeit card))}}}"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Priority Requisition\""
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "   {:interactive (req true)"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "    :choices {:req #(and (ice? %)"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "                         (not (rezzed? %))"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "                         (installed? %))}"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (rez target {:ignore-cost :all-costs}))}"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Private Security Force\""
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "   {:abilities [{:req (req tagged)"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "                 :cost [:click 1]"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (damage eid :meat 1 {:card card}))"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"do 1 meat damage\"}]}"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Profiteering\""
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "   {:interactive (req true)"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "    :choices [\"0\" \"1\" \"2\" \"3\"] :prompt \"How many bad publicity?\""
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "    :msg (msg \"take \" target \" bad publicity and gain \" (* 5 (str-\u003eint target)) \" [Credits]\")"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (req (let [bp (:bad-publicity (:corp @state))]"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "                   (gain-bad-publicity state :corp eid (str-\u003eint target))"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "                   (if (\u003c bp (:bad-publicity (:corp @state)))"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "                     (gain-credits state :corp (* 5 (str-\u003eint target))))))}"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Project Ares\""
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(trash-count-str [card]"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "             (quantify (- (get-counters card :advancement) 4) \"installed card\"))]"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "     {:silent (req true)"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": "      :req (req (and (\u003e (get-counters card :advancement) 4)"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "                     (pos? (count (all-installed state :runner)))))"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "      :msg (msg \"force the Runner to trash \" (trash-count-str card) \" and take 1 bad publicity\")"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "      :async true"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "      :effect (effect (show-wait-prompt :corp \"Runner to trash installed cards\")"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "                      (continue-ability"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "                        :runner"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "                        {:prompt (msg \"Select \" (trash-count-str card) \" installed cards to trash\")"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "                         :choices {:max (min (- (get-counters card :advancement) 4)"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (count (all-installed state :runner)))"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "                                   :req #(and (runner? %)"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "                                              (installed? %))}"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "                         :effect (effect (trash-cards targets)"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (system-msg (str \"trashes \" (join \", \" (map :title targets))))"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (gain-bad-publicity :corp 1))}"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "                        card nil)"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "                      (clear-wait-prompt :corp))})"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Project Atlas\""
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "   {:silent (req true)"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (add-counter card :agenda (max 0 (- (get-counters card :advancement) 3))))"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:counter-cost [:agenda 1]"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "                 :prompt \"Choose a card\""
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "                 :label \"Search R\u0026D and add 1 card to HQ\""
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "                 ;; we need the req or the prompt will still show"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "                 :req (req (pos? (get-counters card :agenda)))"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg (msg \"add \" (:title target) \" to HQ from R\u0026D\")"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "                 :choices (req (cancellable (:deck corp) :sorted))"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "                 :cancel-effect (effect (system-msg \"cancels the effect of Project Atlas\"))"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (shuffle! :deck)"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (move target :hand))}]}"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Project Beale\""
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "   {:interactive (req true)"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "    :agendapoints-runner (req 2)"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (req (let [n (quot (- (get-counters card :advancement) 3) 2)]"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "                   (set-prop state side card"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "                             :counter {:agenda n}"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "                             :agendapoints (+ 2 n))))}"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Project Kusanagi\""
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "   {:silent (req true)"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (add-counter card :agenda (- (get-counters card :advancement) 2)))"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:counter-cost [:agenda 1]"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"make a piece of ICE gain \\\"[Subroutine] Do 1 net damage\\\" after all its other subroutines for the remainder of the run\"}]}"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Project Vitruvius\""
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "   {:silent (req true)"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (add-counter card :agenda (- (get-counters card :advancement) 3)))"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:counter-cost [:agenda 1]"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "                 :prompt \"Choose a card in Archives to add to HQ\""
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "                 :show-discard true"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "                 :choices {:req #(and (in-discard? %)"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (corp? %))}"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "                 :req (req (pos? (get-counters card :agenda)))"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg (msg \"add \""
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "                           (if (:seen target)"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "                             (:title target) \"an unseen card \")"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "                           \" to HQ from Archives\")"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (move target :hand))}]}"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Project Wotan\""
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "   {:silent (req true)"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (add-counter card :agenda 3))"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:req (req (and (ice? current-ice)"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": "                                (rezzed? current-ice)"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "                                (has-subtype? current-ice \"Bioroid\")))"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "                 :counter-cost [:agenda 1]"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg (str \"make the approached piece of Bioroid ICE gain \\\"[Subroutine] End the run\\\"\""
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "                           \"after all its other subroutines for the remainder of this run\")}]}"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Project Yagi-Uda\""
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(put-back-counter [state side card]"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "             (set-prop state side card :counter"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "                       (merge"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "                         (:counter card)"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "                         {:agenda (+ 1 (get-counters card :agenda))})))"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "           (choose-swap [to-swap]"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "             {:prompt (str \"Select a card in HQ to swap with \" (:title to-swap))"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "              :choices {:not-self true"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "                        :req #(and (corp? %)"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "                                   (in-hand? %)"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "                                   (if (ice? to-swap)"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (ice? %)"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (or (agenda? %)"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (asset? %)"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (upgrade? %))))}"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "              :msg (msg \"swap \" (card-str state to-swap) \" with a card from HQ\")"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (move state :corp to-swap (:zone target) {:keep-server-alive true})"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "                           (move state :corp target (:zone to-swap) {:keep-server-alive true})"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "                           (clear-wait-prompt state :runner))"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": "              :cancel-effect (effect (put-back-counter card)"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (clear-wait-prompt :runner))})"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "           (choose-card [run-server]"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "             {:prompt \"Choose a card in or protecting the attacked server.\""
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "              :choices {:req #(\u003d (first run-server) (second (:zone %)))}"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (effect (continue-ability (choose-swap target) card nil))"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "              :cancel-effect (effect (put-back-counter card)"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (clear-wait-prompt :runner))})]"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": "     {:silent (req true)"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "      :effect (effect (add-counter card :agenda (- (get-counters card :advancement) 3)))"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "      :abilities [{:counter-cost [:agenda 1]"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "                   :req (req run)"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "                   :effect (effect (show-wait-prompt :runner \"Corp to use Project Yagi-Uda\")"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "                             (continue-ability (choose-card (:server run))"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "                                               card nil))}]})"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Puppet Master\""
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:successful-run"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "             {:interactive (req true)"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "              :async true"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (show-wait-prompt state :runner \"Corp to use Puppet Master\")"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "                           (continue-ability"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "                             state :corp"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "                             {:prompt \"Select a card to place 1 advancement token on\""
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "                              :player :corp"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "                              :choices {:req can-be-advanced?}"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "                              :cancel-effect (effect (clear-wait-prompt :runner)"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     (effect-completed eid))"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "                              :msg (msg \"place 1 advancement token on \" (card-str state target))"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": "                              :effect (effect (add-prop :corp target :advance-counter 1 {:placed true})"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "                                              (clear-wait-prompt :runner))} card nil))}}}"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Quantum Predictive Model\""
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "   {:flags {:rd-reveal (req true)}"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "    :access {:req (req tagged)"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": "             :async true"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "             :interactive (req true)"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "             :effect (req (wait-for (as-agenda state side card 1)"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (continue-ability"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "                                      state :runner"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "                                      {:prompt \"Quantum Predictive Model was added to the corp\u0027s score area\""
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "                                       :choices [\"OK\"]}"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "                                      card nil)))"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "             :msg \"add it to their score area and gain 1 agenda point\"}}"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Rebranding Team\""
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(get-assets [state corp]"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": "             (filter asset? (concat (all-installed state :corp)"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (:deck corp)"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (:hand corp)"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (:discard corp))))"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "           (add-ad [state side c]"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "             (update! state side (assoc-in c [:persistent :subtype] \"Advertisement\")))]"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "     {:interactive (req true)"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "      :msg \"make all assets gain Advertisement\""
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "      :effect (req (doseq [c (get-assets state corp)] (add-ad state side c)))"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "      :swapped {:msg \"make all assets gain Advertisement\""
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": "                :effect (req (doseq [c (get-assets state corp)] (add-ad state side c)))}"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "      :leave-play (req (doseq [c (get-assets state corp)]"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "                         (update! state side (assoc-in c [:persistent :subtype]"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "                                                       (-\u003e\u003e (split (or (-\u003e c :persistent :subtype) \"\") #\" - \")"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            (drop 1) ;so that all actual ads remain ads if agenda leaves play"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            (join \" - \"))))))})"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Reeducation\""
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(corp-final [chosen original]"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "             {:prompt (str \"The bottom cards of R\u0026D will be \" (join  \", \" (map :title chosen)) \".\")"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "              :choices [\"Done\" \"Start over\"]"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": "              :async true"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": "              :msg (req (let [n (count chosen)]"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "                          (str \"add \" n \" cards from HQ to the bottom of R\u0026D and draw \" n \" cards.\""
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "                               \" The Runner randomly adds \" (if (\u003c\u003d n (count (:hand runner))) n 0)"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": "                               \" cards from their Grip to the bottom of the Stack\")))"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (let [n (count chosen)]"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": "                             (if (\u003d target \"Done\")"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": "                               (do (doseq [c (reverse chosen)] (move state :corp c :deck))"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "                                   (draw state :corp n)"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "                                   ; if corp chooses more cards than runner\u0027s hand, don\u0027t shuffle runner hand back into Stack"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "                                   (when (\u003c\u003d n (count (:hand runner)))"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (doseq [r (take n (shuffle (:hand runner)))] (move state :runner r :deck)))"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "                                   (clear-wait-prompt state :runner)"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "                                   (effect-completed state side eid))"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "                               (continue-ability state side (corp-choice original \u0027() original) card nil))))})"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "           (corp-choice [remaining chosen original] ; Corp chooses cards until they press \u0027Done\u0027"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "             {:prompt \"Choose a card to move to bottom of R\u0026D\""
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "              :choices (conj (vec remaining) \"Done\")"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "              :async true"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (let [chosen (cons target chosen)]"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "                             (if (not\u003d target \"Done\")"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "                               (continue-ability"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": "                                 state side"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (corp-choice (remove-once #(\u003d target %) remaining) chosen original)"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "                                 card nil)"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "                               (if (pos? (count (remove #(\u003d % \"Done\") chosen)))"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (continue-ability state side (corp-final (remove #(\u003d % \"Done\") chosen) original) card nil)"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (do (system-msg state side \"does not add any cards from HQ to bottom of R\u0026D\")"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (clear-wait-prompt state :runner)"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (effect-completed state side eid))))))})]"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "     {:async true"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "      :effect (req (show-wait-prompt state :runner \"Corp to add cards from HQ to bottom of R\u0026D\")"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "                   (let [from (get-in @state [:corp :hand])]"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "                     (if (pos? (count from))"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "                       (continue-ability state :corp (corp-choice from \u0027() from) card nil)"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": "                       (do (system-msg state side \"does not add any cards from HQ to bottom of R\u0026D\")"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "                           (effect-completed state side eid)))))})"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Remastered Edition\""
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "   {:effect (effect (add-counter card :agenda 1))"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": "    :silent (req true)"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:counter-cost [:agenda 1]"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg (msg \"place 1 advancement token on \" (card-str state target))"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "                 :choices {:req installed?}"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (add-prop target :advance-counter 1 {:placed true}))}]}"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Remote Data Farm\""
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "   {:silent (req true)"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "    :msg \"increase their maximum hand size by 2\""
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (gain :hand-size 2))"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "    :swapped {:msg \"increase their maximum hand size by 2\""
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (effect (gain :hand-size 2))}"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": "    :leave-play (effect (lose :hand-size 2))}"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Remote Enforcement\""
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "   {:interactive (req true)"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "    :optional {:prompt \"Search R\u0026D for a piece of ice to install protecting a remote server?\""
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "               :yes-ability"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": "               {:async true"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "                :effect (req (when (not-empty (filter ice? (:deck corp)))"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "                               (continue-ability"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": "                                 state side"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "                                 {:async true"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": "                                  :prompt \"Choose a piece of ice\""
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": "                                  :choices (req (filter ice? (:deck corp)))"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "                                  :effect (req (let [chosen-ice target]"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 (continue-ability"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   state side"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   {:async true"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    :prompt (str \"Select a server to install \" (:title chosen-ice) \" on\")"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    :choices (filter #(not (#{\"HQ\" \"Archives\" \"R\u0026D\"} %))"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                     (corp-install-list state chosen-ice))"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    :effect (effect (shuffle! :deck)"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                    (corp-install eid chosen-ice target"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                  {:install-state :rezzed-no-rez-cost}))}"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   card nil)))}"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "                                 card nil)))}}}"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Research Grant\""
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "   {:interactive (req true)"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "    :silent (req (empty? (filter #(\u003d (:title %) \"Research Grant\") (all-installed state :corp))))"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "    :async true"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (continue-ability"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": "                      {:prompt \"Select another installed copy of Research Grant to score\""
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "                       :choices {:req #(\u003d (:title %) \"Research Grant\")}"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "                       :interactive (req true)"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "                       :async true"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "                       :req (req (not (empty? (filter #(\u003d (:title %) \"Research Grant\") (all-installed state :corp)))))"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "                       :effect (effect (set-prop target :advance-counter (:advancementcost target))"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "                                       (score eid (get-card state target)))"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": "                       :msg \"score another installed copy of Research Grant\"}"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "                      card nil))}"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Restructured Datapool\""
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "   {:abilities [{:cost [:click 1]"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "                 :trace {:base 2"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "                         :successful {:msg \"give the Runner 1 tag\""
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": "                                      :async true"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": "                                      :effect (effect (gain-tags eid 1))}}}]}"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "   \"SDS Drone Deployment\""
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "   {:steal-cost-bonus (req [:program 1])"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (req (show-wait-prompt state :runner \"Corp to use SDS Drone Deployment\")"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": "                 (if (seq (all-installed-runner-type state :program))"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": "                   (continue-ability"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "                     state side"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": "                     {:prompt \"Select a program to trash\""
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": "                      :label \"Trash a program\""
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "                      :msg (msg \"trash \" (:title target))"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": "                      :choices {:req #(and (installed? %)"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (program? %))}"
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": "                      :effect (effect (trash target)"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (clear-wait-prompt :runner))"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": "                      :end-effect (effect (clear-wait-prompt :runner))}"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": "                     card nil)"
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "                   (clear-wait-prompt state :runner)))}"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Self-Destruct Chips\""
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": "   {:silent (req true)"
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "    :msg \"decrease the Runner\u0027s maximum hand size by 1\""
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (lose :runner :hand-size 1))"
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": "    :swapped {:msg \"decrease the Runner\u0027s maximum hand size by 1\""
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (effect (lose :runner :hand-size 1))}"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": "    :leave-play (effect (gain :runner :hand-size 1))}"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Sensor Net Activation\""
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "   {:effect (effect (add-counter card :agenda 1))"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": "    :silent (req true)"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:counter-cost [:agenda 1]"
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": "                 :req (req (some #(and (has-subtype? % \"Bioroid\") (not (rezzed? %))) (all-installed state :corp)))"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": "                 :prompt \"Choose a bioroid to rez, ignoring all costs\""
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": "                 :choices {:req #(and (has-subtype? % \"Bioroid\") (not (rezzed? %)))}"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg (msg \"rez \" (card-str state target) \", ignoring all costs\")"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (req (let [c target]"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": "                                (rez state side c {:ignore-cost :all-costs})"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": "                                (register-events"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": "                                  state side"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "                                  {:corp-turn-ends {:effect (effect (derez c)"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                    (unregister-events card))}"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": "                                   :runner-turn-ends {:effect (effect (derez c)"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                      (unregister-events card))}} card)))}]"
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": "    :events {:corp-turn-ends nil"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": "             :runner-turn-ends nil}}"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Sentinel Defense Program\""
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-resolve-damage {:req (req (and (\u003d target :brain)"
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 (pos? (last targets))))"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": "                                  :msg \"do 1 net damage\""
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": "                                  :effect (effect (damage eid :net 1 {:card card}))}}}"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Show of Force\""
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": "   {:async true"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": "    :msg \"do 2 meat damage\""
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (damage eid :meat 2 {:card card}))}"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": "   \"SSL Endorsement\""
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [add-credits (effect (add-counter card :credit 9))"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": "         remove-credits {:optional {:req (req (pos? (get-counters card :credit)))"
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": "                                    :once :per-turn"
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": "                                    :prompt \"Gain 3 [Credits] from SSL Endorsement?\""
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": "                                    :autoresolve (get-autoresolve :auto-fire)"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": "                                    :yes-ability"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": "                                    {:effect (req (when (pos? (get-counters card :credit))"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    (gain-credits state :corp 3)"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    (system-msg state :corp (str \"uses SSL Endorsement to gain 3 [Credits]\"))"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    (add-counter state side card :credit -3)))}}}]"
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "     {:effect add-credits"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": "      :abilities [(set-autoresolve :auto-fire \"whether to take credits off SSL\")]"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "-"
        },
        "content": "      :stolen {:effect add-credits}"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "-"
        },
        "content": "      :interactive (req true)"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "-"
        },
        "content": "      :events {:corp-turn-begins remove-credits}"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "-"
        },
        "content": "      :flags {:has-events-when-stolen true}})"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Standoff\""
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(stand [side]"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "-"
        },
        "content": "             {:async true"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "-"
        },
        "content": "              :prompt \"Choose one of your installed cards to trash due to Standoff\""
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": "              :choices {:req #(and (installed? %)"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": "                                   (same-side? side (:side %)))}"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": "              :cancel-effect (req (if (\u003d side :runner)"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (do (draw state :corp)"
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": "                                        (gain-credits state :corp 5)"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": "                                        (clear-wait-prompt state :corp)"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": "                                        (system-msg state :runner \"declines to trash a card due to Standoff\")"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": "                                        (system-msg state :corp \"draws a card and gains 5 [Credits] from Standoff\")"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "-"
        },
        "content": "                                        (effect-completed state :corp eid))"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (do (system-msg state :corp \"declines to trash a card from Standoff\")"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": "                                        (clear-wait-prompt state :runner)"
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": "                                        (effect-completed state :corp eid))))"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (wait-for (trash state side target {:unpreventable true})"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (do"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": "                                       (system-msg state side (str \"trashes \" (card-str state target) \" due to Standoff\"))"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": "                                       (clear-wait-prompt state (other-side side))"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "                                       (show-wait-prompt state side (str (side-str (other-side side)) \" to trash a card for Standoff\"))"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "                                       (continue-ability state (other-side side) (stand (other-side side)) card nil))))})]"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": "     {:interactive (req true)"
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": "      :async true"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "-"
        },
        "content": "      :effect (effect (show-wait-prompt (str (side-str (other-side side)) \" to trash a card for Standoff\"))"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": "                      (continue-ability :runner (stand :runner) card nil))})"
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Sting!\""
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(count-opp-stings [state side]"
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "-"
        },
        "content": "             (count (filter #(\u003d (:title %) \"Sting!\") (get-in @state [(other-side side) :scored]))))]"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": "     {:msg (msg \"deal \" (inc (count-opp-stings state :corp)) \" net damage\")"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": "      :async true"
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "-"
        },
        "content": "      :effect (effect (damage eid :net (inc (count-opp-stings state :corp)) {:card card}))"
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "-"
        },
        "content": "      :stolen {:msg (msg \"deal \" (inc (count-opp-stings state :runner)) \" net damage\")"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": "               :async true"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": "               :effect (effect (damage eid :net (inc (count-opp-stings state :runner)) {:card card}))}})"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Successful Field Test\""
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(sft [n max] {:prompt \"Select a card in HQ to install with Successful Field Test\""
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "-"
        },
        "content": "                         :priority -1"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "-"
        },
        "content": "                         :async true"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "-"
        },
        "content": "                         :choices {:req #(and (corp? %)"
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "-"
        },
        "content": "                                              (not (operation? %))"
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "-"
        },
        "content": "                                              (in-hand? %))}"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "-"
        },
        "content": "                         :effect (req (wait-for"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "-"
        },
        "content": "                                        (corp-install state side target nil {:ignore-all-cost true})"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "-"
        },
        "content": "                                        (if (\u003c n max)"
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": "                                          (continue-ability state side (sft (inc n) max) card nil)"
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "-"
        },
        "content": "                                          (effect-completed state side eid))))})]"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "-"
        },
        "content": "     {:async true"
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "-"
        },
        "content": "      :msg \"install cards from HQ, ignoring all costs\""
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "-"
        },
        "content": "      :effect (req (let [max (count (filter (complement operation?) (:hand corp)))]"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "-"
        },
        "content": "                     (continue-ability state side (sft 1 max) card nil)))})"
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Superior Cyberwalls\""
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "-"
        },
        "content": "   (ice-boost-agenda \"Barrier\")"
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "-"
        },
        "content": "   \"TGTBT\""
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "-"
        },
        "content": "   {:flags {:rd-reveal (req true)}"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "-"
        },
        "content": "    :access {:msg \"give the Runner 1 tag\""
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "-"
        },
        "content": "             :async true"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "-"
        },
        "content": "             :effect (effect (gain-tags eid 1))}}"
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "-"
        },
        "content": "   \"The Cleaners\""
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-damage {:req (req (and (\u003d target :meat)"
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (\u003d side :corp)))"
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "-"
        },
        "content": "                          :msg \"do 1 additional meat damage\""
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "-"
        },
        "content": "                          :effect (effect (damage-bonus :meat 1))}}}"
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "-"
        },
        "content": "   \"The Future is Now\""
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "-"
        },
        "content": "   {:interactive (req true)"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "-"
        },
        "content": "    :prompt \"Choose a card to add to HQ\""
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "-"
        },
        "content": "    :choices (req (:deck corp))"
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "-"
        },
        "content": "    :msg (msg \"add a card from R\u0026D to HQ and shuffle R\u0026D\")"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "-"
        },
        "content": "    :req (req (pos? (count (:deck corp))))"
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (shuffle! :deck)"
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "-"
        },
        "content": "                    (move target :hand))}"
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "-"
        },
        "content": "   \"The Future Perfect\""
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "-"
        },
        "content": "   {:flags {:rd-reveal (req true)}"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "-"
        },
        "content": "    :access"
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "-"
        },
        "content": "    {:psi {:req (req (not installed))"
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "-"
        },
        "content": "           :not-equal {:msg \"prevent it from being stolen\""
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "-"
        },
        "content": "                       :effect (effect (register-run-flag!"
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "-"
        },
        "content": "                                         card :can-steal"
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (fn [_ _ c] (not (same-card? c card))))"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "-"
        },
        "content": "                                       (effect-completed eid))}}}}"
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Timely Public Release\""
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "-"
        },
        "content": "   {:silent (req true)"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (add-counter card :agenda 1))"
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:counter-cost [:agenda 1]"
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "-"
        },
        "content": "                 :label \"Install a piece of ice in any position, ignoring all costs\""
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "-"
        },
        "content": "                 :prompt \"Select a piece of ice to install\""
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "-"
        },
        "content": "                 :show-discard true"
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "-"
        },
        "content": "                 :choices {:req #(and (ice? %)"
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (or (in-hand? %)"
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "-"
        },
        "content": "                                          (in-discard? %)))}"
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg (msg \"install \""
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "-"
        },
        "content": "                           (if (and (in-discard? target)"
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (or (faceup? target)"
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "-"
        },
        "content": "                                        (not (facedown? target))))"
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "-"
        },
        "content": "                             (:title target)"
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "-"
        },
        "content": "                             \"ICE\")"
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "-"
        },
        "content": "                           \" from \" (zone-\u003ename (:zone target)))"
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect"
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "-"
        },
        "content": "                           (continue-ability"
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "-"
        },
        "content": "                             (let [chosen-ice target]"
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "-"
        },
        "content": "                               {:prompt \"Choose a server\""
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "-"
        },
        "content": "                                :choices (req servers)"
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "-"
        },
        "content": "                                :effect (effect"
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "-"
        },
        "content": "                                          (continue-ability"
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "-"
        },
        "content": "                                            (let [chosen-server target"
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  num-ice (count (get-in (:corp @state)"
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                         (conj (server-\u003ezone state target) :ices)))]"
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "-"
        },
        "content": "                                              {:prompt \"Which position to install in? (0 is innermost)\""
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "-"
        },
        "content": "                                               :choices (vec (reverse (map str (range (inc num-ice)))))"
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "-"
        },
        "content": "                                               :effect (req (corp-install state side chosen-ice chosen-server"
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                          {:ignore-all-cost true :index (Integer/parseInt target)})"
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            (if (and run"
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                     (\u003d (zone-\u003ename (first (:server run)))"
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                        chosen-server))"
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "-"
        },
        "content": "                                                              (let [curr-pos (get-in @state [:run :position])]"
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                (if (\u003e\u003d curr-pos (Integer/parseInt target))"
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                  (swap! state assoc-in [:run :position] (inc curr-pos))))))})"
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "-"
        },
        "content": "                                            card nil))})"
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "-"
        },
        "content": "                             card nil))}]}"
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Underway Renovation\""
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(adv4? [s c] (if (\u003e\u003d (get-counters (get-card s c) :advancement) 4) 2 1))]"
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "-"
        },
        "content": "     {:install-state :face-up"
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "-"
        },
        "content": "      :events {:advance {:req (req (same-card? card target))"
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "-"
        },
        "content": "                         :msg (msg (if (pos? (count (:deck runner)))"
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (str \"trash \""
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "-"
        },
        "content": "                                          (join \", \" (map :title (take (adv4? state card) (:deck runner))))"
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "-"
        },
        "content": "                                          \" from the Runner\u0027s stack\")"
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "-"
        },
        "content": "                                     \"trash from the Runner\u0027s stack but it is empty\"))"
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "-"
        },
        "content": "                         :effect (effect (mill :corp :runner (adv4? state card)))}}})"
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Unorthodox Predictions\""
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "-"
        },
        "content": "   {:async false"
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "-"
        },
        "content": "    :implementation \"Prevention of subroutine breaking is not enforced\""
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "-"
        },
        "content": "    :prompt \"Choose an ICE type for Unorthodox Predictions\""
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "-"
        },
        "content": "    :choices [\"Barrier\" \"Code Gate\" \"Sentry\"]"
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "-"
        },
        "content": "    :msg (msg \"prevent subroutines on \" target \" ICE from being broken until next turn.\")}"
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Utopia Fragment\""
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-steal-cost {:req (req (pos? (get-counters target :advancement)))"
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "-"
        },
        "content": "                              :effect (req (let [counter (get-counters target :advancement)]"
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (steal-cost-bonus state side [:credit (* 2 counter)])))}}}"
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Vanity Project\""
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "-"
        },
        "content": "   ;; No special implementation"
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "-"
        },
        "content": "   {}"
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Veterans Program\""
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "-"
        },
        "content": "   {:interactive (req true)"
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "-"
        },
        "content": "    :msg \"lose 2 bad publicity\""
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (lose-bad-publicity 2))}"
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Viral Weaponization\""
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [dmg {:msg \"do 1 net damage for each card in the grip\""
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "-"
        },
        "content": "              :async true"
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (let [cnt (count (:hand runner))]"
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "-"
        },
        "content": "                             (unregister-events state side card)"
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "-"
        },
        "content": "                             (damage state side eid :net cnt {:card card})))}]"
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "-"
        },
        "content": "     {:effect (effect (register-events"
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "-"
        },
        "content": "                        {:corp-turn-ends dmg"
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "-"
        },
        "content": "                         :runner-turn-ends dmg}"
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "-"
        },
        "content": "                        card))"
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "-"
        },
        "content": "      :events {:corp-turn-ends nil"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "-"
        },
        "content": "               :runner-turn-ends nil}})"
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Voting Machine Initiative\""
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "-"
        },
        "content": "   {:silent (req true)"
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (add-counter card :agenda 3))"
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "-"
        },
        "content": "    :events {:runner-turn-begins"
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "-"
        },
        "content": "             {:async true"
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "-"
        },
        "content": "              :req (req (pos? (get-counters card :agenda)))"
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (effect (show-wait-prompt :runner \"Corp to use Voting Machine Initiative\")"
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "-"
        },
        "content": "                              (continue-ability"
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "-"
        },
        "content": "                                {:optional"
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "-"
        },
        "content": "                                 {:player :corp"
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "-"
        },
        "content": "                                  :prompt \"Use Voting Machine Initiative to make the Runner lose 1 [Click]?\""
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "-"
        },
        "content": "                                  :yes-ability {:msg \"make the Runner lose 1 [Click]\""
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "-"
        },
        "content": "                                                :effect (effect (lose :runner :click 1)"
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                (add-counter card :agenda -1)"
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                (clear-wait-prompt :runner))}"
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "-"
        },
        "content": "                                  :no-ability {:effect (effect (clear-wait-prompt :runner))}}}"
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "-"
        },
        "content": "                                card nil))}}}"
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Vulnerability Audit\""
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [reg-no-score-flag"
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "-"
        },
        "content": "         (effect (register-turn-flag! card :can-score"
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (fn [state side other-card]"
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "-"
        },
        "content": "                                        (if (same-card? other-card card)"
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "-"
        },
        "content": "                                          ((constantly false) (toast state :corp \"Cannot score Vulnerability Audit the turn it was installed.\" \"warning\"))"
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "-"
        },
        "content": "                                          true))))]"
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "-"
        },
        "content": "     {:derezzed-events {:pre-agenda-scored {:req (req (and (same-card? target card)"
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "-"
        },
        "content": "                                                           (let [agenda-cids (map #(:cid (first %))"
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                  (filter #(agenda? (first %))"
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                          (turn-events state :corp :corp-install)))]"
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             (contains? (into #{} agenda-cids) (:cid card)))))"
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "-"
        },
        "content": "                                            :effect reg-no-score-flag}}})"
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Vulcan Coverup\""
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "-"
        },
        "content": "   {:interactive (req true)"
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "-"
        },
        "content": "    :msg \"do 2 meat damage\""
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (damage eid :meat 2 {:card card}))"
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "-"
        },
        "content": "    :stolen {:msg \"force the Corp to take 1 bad publicity\""
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "-"
        },
        "content": "             :effect (effect (gain-bad-publicity :corp 1))}}"
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Water Monopoly\""
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-install {:req (req (and (resource? target)"
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "-"
        },
        "content": "                                          (not (has-subtype? target \"Virtual\"))"
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "-"
        },
        "content": "                                          (not (second targets)))) ; not facedown"
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "-"
        },
        "content": "                           :effect (effect (install-cost-bonus [:credit 1]))}}}})"
      }
    ],
    "authorContributionMap": {
      "-": 1531,
      "ChooJeremy": 2
    }
  },
  {
    "path": "src/clj/game/cards/identities.clj",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "(ns game.cards.identities"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  (:require [game.core :refer :all]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "            [game.core.eid :refer [effect-completed]]"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "            [game.utils :refer :all]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "            [game.macros :refer [effect req msg wait-for continue-ability]]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "            [clojure.string :refer [split-lines split join lower-case includes? starts-with?]]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "            [clojure.stacktrace :refer [print-stack-trace]]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "            [jinteki.utils :refer [str-\u003eint other-side is-tagged? has-subtype?]]))"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ";;; Helper functions for Draft cards"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "(def draft-points-target"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \"Set each side\u0027s agenda points target at 6, per draft format rules\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  (req (swap! state assoc-in [:runner :agenda-point-req] 6)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "       (swap! state assoc-in [:corp :agenda-point-req] 6)))"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "(defn- has-most-faction?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  \"Checks if the faction has a plurality of rezzed / installed cards\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  [state side fc]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  (let [card-list (all-active-installed state side)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        faction-freq (frequencies (map :faction card-list))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        reducer (fn [{:keys [max-count] :as acc} faction count]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                  (cond"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                    ;; Has plurality update best-faction"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                    (\u003e count max-count)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                    {:max-count count :max-faction faction}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                    ;; Lost plurality"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                    (\u003d count max-count)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                    (dissoc acc :max-faction)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                    ;; Count is not more, do not change the accumulator map"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                    :default"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                    acc))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        best-faction (:max-faction (reduce-kv reducer {:max-count 0 :max-faction nil} faction-freq))]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    (\u003d fc best-faction)))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ";; Card definitions"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "(def card-definitions"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  {\"419: Amoral Scammer\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:corp-install"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "             {:async true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "              :req (req (and (first-event? state :corp :corp-install)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                             (pos? (:turn @state))"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                             (not (rezzed? target))))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "              (req (show-wait-prompt state :corp \"Runner to use 419: Amoral Scammer\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                   (let [itarget target]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                     (continue-ability"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                       state side"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                       {:optional"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                        {:prompt \"Expose installed card unless Corp pays 1 [Credits]?\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                         :player :runner"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                         :autoresolve (get-autoresolve :auto-419)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                         :no-ability {:effect (req (clear-wait-prompt state :corp))}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                         :yes-ability"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                         {:async true"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                          :effect (req (clear-wait-prompt state :corp)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                                       (if (not (can-pay? state :corp eid card nil :credit 1))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (do"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (toast state :corp \"Cannot afford to pay 1 credit to block card exposure\" \"info\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (expose state :runner eid itarget))"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (do"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (show-wait-prompt state :runner \"Corp decision\")"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (continue-ability"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                                             state side"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                                             {:optional"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                                              {:prompt \"Pay 1 [Credits] to prevent exposure of installed card?\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                                               :player :corp"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                                               :no-ability"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                                               {:async true"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                                                :effect (req (expose state :runner eid itarget)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             (clear-wait-prompt state :runner))}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                                               :yes-ability"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                                               {:effect (req (pay state :corp card [:credit 1])"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             (system-msg state :corp (str \"spends 1 [Credits] to prevent \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                          \" card from being exposed\"))"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             (clear-wait-prompt state :runner))}}}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                                             card nil))))}}}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                       card nil)))}}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [(set-autoresolve :auto-419 \"419\")]}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Acme Consulting: The Truth You Need\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(activate [state card active]"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "             (update! state :corp (assoc-in card [:special :acme-active] active))"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "             (swap! state update-in [:runner :tag :additional] (if active inc dec))"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "             (trigger-event state :corp :runner-additional-tag-change (if active 1 -1)))"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "           (outermost? [run-position run-ices]"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "             (and run-position"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                  (pos? run-position)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                  (\u003d run-position (count run-ices))))]"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     {:implementation \"Additional tag is gained on approach, not on encounter\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      ;; Should be comprehensive list of all cases when tag should be gained or lost"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      :events {:run {:effect (req (when (and (outermost? run-position run-ices)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (rezzed? current-ice))"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (activate state card true)))}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "               :rez {:effect (req (when (and (outermost? run-position run-ices)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (same-card? current-ice target))"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (activate state card true)))}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "               :derez {:effect (req (when (outermost? run-position run-ices)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (activate state card false)))}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "               :pass-ice {:effect (req (when (and (outermost? run-position run-ices)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  (get-in card [:special :acme-active]))"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (activate state card false)))}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "               :run-ends {:effect (req (when (get-in card [:special :acme-active])"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (activate state card false)))}}})"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Adam: Compulsive Hacker\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-start-game"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "             {:req (req (\u003d side :runner))"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "              :async true"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (show-wait-prompt state :corp \"Runner to choose starting directives\")"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                           (let [is-directive? #(has-subtype? % \"Directive\")"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                                 directives (filter is-directive? (server-cards))"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                                 directives (map make-card directives)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                                 directives (zone :play-area directives)]"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                             ;; Add directives to :play-area - assumed to be empty"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                             (swap! state assoc-in [:runner :play-area] directives)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                             (continue-ability state side"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                                               {:prompt (str \"Choose 3 starting directives\")"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                                                :choices {:max 3"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          :all true"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          :req #(and (runner? %)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                     (in-play-area? %))}"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                                                :effect (req (doseq [c targets]"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                                                               (runner-install state side c {:ignore-all-cost true"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                             :custom-message (str \"starts with \" (:title c) \" in play\")}))"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             (swap! state assoc-in [:runner :play-area] [])"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             (clear-wait-prompt state :corp))}"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                                               card nil)))}}}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "   \"AgInfusion: New Miracles for a New World\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "   {:abilities [{:once :per-turn"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                 :req (req (and (:run @state) (not (rezzed? current-ice)) (can-rez? state side current-ice {:ignore-unique true})))"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                 :prompt \"Choose another server and redirect the run to its outermost position\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                 :choices (req (cancellable (remove #{(-\u003e @state :run :server central-\u003ename)} servers)))"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg (msg \"trash the approached ICE. The Runner is now running on \" target)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (req (let [dest (server-\u003ezone state target)]"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                                (trash state side current-ice)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                                (swap! state update-in [:run]"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                                       #(assoc % :position (count (get-in corp (conj dest :ices)))"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 :server (rest dest)))))}]}"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Akiko Nisei: Head Case\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-access {:req (req (\u003d target :rd))"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                          :interactive (req true)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                          :psi {:player :runner"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                                :equal {:msg \"access 1 additional card\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                                        :effect (effect (access-bonus :rd 1)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        (effect-completed eid))}}}}}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Alice Merchant: Clan Agitator\""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:successful-run"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "             {:async true"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "              :interactive (req true)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "              :req (req (and (\u003d target :archives)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                             (first-successful-run-on-server? state :archives)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                             (not-empty (:hand corp))))"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (effect (show-wait-prompt :runner \"Corp to trash 1 card from HQ\")"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                              (continue-ability"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                                {:prompt \"Choose a card in HQ to discard\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :player :corp"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :choices (req (:hand corp))"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :msg \"force the Corp to trash 1 card from HQ\""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :effect (effect (trash :corp target)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 (clear-wait-prompt :runner))}"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                                card nil))}}}"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Andromeda: Dispossessed Ristie\""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-start-game {:req (req (\u003d side :runner))"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                              :effect (effect (draw 4 {:suppress-event true}))}}"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    :mulligan (effect (draw 4 {:suppress-event true}))}"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Apex: Invasive Predator\""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [ability {:prompt \"Select a card to install facedown\""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                  :label \"Install a card facedown (start of turn)\""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                  :once :per-turn"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                  :choices {:max 1"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                            :req #(and (runner? %)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "                                       (in-hand? %))}"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                  :req (req (and (pos? (count (:hand runner)))"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (:runner-phase-12 @state)))"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                  :effect (effect (runner-install eid target {:facedown true}))}]"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "     {:events {:runner-turn-begins ability}"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "      :flags {:runner-phase-12 (req true)}"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "      :abilities [ability]})"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Argus Security: Protection Guaranteed\""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:agenda-stolen"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "             {:prompt \"Take 1 tag or suffer 2 meat damage?\""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "              :async true"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "              :choices [\"1 tag\" \"2 meat damage\"] :player :runner"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "              :msg \"make the Runner take 1 tag or suffer 2 meat damage\""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (if (\u003d target \"1 tag\")"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                             (do (system-msg state side \"chooses to take 1 tag\")"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (gain-tags state :runner eid 1))"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                             (do (system-msg state side \"chooses to suffer 2 meat damage\")"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (damage state :runner eid :meat 2 {:unboostable true :card card}))))}}}"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Armand \\\"Geist\\\" Walker: Tech Lord\""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:runner-trash {:req (req (and (\u003d side :runner) (\u003d (second targets) :ability-cost)))"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                            :msg \"draw a card\""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                            :async true"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                            :effect (effect (draw eid 1 nil))}}}"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Asa Group: Security Through Vigilance\""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:corp-install"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "             {:async true"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "              :req (req (first-event? state :corp :corp-install))"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (let [installed-card target"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                                 z (butlast (:zone installed-card))]"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "                             (continue-ability"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                               state side"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "                               {:prompt (str \"Select a \""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (if (is-remote? z)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                                               \"non-agenda\""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                                               \"piece of ice\")"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                                             \" in HQ to install with Asa Group: Security Through Vigilance (optional)\")"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                                :choices {:req #(and (in-hand? %)"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     (corp? %)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     (corp-installable-type? %)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     (not (agenda? %))"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     (or (is-remote? z)"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                                                         (ice? %)))}"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                                :effect (effect (corp-install eid target (zone-\u003ename z) nil))}"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                               card nil)))}}}"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Ayla \\\"Bios\\\" Rahim: Simulant Specialist\""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "   {:abilities [{:label \"[:click] Add 1 card from NVRAM to your grip\""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                 :cost [:click 1]"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                 :async true"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                 :prompt \"Choose a card from NVRAM\""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                 :choices (req (cancellable (:hosted card)))"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"move a card from NVRAM to their Grip\""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (move target :hand)"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (effect-completed eid))}]"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    :events {:pre-start-game"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "             {:req (req (\u003d side :runner))"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "              :async true"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (show-wait-prompt state :corp \"the Runner to choose cards for NVRAM\")"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                           (doseq [c (take 6 (:deck runner))]"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                             (move state side c :play-area))"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                           (continue-ability"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                             state side"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                             {:prompt (str \"Select 4 cards for NVRAM\")"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                              :async true"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                              :choices {:max 4"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                                        :all true"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                                        :req #(and (runner? %)"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   (in-play-area? %))}"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                              :effect (req (doseq [c targets]"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (host state side (get-card state card) c {:facedown true}))"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (doseq [c (get-in @state [:runner :play-area])]"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (move state side c :deck))"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (shuffle! state side :deck)"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (clear-wait-prompt state :corp)"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (effect-completed state side eid))}"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "                             card nil))}}}"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Azmari EdTech: Shaping the Future\""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [choose-type {:prompt \"Name a Runner card type\""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                      :choices [\"Event\" \"Resource\" \"Program\" \"Hardware\"]"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "                      :effect (effect (update! (assoc card :az-target target))"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (system-msg (str \"uses Azmari EdTech: Shaping the Future to name \" target)))}"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "         check-type {:req (req (is-type? target (:az-target card)))"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "                     :effect (effect (gain-credits :corp 2))"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "                     :once :per-turn"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "                     :msg (msg \"gain 2 [Credits] from \" (:az-target card))}]"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "     {:events {:corp-turn-ends choose-type"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "               :runner-install check-type"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "               :play-event check-type}})"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Az McCaffrey: Mechanical Prodigy\""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "   ;; Effect marks Az\u0027s ability as \"used\" if it has already met it\u0027s trigger condition this turn"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(az-type? [card] (or (hardware? card)"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "                                (and (resource? card)"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (or (has-subtype? card \"Job\")"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (has-subtype? card \"Connection\")))))"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "           (not-triggered? [state card] (not (get-in @state [:per-turn (:cid card)])))"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "           (mark-triggered [state card] (swap! state assoc-in [:per-turn (:cid card)] true))]"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "     {:effect (req (when (pos? (event-count state :runner :runner-install #(az-type? (first %))))"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                     (mark-triggered state card)))"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "      :events {:pre-install {:req (req (and (az-type? target)"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "                                            (not-triggered? state card)))"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "                             :effect (effect (install-cost-bonus [:credit -1]))}"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "               :runner-install {:req (req (and (az-type? target)"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "                                               (not-triggered? state card)))"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "                                :silent (req true)"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "                                :msg (msg \"reduce the install cost of \" (:title target) \" by 1 [Credits]\")"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "                                :effect (req (mark-triggered state card))}}})"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Blue Sun: Powering the Future\""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "   {:flags {:corp-phase-12 (req (and (not (:disabled card))"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (some rezzed? (all-installed state :corp))))}"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:choices {:req rezzed?}"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (req (trigger-event state side :pre-rez-cost target)"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "                              (let [cost (rez-cost state side target)]"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "                                (gain-credits state side cost)"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "                                (move state side target :hand)"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "                                (system-msg state side (str \"adds \" (:title target) \" to HQ and gains \" cost \" [Credits]\"))"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                                (swap! state update-in [:bonus] dissoc :cost :rez)))}]}"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Boris \\\"Syfr\\\" Kovac: Crafty Veteran\""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-start-game {:effect draft-points-target}"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "             :runner-turn-begins {:req (req (and (has-most-faction? state :runner \"Criminal\")"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 (pos? (get-in runner [:tag :base]))))"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "                                  :msg \"remove 1 tag\""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "                                  :effect (effect (lose-tags 1))}}}"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Cerebral Imaging: Infinite Frontiers\""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "   {:effect (req (when (\u003e (:turn @state) 1)"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "                   (swap! state assoc-in [:corp :hand-size :base] (:credit corp)))"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "                 (add-watch state :cerebral-imaging"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "                            (fn [k ref old new]"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "                              (let [credit (get-in new [:corp :credit])]"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "                                (when (not\u003d (get-in old [:corp :credit]) credit)"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "                                  (swap! ref assoc-in [:corp :hand-size :base] credit))))))"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "    :leave-play (req (remove-watch state :cerebral-imaging)"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "                     (swap! state assoc-in [:corp :hand-size :base] 5))}"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Chaos Theory: Wünderkind\""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "   {:effect (effect (gain :memory 1))"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "    :leave-play (effect (lose :runner :memory 1))}"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Chronos Protocol: Selective Mind-mapping\""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "    {:corp-phase-12 {:effect (effect (enable-corp-damage-choice))}"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "     :runner-phase-12 {:effect (effect (enable-corp-damage-choice))}"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "     :pre-resolve-damage"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "     {:async true"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "      :req (req (and (\u003d target :net)"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "                     (corp-can-choose-damage? state)"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "                     (pos? (last targets))"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "                     (empty? (filter #(\u003d :net (first %)) (turn-events state :runner :damage)))))"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "      :effect (req (damage-defer state side :net (last targets))"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "                   (if (zero? (count (:hand runner)))"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                     (do (swap! state update-in [:damage] dissoc :damage-choose-corp)"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "                         (damage state side eid :net (get-defer-damage state side :net nil)"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "                                 {:unpreventable true :card card}))"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "                     (do (show-wait-prompt state :runner \"Corp to use Chronos Protocol: Selective Mind-mapping\")"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                         (continue-ability"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                           state side"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "                           {:optional"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                            {:prompt (str \"Use Chronos Protocol: Selective Mind-mapping to reveal the Runner\u0027s \""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "                                          \"Grip to select the first card trashed?\")"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "                             :priority 10"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "                             :player :corp"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                             :yes-ability {:prompt (msg \"Select a card to trash\")"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "                                           :choices (req (:hand runner)) :not-distinct true"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "                                           :priority 10"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "                                           :msg (msg \"trash \" (:title target)"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     (when (pos? (dec (or (get-defer-damage state side :net nil) 0)))"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "                                                       (str \" and deal \" (- (get-defer-damage state side :net nil) 1)"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            \" more net damage\")))"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "                                           :effect (req (clear-wait-prompt state :runner)"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        (swap! state update-in [:damage] dissoc :damage-choose-corp)"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        (trash state side target {:cause :net :unpreventable true})"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        (let [more (dec (or (get-defer-damage state side :net nil) 0))]"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          (damage-defer state side :net more {:part-resolved true})))}"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "                             :no-ability {:effect (req (clear-wait-prompt state :runner)"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "                                                       (swap! state update-in [:damage] dissoc :damage-choose-corp))}}}"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "                           card nil))))}}"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "    :req (req (empty? (filter #(\u003d :net (first %)) (turn-events state :runner :damage))))"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (enable-corp-damage-choice))"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "    :leave-play (req (swap! state update-in [:damage] dissoc :damage-choose-corp))}"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Cybernetics Division: Humanity Upgraded\""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "   {:effect (effect (lose :hand-size 1)"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "                    (lose :runner :hand-size 1))"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "    :leave-play (effect (gain :hand-size 1)"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "                        (gain :runner :hand-size 1))}"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Earth Station: On the Grid\""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-first-turn {:req (req (\u003d side :corp))"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "                              :effect (effect (update! (assoc card :flipped false)))}}"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:msg \"flip their ID\""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (update! (if (:flipped card)"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "                                            (assoc card"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   :flipped false"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   :code (subs (:code card) 0 5))"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "                                            (assoc card"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   :flipped true"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   :code (str (subs (:code card) 0 5) \"flip\")))))}]}"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Edward Kim: Humanity\u0027s Hammer\""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:access {:once :per-turn"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "                      :req (req (and (operation? target)"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (turn-flag? state side card :can-trash-operation)))"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "                      :effect (req (trash state side target)"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "                                   (swap! state assoc-in [:run :did-trash] true)"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "                                   (swap! state assoc-in [:runner :register :trashed-card] true)"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "                                   (register-turn-flag! state side card :can-trash-operation (constantly false)))"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "                      :msg (msg \"trash \" (:title target))}"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "             :successful-run-ends {:req (req (and (\u003d (:server target) [:archives])"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  (nil? (:replace-access (:run-effect target)))"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  (not\u003d (:max-access target) 0)"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  (seq (filter operation? (:discard corp)))))"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "                                   :effect (effect (register-turn-flag! card :can-trash-operation (constantly false)))}}}"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Ele \\\"Smoke\\\" Scovak: Cynosure of the Net\""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "   {:recurring 1"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "    :interactions {:pay-credits {:req (req (and (\u003d :ability (:source-type eid))"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "                                                (has-subtype? target \"Icebreaker\")))"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :type :recurring}}}"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Exile: Streethawk\""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "   {:flags {:runner-install-draw true}"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "    :events {:runner-install {:silent (req (not (and (program? target)"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     (some #{:discard} (:previous-zone target)))))"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "                              :async true"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "                              :req (req (and (program? target)"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (some #{:discard} (:previous-zone target))))"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "                              :msg (msg \"draw a card\")"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "                              :effect (req (draw state side eid 1 nil))}}}"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Freedom Khumalo: Crypto-Anarchist\""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "   {:interactions"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "    {:access-ability"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "     {:async true"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "      :once :per-turn"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "      :label \"[Freedom]: Trash card\""
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "      :req (req (and (not (:disabled card))"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "                     (not (agenda? target))"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "                     (\u003c\u003d (:cost target)"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "                         (reduce + (map #(get-counters % :virus)"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "                                        (all-installed state :runner))))))"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "      :effect (req (let [accessed-card target"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "                         play-or-rez (:cost target)]"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "                     (show-wait-prompt state :corp \"Runner to use Freedom Khumalo\u0027s ability\")"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "                     (if (zero? play-or-rez)"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "                       (continue-ability state side"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "                                         {:async true"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "                                          :msg (msg \"trash \" (:title accessed-card) \" at no cost\")"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "                                          :effect (effect (clear-wait-prompt :corp)"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          (trash-no-cost eid accessed-card))}"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "                                         card nil)"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "                       (wait-for (resolve-ability state side (pick-virus-counters-to-spend play-or-rez) card nil)"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (do (clear-wait-prompt state :corp)"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (if-let [msg (:msg async-result)]"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "                                       (do (system-msg state :runner"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "                                                       (str \"uses Freedom Khumalo: Crypto-Anarchist to\""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            \" trash \" (:title accessed-card)"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            \" at no cost, spending \" msg))"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (trash-no-cost state side eid accessed-card))"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "                                       ;; Player cancelled ability"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "                                       (do (swap! state dissoc-in [:per-turn (:cid card)])"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (access-non-agenda state side eid accessed-card :skip-trigger-event true))))))))}}}"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Fringe Applications: Tomorrow, Today\""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "    {:pre-start-game {:effect draft-points-target}"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "     :runner-turn-begins {:player :corp"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "                          :req (req (and (not (:disabled card))"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (has-most-faction? state :corp \"Weyland Consortium\")"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (some ice? (all-installed state side))))"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "                          :prompt \"Select a piece of ICE to place 1 advancement token on\""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "                          :choices {:req #(and (installed? %)"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "                                               (ice? %))}"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "                          :msg (msg \"place 1 advancement token on \" (card-str state target))"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "                          :effect (req (add-prop state :corp target :advance-counter 1 {:placed true}))}}}"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Gabriel Santiago: Consummate Professional\""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:successful-run {:silent (req true)"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "                              :req (req (and (\u003d target :hq)"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (first-successful-run-on-server? state :hq)))"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "                              :msg \"gain 2 [Credits]\""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "                              :effect (effect (gain-credits 2))}}}"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Gagarin Deep Space: Expanding the Horizon\""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "   {:flags {:slow-remote-access (req (not (:disabled card)))}"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "    :events {:pre-access-card {:req (req (is-remote? (second (:zone target))))"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "                               :effect (effect (access-cost-bonus [:credit 1]))"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "                               :msg \"make the Runner spend 1 [Credits] to access\"}}}"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "   \"GRNDL: Power Unleashed\""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-start-game {:req (req (\u003d :corp side))"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "                              :effect (req (gain-credits state :corp 5)"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (when (zero? (:bad-publicity corp))"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (gain-bad-publicity state :corp 1)))}}}"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Haarpsichord Studios: Entertainment Unleashed\""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [haarp (fn [state side card]"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "                 (if (agenda? card)"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "                   ((constantly false)"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "                    (toast state :runner \"Cannot steal due to Haarpsichord Studios.\" \"warning\"))"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "                   true))]"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "     {:events {:agenda-stolen"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "               {:effect (effect (register-turn-flag! card :can-steal haarp))}}"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "      :effect (req (when-not (first-event? state side :agenda-stolen)"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "                     (register-turn-flag! state side card :can-steal haarp)))"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "      :leave-play (effect (clear-turn-flag! card :can-steal))})"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Haas-Bioroid: Architects of Tomorrow\""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pass-ice"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "             {:async true"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "              :once :per-turn"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "              :req (req (and (rezzed? target)"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "                             (has-subtype? target \"Bioroid\")"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "                             (empty? (filter #(and (rezzed? %) (has-subtype? % \"Bioroid\"))"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (turn-events state side :pass-ice)))))"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (effect (show-wait-prompt :runner \"Corp to use Haas-Bioroid: Architects of Tomorrow\")"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "                              (continue-ability"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "                                {:prompt \"Select a Bioroid to rez\" :player :corp"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :choices {:req #(and (has-subtype? % \"Bioroid\") (not (rezzed? %)))}"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :msg (msg \"rez \" (:title target))"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :cancel-effect (effect (clear-wait-prompt :runner)"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        (effect-completed eid))"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :effect (effect (rez-cost-bonus -4)"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 (clear-wait-prompt :runner)"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 (rez eid target nil))}"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "                                card nil))}}}"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Haas-Bioroid: Engineering the Future\""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:corp-install {:req (req (first-event? state corp :corp-install))"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "                            :msg \"gain 1 [Credits]\""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "                            :effect (effect (gain-credits 1))}}}"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Haas-Bioroid: Stronger Together\""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-ice-strength {:req (req (and (ice? target) (has-subtype? target \"Bioroid\")))"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "                                :effect (effect (ice-strength-bonus 1 target))}}"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "    :leave-play (effect (update-all-ice))"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (effect (update-all-ice))}"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Harishchandra Ent.: Where You\u0027re the Star\""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:runner-gain-tag {:effect (req (when (is-tagged? state)"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "                                              (reveal-hand state :runner)))}"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "             :runner-lose-tag {:effect (req (when-not (is-tagged? state)"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "                                              (conceal-hand state :runner)))}"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "             ;; Triggered when Paparazzi enters / leaves"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "             :runner-is-tagged {:effect (req (if (is-tagged? state)"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "                                               (reveal-hand state :runner)"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "                                               (conceal-hand state :runner)))}"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "             ;; Triggered when gaining or losing additional tag"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "             :runner-additional-tag-change {:effect (req (if (is-tagged? state)"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "                                                           (reveal-hand state :runner)"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "                                                           (conceal-hand state :runner)))}}"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (req (when (is-tagged? state)"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "                   (reveal-hand state :runner)))"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "    :leave-play (req (when (is-tagged? state)"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "                       (conceal-hand state :runner)))}"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Harmony Medtech: Biomedical Pioneer\""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "   {:effect (effect (lose :agenda-point-req 1) (lose :runner :agenda-point-req 1))"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "    :leave-play (effect (gain :agenda-point-req 1) (gain :runner :agenda-point-req 1))}"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Hayley Kaplan: Universal Scholar\""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:runner-install"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "             {:silent (req (not (and (first-event? state side :runner-install)"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (some #(is-type? % (:type target)) (:hand runner)))))"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "              :req (req (and (first-event? state side :runner-install)"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "                             (some #(is-type? % (:type target)) (:hand runner))))"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "              :once :per-turn"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "              :async true"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "              (req (let [itarget target"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "                         type (:type itarget)]"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "                     (continue-ability"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "                       state side"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "                       {:optional {:prompt (msg \"Install another \" type \" from your Grip?\")"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "                                   :yes-ability"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "                                   {:prompt (msg \"Select another \" type \" to install from your Grip\")"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "                                    :choices {:req #(and (is-type? % type)"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "                                                         (in-hand? %))}"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "                                    :msg (msg \"install \" (:title target))"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "                                    :effect (effect (runner-install eid target nil))}}}"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "                       card nil)))}}}"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Hoshiko Shiro\""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-first-turn {:req (req (\u003d side :runner))"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "                              :effect (effect (update! (assoc card :flipped false)))}}"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:msg \"flip their ID\""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (update! (if (:flipped card)"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "                                            (assoc card"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   :flipped false"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   :code (subs (:code card) 0 5))"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "                                            (assoc card"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   :flipped true"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   :code (str (subs (:code card) 0 5) \"flip\")))))}]}"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Hyoubu Institute: Absolute Clarity\""
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:corp-reveal {:once :per-turn"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "                           :req (req (first-event? state side :corp-reveal))"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "                           :msg \"gain 1 [Credits]\""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "                           :effect (effect (gain-credits 1))}}"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:cost [:click 1]"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "                 :label \"Reveal the top card of the Stack\""
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (req (when-let [revealed-card (-\u003e runner :deck first)]"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "                                (system-msg state side (str \"uses Hyoubu Institute: Absolute Clarity to reveal \" (:title revealed-card)))"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "                                (reveal state side revealed-card)))}"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "                {:cost [:click 1]"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "                 :label \"Reveal a random card from the Grip\""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (req (when-let [revealed-card (-\u003e runner :hand shuffle first)]"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "                                (system-msg state side (str \"uses Hyoubu Institute: Absolute Clarity to reveal \" (:title revealed-card)))"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "                                (reveal state side revealed-card)))}]}"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Iain Stirling: Retired Spook\""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [ability {:req (req (\u003e (:agenda-point corp) (:agenda-point runner)))"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "                  :once :per-turn"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "                  :msg \"gain 2 [Credits]\""
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "                  :effect (effect (gain-credits 2))}]"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "     {:flags {:drip-economy true}"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "      :events {:runner-turn-begins ability}"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "      :abilities [ability]})"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Industrial Genomics: Growing Solutions\""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-trash {:effect (effect (trash-cost-bonus"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (count (remove #(:seen %) (:discard corp)))))}}}"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Information Dynamics: All You Need To Know\""
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events (let [inf {:req (req (and (not (:disabled card))"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (has-most-faction? state :corp \"NBN\")))"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "                       :msg \"give the Runner 1 tag\""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "                       :async true"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "                       :effect (effect (gain-tags :corp eid 1))}]"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "              {:pre-start-game {:effect draft-points-target}"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "               :agenda-scored inf :agenda-stolen inf})}"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Jamie \\\"Bzzz\\\" Micken: Techno Savant\""
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-start-game {:effect draft-points-target}"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "             :pre-install {:req (req (and (has-most-faction? state :runner \"Shaper\")"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "                                          (pos? (count (:deck runner)))"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "                                          (first-event? state side :pre-install)))"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "                           :msg \"draw 1 card\""
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "                           :once :per-turn"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "                           :async true"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "                           :effect (effect (draw eid 1 nil))}}}"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Jemison Astronautics: Sacrifice. Audacity. Success.\""
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:corp-forfeit-agenda"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "             {:async true"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (show-wait-prompt state :runner \"Corp to place advancement tokens\")"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "                           (let [p (inc (get-agenda-points state :corp target))]"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "                             (continue-ability"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "                               state side"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "                               {:prompt \"Select a card to place advancement tokens on with Jemison Astronautics: Sacrifice. Audacity. Success.\""
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "                                :choices {:req #(and (installed? %) (corp? %))}"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "                                :msg (msg \"place \" p \" advancement tokens on \" (card-str state target))"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "                                :cancel-effect (effect (clear-wait-prompt :runner))"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "                                :effect (effect (add-prop :corp target :advance-counter p {:placed true})"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "                                                (clear-wait-prompt :runner))}"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "                               card nil)))}}}"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Jesminder Sareen: Girl Behind the Curtain\""
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-tag {:once :per-run"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "                       :req (req (:run @state))"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "                       :msg \"avoid the first tag during this run\""
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "                       :effect (effect (tag-prevent :runner 1))}}}"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Jinteki Biotech: Life Imagined\""
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-first-turn {:req (req (\u003d side :corp))"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "                              :prompt \"Choose a copy of Jinteki Biotech to use this game\""
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "                              :choices [\"The Brewery\" \"The Tank\" \"The Greenhouse\"]"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "                              :effect (effect (update! (assoc card :biotech-target target))"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "                                              (system-msg (str \"has chosen a copy of Jinteki Biotech for this game\")))}}"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:label \"Check chosen flip identity\""
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "                 :req (req (:biotech-target card))"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (req (case (:biotech-target card)"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "                                \"The Brewery\""
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "                                (toast state :corp \"Flip to: The Brewery (Do 2 net damage)\" \"info\")"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "                                \"The Tank\""
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "                                (toast state :corp \"Flip to: The Tank (Shuffle Archives into R\u0026D)\" \"info\")"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "                                \"The Greenhouse\""
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "                                (toast state :corp \"Flip to: The Greenhouse (Place 4 advancement tokens on a card)\" \"info\")))}"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "                {:cost [:click 3]"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "                 :req (req (not (:biotech-used card)))"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "                 :label \"Flip this identity\""
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (req (let [flip (:biotech-target card)]"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "                                (case flip"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \"The Brewery\""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "                                  (do (system-msg state side \"uses The Brewery to do 2 net damage\")"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (damage state side eid :net 2 {:card card})"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (update! state side (assoc card :code \"brewery\")))"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \"The Tank\""
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "                                  (do (system-msg state side \"uses The Tank to shuffle Archives into R\u0026D\")"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (shuffle-into-deck state side :discard)"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (update! state side (assoc card :code \"tank\")))"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \"The Greenhouse\""
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "                                  (do (system-msg state side (str \"uses The Greenhouse to place 4 advancement tokens \""
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                  \"on a card that can be advanced\"))"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (update! state side (assoc card :code \"greenhouse\"))"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (resolve-ability"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "                                        state side"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "                                        {:prompt \"Select a card that can be advanced\""
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "                                         :choices {:req can-be-advanced?}"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "                                         :effect (effect (add-prop target :advance-counter 4 {:placed true}))} card nil)))"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "                                (update! state side (assoc (get-card state card) :biotech-used true))))}]}"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Jinteki: Personal Evolution\""
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:agenda-scored {:interactive (req true)"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "                             :async true"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "                             :req (req (not (:winner @state)))"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "                             :msg \"do 1 net damage\""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "                             :effect (effect (damage eid :net 1 {:card card}))}"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "             :agenda-stolen {:msg \"do 1 net damage\""
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "                             :async true"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "                             :req (req (not (:winner @state)))"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "                             :effect (effect (damage eid :net 1 {:card card}))}}}"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Jinteki: Potential Unleashed\""
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-resolve-damage"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "             {:req (req (and (-\u003e @state :corp :disable-id not) (\u003d target :net) (pos? (last targets))))"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (let [c (first (get-in @state [:runner :deck]))]"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "                             (system-msg state :corp (str \"uses Jinteki: Potential Unleashed to trash \" (:title c)"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          \" from the top of the Runner\u0027s Stack\"))"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "                             (mill state :corp :runner 1)))}}}"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Jinteki: Replicating Perfection\""
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "    {:runner-phase-12 {:effect (req (apply prevent-run-on-server"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "                                           state card (map first (get-remotes state))))}"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "     :run {:once :per-turn"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "           :req (req (is-central? (:server run)))"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "           :effect (req (apply enable-run-on-server"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "                               state card (map first (get-remotes state))))}}"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "    :req (req (empty? (let [successes (turn-events state side :successful-run)]"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "                        (filter #(is-central? %) successes))))"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "    :effect (req (apply prevent-run-on-server state card (map first (get-remotes state))))"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "    :leave-play (req (apply enable-run-on-server state card (map first (get-remotes state))))}"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Kabonesa Wu: Netspace Thrillseeker\""
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [rfg-ability {:req (req (seq (filter #(get-in % [:special :kabonesa]) (all-installed state :runner))))"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "                      :effect (req (doseq [program (filter #(get-in % [:special :kabonesa]) (all-installed state :runner))]"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (move state side program :rfg)"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (system-msg state side (str \"remove \" (:title program) \" from the game\"))))}]"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "     {:events {:corp-turn-ends rfg-ability"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "               :runner-turn-ends rfg-ability}"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "      :abilities [{:label \"Install a non-virus program from your stack, lowering the cost by 1 [Credit]\""
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "                 :cost [:click 1]"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "                 :prompt \"Choose a program\""
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "                 :choices (req (cancellable"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (filter #(and (program? %)"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "                                               (not (has-subtype? % \"Virus\")))"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (:deck runner))))"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg (msg \"install \" (:title target) \" from their stack, lowering the cost by 1 [Credit]\")"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (trigger-event :searched-stack nil)"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (shuffle! :deck)"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (install-cost-bonus [:credit -1])"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (runner-install eid (assoc-in target [:special :kabonesa] true) nil))}]})"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Kate \\\"Mac\\\" McCaffrey: Digital Tinker\""
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "   ;; Effect marks Kate\u0027s ability as \"used\" if it has already met it\u0027s trigger condition this turn"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(kate-type? [card] (or (hardware? card)"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "                                  (program? card)))"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "           (not-triggered? [state card] (not (get-in @state [:per-turn (:cid card)])))"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "           (mark-triggered [state card] (swap! state assoc-in [:per-turn (:cid card)] true))]"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "     {:effect (req (when (pos? (event-count state :runner :runner-install #(kate-type? (first %))))"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "                     (mark-triggered state card)))"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "      :events {:pre-install {:req (req (and (kate-type? target)"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "                                            (not-triggered? state card)))"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "                             :effect (effect (install-cost-bonus [:credit -1]))}"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "               :runner-install {:req (req (and (kate-type? target)"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "                                               (not-triggered? state card)))"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "                                :silent (req true)"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "                                :msg (msg \"reduce the install cost of \" (:title target) \" by 1 [Credits]\")"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "                                :effect (req (mark-triggered state card))}}})"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Ken \\\"Express\\\" Tenma: Disappeared Clone\""
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:play-event {:req (req (and (has-subtype? target \"Run\")"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (first-event? state :runner :play-event #(has-subtype? (first %) \"Run\"))))"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "                          :msg \"gain 1 [Credits]\""
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "                          :effect (effect (gain-credits 1))}}}"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Khan: Savvy Skiptracer\""
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pass-ice"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "             {:req (req (first-event? state :corp :pass-ice))"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "              :async true"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (if (some #(has-subtype? % \"Icebreaker\") (:hand runner))"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "                             (continue-ability state side"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "                                               {:prompt \"Select an icebreaker to install from your Grip\""
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "                                                :choices {:req #(and (in-hand? %) (has-subtype? % \"Icebreaker\"))}"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "                                                :async true"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "                                                :msg (msg \"install \" (:title target))"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "                                                :effect (effect (install-cost-bonus [:credit -1])"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                (runner-install eid target nil))}"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "                                               card nil)"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "                             (effect-completed state side eid)))}}}"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Laramy Fisk: Savvy Investor\""
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "    {:successful-run"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "     {:async true"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "      :interactive (get-autoresolve :auto-fisk (complement never?))"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "      :silent (get-autoresolve :auto-fisk never?)"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "      :req (req (and (is-central? (:server run))"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "                     (first-event? state side :successful-run is-central?)))"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "      :effect (effect (continue-ability"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "                        {:optional"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "                         {:autoresolve (get-autoresolve :auto-fisk)"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "                          :prompt \"Force the Corp to draw a card?\""
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "                          :yes-ability {:msg \"force the Corp to draw 1 card\""
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "                                        :async true"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "                                        :effect (effect (draw :corp eid 1 nil))}"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "                          :no-ability {:effect (effect (system-msg \"declines to use Laramy Fisk: Savvy Investor\"))}}}"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "                        card nil))}}"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [(set-autoresolve :auto-fisk \"force Corp draw\")]}"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Lat: Ethical Freelancer\""
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "    {:runner-turn-ends"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "     {:req (req (\u003d (count (:hand runner)) (count (:hand corp))))"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "      :optional {:autoresolve (get-autoresolve :auto-lat)"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "                 :prompt \"Draw 1 card?\""
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "                 :yes-ability {:async true"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "                               :msg \"draw 1 card\""
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "                               :effect (effect (draw :runner eid 1 nil))}"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "                 :no-ability {:effect (effect (system-msg \"declines to use Lat: Ethical Freelancer\"))}}}}"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [(set-autoresolve :auto-lat \"Lat: Ethical Freelancer\")]}"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Leela Patel: Trained Pragmatist\""
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [leela {:interactive (req true)"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "                :prompt \"Select an unrezzed card to return to HQ\""
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "                :choices {:req #(and (not (rezzed? %)) (installed? %) (corp? %))}"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "                :msg (msg \"add \" (card-str state target) \" to HQ\")"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "                :effect (effect (move :corp target :hand))}]"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "     {:flags {:slow-hq-access (req true)}"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "      :events {:agenda-scored leela"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "               :agenda-stolen leela}})"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Liza Talking Thunder: Prominent Legislator\""
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "   {:implementation \"Needs to be resolved manually with Crisium Grid\""
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "    :events"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "    {:successful-run"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "     {:async true"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "      :interactive (req true)"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "      :msg \"draw 2 cards and take 1 tag\""
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "      :req (req (and (is-central? (:server run))"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "                     (first-event? state side :successful-run is-central?)))"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "      :effect (req (wait-for (gain-tags state :runner 1)"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "                             (draw state :runner eid 2 nil)))}}}"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Los: Data Hijacker\""
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:rez {:once :per-turn"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "                   :req (req (ice? target))"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "                   :msg \"gain 2 [Credits]\""
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "                   :effect (effect (gain-credits :runner 2))}}}"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "   \"MaxX: Maximum Punk Rock\""
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [ability {:msg (msg (let [deck (:deck runner)]"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "                              (if (pos? (count deck))"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "                                (str \"trash \" (join \", \" (map :title (take 2 deck))) \" from their Stack and draw 1 card\")"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "                                \"trash the top 2 cards from their Stack and draw 1 card - but their Stack is empty\")))"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "                  :once :per-turn"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "                  :async true"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "                  :effect (effect (mill :runner 2) (draw eid 1 nil))}]"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "     {:flags {:runner-turn-draw true"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "              :runner-phase-12 (req (and (not (:disabled card))"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (some #(card-flag? % :runner-turn-draw true) (all-active-installed state :runner))))}"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "      :events {:runner-turn-begins ability}"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "      :abilities [ability]})"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Mti Mwekundu: Life Improved\""
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "   (let [ability {:once :per-turn"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "                  :label \"Install a piece of ice from HQ at the innermost position\""
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "                  :req (req (and run"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (zero? (:position run))"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (not (contains? run :corp-phase-43))"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (not (contains? run :successful))))"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "                  :prompt \"Choose ICE to install from HQ\""
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "                  :msg \"install ice at the innermost position of this server. Runner is now approaching that ice\""
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "                  :choices {:req #(and (ice? %)"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "                                       (in-hand? %))}"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "                  :effect (req (corp-install state side target (zone-\u003ename (first (:server run)))"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "                                             {:ignore-all-cost true"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "                                              :front true})"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "                               (swap! state assoc-in [:run :position] 1))}]"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "     {:abilities [ability]"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "      :events {:approach-server {:req (req (can-trigger? state side ability card nil))"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "                                 :effect (req (toast state :corp \"You may use Mti Mwekundu: Life Improved to install ice from HQ.\" \"info\"))}}})"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Nasir Meidan: Cyber Explorer\""
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:rez {:req (req (and (:run @state)"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "                                  ;; check that the rezzed item is the encountered ice"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "                                  (\u003d (:cid target)"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (:cid (get-card state current-ice)))))"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "                   :effect (req (toast state :runner \"Click Nasir Meidan: Cyber Explorer to lose all credits and gain credits equal to the rez cost of the newly rezzed ice.\" \"info\"))}}"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:req (req (and (:run @state)"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "                                (:rezzed (get-card state current-ice))))"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (req (let [current-ice (get-card state current-ice)]"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "                                (trigger-event state side :pre-rez-cost current-ice)"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "                                (let [cost (rez-cost state side current-ice)]"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "                                  (lose-credits state side (:credit runner))"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "                                  (gain-credits state side cost)"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "                                  (system-msg state side (str \"loses all credits and gains \" cost"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "                                                              \" [Credits] from the rez of \" (:title current-ice)))"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "                                  (swap! state update-in [:bonus] dissoc :cost))))}]}"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Nathaniel \\\"Gnat\\\" Hall: One-of-a-Kind\""
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [ability {:label \"Gain 1 [Credits] (start of turn)\""
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "                  :once :per-turn"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "                  :effect (req (when (and (\u003e 3 (count (:hand runner)))"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "                                          (:runner-phase-12 @state))"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (system-msg state :runner (str \"uses \" (:title card) \" to gain 1 [Credits]\"))"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (gain-credits state :runner 1)))}]"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "     {:flags {:drip-economy true"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "              :runner-phase-12 (req (and (not (:disabled card))"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (some #(card-flag? % :runner-turn-draw true) (all-active-installed state :runner))))}"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "      :abilities [ability]"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "      :events {:runner-turn-begins ability}})"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "   \"NBN: Controlling the Message\""
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:runner-trash"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "             {:async true"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "              :req (req (and (\u003d 1 (count (filter #(and (installed? (first %)) (corp? (first %)))"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 (turn-events state side :runner-trash))))"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "                             (corp? target)"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "                             (installed? target)))"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (show-wait-prompt state :runner \"Corp to use NBN: Controlling the Message\")"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "                           (continue-ability"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "                             state :corp"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "                             {:optional"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "                              {:prompt \"Trace the Runner with NBN: Controlling the Message?\""
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "                               :autoresolve (get-autoresolve :auto-ctm)"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "                               :yes-ability {:trace {:base 4"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     :successful"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     {:msg \"give the Runner 1 tag\""
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "                                                      :async true"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "                                                      :effect (effect (gain-tags :corp eid 1 {:unpreventable true}))}}}"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "                               :end-effect (effect (clear-wait-prompt :runner))}}"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "                             card nil))}}"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [(set-autoresolve :auto-ctm \"CtM\")]}"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "   \"NBN: Making News\""
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "   {:recurring 2"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "    :interactions {:pay-credits {:req (req (\u003d :trace (:source-type eid)))"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :type :recurring}}}"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "   \"NBN: The World is Yours*\""
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "   {:effect (effect (gain :hand-size 1))"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "    :leave-play (effect (lose :hand-size 1))}"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Near-Earth Hub: Broadcast Center\""
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:server-created {:req (req (first-event? state :corp :server-created))"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "                              :msg \"draw 1 card\""
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "                              :async true"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "                              :effect (effect (draw :corp eid 1 nil))}}}"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Nero Severn: Information Broker\""
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "   {:abilities [{:req (req (has-subtype? current-ice \"Sentry\"))"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "                 :once :per-turn"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"jack out when encountering a Sentry\""
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (jack-out nil))}]}"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "   \"New Angeles Sol: Your News\""
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [nasol {:optional"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "                {:prompt \"Play a Current?\""
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "                 :player :corp"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "                 :req (req (some #(has-subtype? % \"Current\") (concat (:hand corp) (:discard corp) (:current corp))))"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "                 :yes-ability {:prompt \"Select a Current to play from HQ or Archives\""
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "                               :show-discard true"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "                               :async true"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "                               :choices {:req #(and (has-subtype? % \"Current\")"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    (corp? %)"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    (#{[:hand] [:discard]} (:zone %)))}"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "                               :msg (msg \"play a current from \" (name-zone \"Corp\" (:zone target)))"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "                               :effect (effect (play-instant eid target))}}}]"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "     {:events {:agenda-scored nasol"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "               :agenda-stolen nasol}})"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "   \"NEXT Design: Guarding the Net\""
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [ndhelper (fn nd [n] {:prompt (msg \"When finished, click NEXT Design: Guarding the Net to draw back up to 5 cards in HQ. \""
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "                                           \"Select a piece of ICE in HQ to install:\")"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "                              :choices {:req #(and (corp? %)"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   (ice? %)"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   (in-hand? %))}"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "                              :effect (req (corp-install state side target nil)"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (when (\u003c n 3)"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (resolve-ability state side (nd (inc n)) card nil)))})]"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "     {:events {:pre-first-turn {:req (req (\u003d side :corp))"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "                                :msg \"install up to 3 pieces of ICE and draw back up to 5 cards\""
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "                                :effect (effect (resolve-ability (ndhelper 1) card nil)"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "                                                (update! (assoc card :fill-hq true)))}}"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "      :abilities [{:req (req (:fill-hq card))"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "                   :msg (msg \"draw \" (- 5 (count (:hand corp))) \" cards\")"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "                   :effect (req (draw state side (- 5 (count (:hand corp))))"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "                                (update! state side (dissoc card :fill-hq))"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "                                (swap! state dissoc :turn-events))}]})"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Nisei Division: The Next Generation\""
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:reveal-spent-credits"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "             {:req (req (and (some? (first targets))"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "                             (some? (second targets))))"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "              :msg \"gain 1 [Credits]\""
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (effect (gain-credits :corp 1))}}}"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Noise: Hacker Extraordinaire\""
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:runner-install {:msg \"force the Corp to trash the top card of R\u0026D\""
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "                              :effect (effect (mill :corp))"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "                              :req (req (has-subtype? target \"Virus\"))}}}"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Null: Whistleblower\""
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "   {:abilities [{:once :per-turn"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "                 :req (req (and (:run @state)"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "                                (rezzed? current-ice)))"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "                 :prompt \"Select a card in your Grip to trash\""
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "                 :choices {:req in-hand?}"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg (msg \"trash \" (:title target) \" and reduce the strength of \" (:title current-ice)"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "                           \" by 2 for the remainder of the run\")"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (update! (assoc card :null-target current-ice))"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (update-ice-strength current-ice)"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (trash target {:unpreventable true}))}]"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "    :events {:pre-ice-strength"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "             {:req (req (\u003d (:cid target) (get-in card [:null-target :cid])))"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (effect (ice-strength-bonus -2 target))}"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "             :run-ends"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "             {:effect (req (swap! state dissoc-in [:runner :identity :null-target]))}}}"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Omar Keung: Conspiracy Theorist\""
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "   {:abilities [{:cost [:click 1]"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"make a run on Archives\""
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "                 :once :per-turn"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "                 :makes-run true"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (update! (assoc card :omar-run-activated true))"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (make-run :archives nil (get-card state card)))}]"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "    :events {:pre-successful-run {:interactive (req true)"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "                                  :req (req (and (:omar-run-activated card)"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 (\u003d :archives (-\u003e run :server first))))"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "                                  :prompt \"Treat as a successful run on which server?\""
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "                                  :choices [\"HQ\" \"R\u0026D\"]"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "                                  :effect (req (let [target-server (if (\u003d target \"HQ\") :hq :rd)]"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 (swap! state update-in [:runner :register :successful-run] #(rest %))"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 (swap! state assoc-in [:run :server] [target-server])"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 ; remove the :req from the run-effect, so that other cards that replace"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 ; access don\u0027t use Omar\u0027s req."
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 (swap! state dissoc-in [:run :run-effect :req])"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 (trigger-event state :corp :no-action)"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 (swap! state update-in [:runner :register :successful-run] #(conj % target-server))"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 (system-msg state side (str \"uses Omar Keung: Conspiracy Theorist to make a successful run on \" target))))}"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "             :run-ends {:effect (req (swap! state dissoc-in [:runner :identity :omar-run-activated]))}}}"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Pālanā Foods: Sustainable Growth\""
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:runner-draw {:req (req (and (first-event? state :corp :runner-draw)"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "                                          (pos? target)))"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "                           :msg \"gain 1 [Credits]\""
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "                           :effect (effect (gain-credits :corp 1))}}}"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Quetzal: Free Spirit\""
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "   {:abilities [{:once :per-turn"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg \"break 1 Barrier subroutine\"}]}"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Reina Roja: Freedom Fighter\""
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(not-triggered? [state card] (not (get-in @state [:per-turn (:cid card)])))"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "           (mark-triggered [state card] (swap! state assoc-in [:per-turn (:cid card)] true))]"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "     {:effect (req (when (pos? (event-count state :corp :rez #(ice? (first %))))"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "                     (mark-triggered state card)))"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "      :events {:pre-rez {:req (req (and (ice? target)"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "                                        (not-triggered? state card)))"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "                         :effect (effect (rez-cost-bonus 1))}"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "               :rez {:req (req (and (ice? target)"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (not-triggered? state card)))"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "                     :effect (req (mark-triggered state card))}}})"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Rielle \\\"Kit\\\" Peddler: Transhuman\""
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "   {:abilities [{:req (req (and (:run @state)"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": "                                (:rezzed (get-card state current-ice))))"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "                 :once :per-turn"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg (msg \"make \" (:title current-ice) \" gain Code Gate until the end of the run\")"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (req (let [ice current-ice"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "                                    stypes (:subtype ice)]"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "                                (update! state side (assoc ice :subtype (combine-subtypes true stypes \"Code Gate\")))"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "                                (register-events state side"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 {:run-ends {:effect (effect (update! (assoc ice :subtype stypes))"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                             (trigger-event :ice-subtype-changed ice)"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                             (unregister-events card))}} card)"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "                                (update-ice-strength state side ice)"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "                                (trigger-event state side :ice-subtype-changed ice)))}]"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "    :events {:run-ends nil}}"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Saraswati Mnemonics: Endless Exploration\""
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(install-card [chosen]"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "             {:prompt \"Select a remote server\""
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "              :choices (req (conj (vec (get-remote-names state)) \"New remote\"))"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "              :async true"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (req (let [tgtcid (:cid chosen)]"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "                             (register-turn-flag!"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "                               state side"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "                               card :can-rez"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "                               (fn [state side card]"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (if (\u003d (:cid card) tgtcid)"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "                                   ((constantly false) (toast state :corp \"Cannot rez due to Saraswati Mnemonics: Endless Exploration.\" \"warning\"))"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": "                                   true)))"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "                             (register-turn-flag!"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "                               state side"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "                               card :can-score"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "                               (fn [state side card]"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (if (and (\u003d (:cid card) tgtcid)"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "                                          (\u003e\u003d (get-counters card :advancement) (or (:current-cost card) (:advancementcost card))))"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "                                   ((constantly false) (toast state :corp \"Cannot score due to Saraswati Mnemonics: Endless Exploration.\" \"warning\"))"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": "                                   true))))"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "                           (wait-for (corp-install state side chosen target nil)"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (add-prop state :corp (find-latest state chosen) :advance-counter 1 {:placed true})"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (effect-completed state side eid)))})]"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "     {:abilities [{:async true"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "                   :label \"Install a card from HQ\""
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "                   :cost [:click 1 :credit 1]"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "                   :prompt \"Select a card to install from HQ\""
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": "                   :choices {:req #(and (#{\"Asset\" \"Agenda\" \"Upgrade\"} (:type %))"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (corp? %)"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (in-hand? %))}"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "                   :msg (msg \"install a card in a remote server and place 1 advancement token on it\")"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "                   :effect (effect (continue-ability (install-card target) card nil))}]})"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Seidr Laboratories: Destiny Defined\""
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "   {:implementation \"Manually triggered\""
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:req (req (:run @state))"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "                 :once :per-turn"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "                 :prompt \"Select a card to add to the top of R\u0026D\""
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "                 :show-discard true"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": "                 :choices {:req #(and (corp? %) (in-discard? %))}"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (move target :deck {:front true}))"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg (msg \"add \" (if (:seen target) (:title target) \"a card\") \" to the top of R\u0026D\")}]}"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Silhouette: Stealth Operative\""
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:successful-run"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": "             {:interactive (req (some #(not (rezzed? %)) (all-installed state :corp)))"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "              :async true"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "              :req (req (and (\u003d target :hq)"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "                             (first-successful-run-on-server? state :hq)))"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (effect (continue-ability {:choices {:req #(and (installed? %)"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                      (not (rezzed? %)))}"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 :effect (effect (expose eid target))"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 :msg \"expose 1 card\""
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 :async true}"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "                                                card nil))}}}"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Skorpios Defense Systems: Persuasive Power\""
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": "   {:implementation \"Manually triggered, no restriction on which cards in Heap can be targeted.  Cannot use on in progress run event\""
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:label \"Remove a card in the Heap that was just trashed from the game\""
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "                 :async true"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (req (when-not (and (used-this-turn? (:cid card) state) (active-prompt? state side card))"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "                                (show-wait-prompt state :runner \"Corp to use Skorpios\u0027 ability\" {:card card})"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "                                (continue-ability state side"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  {:prompt \"Choose a card in the Runner\u0027s Heap that was just trashed\""
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   :once :per-turn"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   :choices (req (cancellable"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                   ;; do not allow a run event in progress to get nuked #2963"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                   (remove #(same-card? % (get-in @state [:run :run-effect :card]))"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                           (:discard runner))))"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   :msg (msg \"remove \" (:title target) \" from the game\")"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   :effect (req (move state :runner target :rfg)"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                (clear-wait-prompt state :runner)"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                (effect-completed state side eid))"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   :cancel-effect (req (clear-wait-prompt state :runner)"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                       (effect-completed state side eid))}"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  card nil)))}]}"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Spark Agency: Worldswide Reach\""
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": "    {:rez {:req (req (and (has-subtype? target \"Advertisement\")"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "                          (first-event? state :corp :rez #(has-subtype? (first %) \"Advertisement\"))))"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "           :effect (effect (lose-credits :runner 1))"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": "           :msg (msg \"make the Runner lose 1 [Credits] by rezzing an Advertisement\")}}}"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Sportsmetal: Go Big or Go Home\""
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": "   (let [ab {:prompt \"Gain 2 credits or draw 2 cards?\""
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "             :player :corp"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "             :choices [\"2 credits\" \"2 cards\"]"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "             :msg \"gain 2 [Credits] or draw 2 cards\""
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": "             :async true"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "             :interactive (req true)"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "             :effect (req (if (\u003d target \"2 credits\")"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "                            (do (system-msg state side \"chooses to take 2 [Credits]\")"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "                                (gain-credits state :corp 2)"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "                                (effect-completed state side eid))"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "                            (do (system-msg state side \"chooses to draw 2 cards\")"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "                                (draw state :corp eid 2 nil))))}]"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "     {:events {:agenda-scored ab"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "               :agenda-stolen ab}})"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": "   \"SSO Industries: Fueling Innovation\""
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "   (letfn [(installed-faceup-agendas [state]"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "             (-\u003e\u003e (all-installed state :corp)"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "                  (filter agenda?)"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": "                  (filter faceup?)))"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "           (selectable-ice? [card]"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "             (and"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": "               (ice? card)"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "               (installed? card)"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "               (zero? (+ (get-counters card :advancement)"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "                         (:extra-advance-counter card 0)))))"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "           (ice-with-no-advancement-tokens [state]"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "             (-\u003e\u003e (all-installed state :corp)"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": "                  (filter selectable-ice?)))]"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "     {:events {:corp-turn-ends"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": "               {:optional"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "                {:prompt \"Place advancement tokens?\""
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "                 :req (req (and"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": "                             (not-empty (installed-faceup-agendas state))"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "                             (not-empty (ice-with-no-advancement-tokens state))))"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "                 :autoresolve (get-autoresolve :auto-sso)"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "                 :yes-ability"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "                 {:async true"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "                  :effect (req (show-wait-prompt state :runner \"Corp to use SSO Industries\u0027 ability\")"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "                            (let [agendas (installed-faceup-agendas state)"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "                                  agenda-points (-\u003e\u003e agendas"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     (map :agendapoints)"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     (reduce +))"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "                                  ice (ice-with-no-advancement-tokens state)]"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "                              (continue-ability"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": "                                state side"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "                                {:prompt (str \"Select ICE with no advancement tokens to place \""
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "                                              (quantify agenda-points \"advancement token\") \" on\")"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :choices {:req #(selectable-ice? %)}"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :msg (msg \"places \" (quantify agenda-points \"advancement token\")"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "                                           \" on ICE with no advancement tokens\")"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :effect (req (add-prop state :corp target :advance-counter agenda-points {:placed true})"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "                                              (clear-wait-prompt state :runner))"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :cancel-effect (req (clear-wait-prompt state :runner))}"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": "                                card nil)))}}}}"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "      :abilities [(set-autoresolve :auto-sso \"SSO\")]})"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Steve Cambridge: Master Grifter\""
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:successful-run"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": "             {:req (req (and (\u003d target :hq)"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "                             (first-successful-run-on-server? state :hq)"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "                             (if (-\u003e @state :run :run-effect :card)"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "                               (\u003e (count (:discard runner)) 2)"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "                               (\u003e (count (:discard runner)) 1))))"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "              :interactive (req true)"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "              :async true"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (effect (continue-ability"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": "                                {:async true"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :prompt \"Select 2 cards in your Heap\""
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :show-discard true"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :choices {:max 2 :req #(and (in-discard? %)"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             (runner? %)"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             (not\u003d (-\u003e @state :run :run-effect :card :cid) (:cid %)))}"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :cancel-effect (req (effect-completed state side eid))"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :effect (req (let [c1 (first targets)"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    c2 (second targets)]"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": "                                                (show-wait-prompt state :runner \"Corp to choose which card to remove from the game\")"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "                                                (continue-ability"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  state :corp"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  {:prompt \"Choose which card to remove from the game\""
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   :player :corp"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   :choices [c1 c2]"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   :effect (req (if (\u003d target c1)"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                  (do (move state :runner c1 :rfg)"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                      (move state :runner c2 :hand)"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                      (system-msg state :runner"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                  (str \"uses Steve Cambridge: Master Grifter\""
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                       \" to add \" (:title c2) \" to their Grip.\""
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                       \" Corp removes \" (:title c1) \" from the game\")))"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                  (do (move state :runner c2 :rfg)"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                      (move state :runner c1 :hand)"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                      (system-msg state :runner"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                  (str \"uses Steve Cambridge: Master Grifter\""
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                       \" to add \" (:title c1) \" to their Grip.\""
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                       \" Corp removes \" (:title c2) \" from the game\"))))"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                (clear-wait-prompt state :runner)"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                (effect-completed state side eid))}"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  card nil)))}"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "                                card nil))}}}"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Strategic Innovations: Future Forward\""
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-start-game {:effect draft-points-target}"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": "             :runner-turn-ends"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": "             {:req (req (and (not (:disabled card))"
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": "                             (has-most-faction? state :corp \"Haas-Bioroid\")"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": "                             (pos? (count (:discard corp)))))"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": "              :prompt \"Select a card in Archives to shuffle into R\u0026D\""
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": "              :choices {:req #(and (corp? %) (in-discard? %))}"
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "              :player :corp :show-discard true :priority true"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": "              :msg (msg \"shuffle \" (if (:seen target) (:title target) \"a card\")"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": "                        \" into R\u0026D\")"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (effect (move :corp target :deck)"
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "                              (shuffle! :corp :deck))}}}"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Sunny Lebeau: Security Specialist\""
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "   ;; No special implementation"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": "   {}"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "   \"SYNC: Everything, Everywhere\""
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "   {:effect (req (when (\u003e (:turn @state) 1)"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": "                   (if (:sync-front card)"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": "                     (tag-remove-bonus state side -1)"
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": "                     (trash-resource-bonus state side 2))))"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": "    :events {:pre-first-turn {:req (req (\u003d side :corp))"
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": "                              :effect (effect (update! (assoc card :sync-front true))"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": "                                              (tag-remove-bonus -1))}}"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:cost [:click 1]"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (req (if (:sync-front card)"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": "                                (do (tag-remove-bonus state side 1)"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (trash-resource-bonus state side 2)"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (update! state side (-\u003e card (assoc :sync-front false"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                        :code \"sync\"))))"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": "                                (do (tag-remove-bonus state side -1)"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (trash-resource-bonus state side -2)"
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (update! state side (-\u003e card (assoc :sync-front true"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                        :code \"09001\"))))))"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg (msg \"flip their ID\")}]"
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": "    :leave-play (req (if (:sync-front card)"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": "                       (tag-remove-bonus state side 1)"
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": "                       (trash-resource-bonus state side -2)))}"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Synthetic Systems: The World Re-imagined\""
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-start-game {:effect draft-points-target}}"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": "    :flags {:corp-phase-12 (req (and (not (:disabled (get-card state card)))"
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (has-most-faction? state :corp \"Jinteki\")"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (\u003e (count (filter ice? (all-installed state :corp))) 1)))}"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:prompt \"Select two pieces of ICE to swap positions\""
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": "                 :choices {:req #(and (installed? %)"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": "                                      (ice? %))"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": "                           :max 2}"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": "                 :once :per-turn"
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (req (when (\u003d (count targets) 2)"
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": "                                (swap-ice state side (first targets) (second targets))))"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": "                 :msg (msg \"swap the positions of \" (card-str state (first targets))"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": "                           \" and \" (card-str state (second targets)))}]}"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Tennin Institute: The Secrets Within\""
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": "   {:flags {:corp-phase-12 (req (and (not (:disabled (get-card state card)))"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": "                                     (not-last-turn? state :runner :successful-run)))}"
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:msg (msg \"place 1 advancement token on \" (card-str state target))"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": "                 :choices {:req installed?}"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "-"
        },
        "content": "                 :req (req (and (:corp-phase-12 @state) (not-last-turn? state :runner :successful-run)))"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "-"
        },
        "content": "                 :once :per-turn"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (effect (add-prop target :advance-counter 1 {:placed true}))}]}"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "-"
        },
        "content": "   \"The Foundry: Refining the Process\""
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": "    {:rez {:req (req (and (ice? target) ;; Did you rez and ice just now"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "-"
        },
        "content": "                          (first-event? state :runner :rez #(ice? (first %)))))"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "-"
        },
        "content": "           :optional"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": "           {:prompt \"Add another copy to HQ?\""
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": "            :yes-ability {:effect (req (if-let [found-card (some #(when (\u003d (:title %) (:title target)) %) (concat (:deck corp) (:play-area corp)))]"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (do (move state side found-card :hand)"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (system-msg state side (str \"uses The Foundry to add a copy of \""
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                         (:title found-card) \" to HQ, and shuffles their deck\"))"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (shuffle! state side :deck))"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": "                                         (do (system-msg state side (str \"fails to find a target for The Foundry, and shuffles their deck\"))"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": "                                             (shuffle! state side :deck))))}}}}}"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": "   \"The Masque: Cyber General\""
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-start-game {:effect draft-points-target}}}"
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": "   \"The Outfit: Family Owned and Operated\""
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:corp-gain-bad-publicity {:msg \"gain 3 [Credit]\""
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": "                                       :effect (effect (gain-credits 3))}}}"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "   \"The Professor: Keeper of Knowledge\""
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "   ;; No special implementation"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": "   {}"
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "-"
        },
        "content": "   \"The Shadow: Pulling the Strings\""
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-start-game {:effect draft-points-target}}}"
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Titan Transnational: Investing In Your Future\""
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:agenda-scored {:msg (msg \"add 1 agenda counter to \" (:title target))"
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "-"
        },
        "content": "                             :effect (effect (add-counter (get-card state target) :agenda 1))}}}"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Valencia Estevez: The Angel of Cayambe\""
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-start-game"
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "-"
        },
        "content": "             {:req (req (and (\u003d side :runner)"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": "                             (zero? (get-in @state [:corp :bad-publicity]))))"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": "              :effect (effect (gain :corp :bad-publicity 1))}}}"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Weyland Consortium: Because We Built It\""
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "-"
        },
        "content": "   {:recurring 1"
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "-"
        },
        "content": "    :interactions {:pay-credits {:req (req (\u003d :advance (:source-type eid)))"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :type :recurring}}}"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Weyland Consortium: Builder of Nations\""
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "-"
        },
        "content": "   {:implementation \"Damage triggered manually\""
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "-"
        },
        "content": "    :abilities [{:label \"Do 1 meat damage\""
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "-"
        },
        "content": "                 :once :per-turn"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "-"
        },
        "content": "                 :prompt \"Do a meat damage from identity ability?\""
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": "                 :choices (cancellable [\"Yes\"])"
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "-"
        },
        "content": "                 :async true"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "-"
        },
        "content": "                 :effect (req (when (\u003d target \"Yes\")"
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "-"
        },
        "content": "                                (damage state side eid :meat 1 {:card card})"
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "-"
        },
        "content": "                                (system-msg state side \"uses Weyland Consortium: Builder of Nations to do 1 meat damage\")))}]}"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Weyland Consortium: Building a Better World\""
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:play-operation {:msg \"gain 1 [Credits]\""
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "-"
        },
        "content": "                              :effect (effect (gain-credits 1))"
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "-"
        },
        "content": "                              :req (req (has-subtype? target \"Transaction\"))}}}"
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Whizzard: Master Gamer\""
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "-"
        },
        "content": "   {:recurring 3"
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "-"
        },
        "content": "    :interactions {:pay-credits {:req (req (and (\u003d :runner-trash-corp-cards (:source-type eid))"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "-"
        },
        "content": "                                                (corp? target)))"
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "-"
        },
        "content": "                                 :type :recurring}}}"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "-"
        },
        "content": "   \"Wyvern: Chemically Enhanced\""
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "-"
        },
        "content": "   {:events {:pre-start-game {:effect draft-points-target}"
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "-"
        },
        "content": "             :runner-trash {:req (req (and (has-most-faction? state :runner \"Anarch\")"
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (corp? target)"
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "-"
        },
        "content": "                                           (pos? (count (:discard runner)))))"
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "-"
        },
        "content": "                            :msg (msg \"shuffle \" (:title (last (:discard runner))) \" into their Stack\")"
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "-"
        },
        "content": "                            :effect (effect (move :runner (last (:discard runner)) :deck)"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "-"
        },
        "content": "                                            (shuffle! :runner :deck))}}}})"
      }
    ],
    "authorContributionMap": {
      "-": 1381,
      "ChooJeremy": 7
    }
  },
  {
    "path": "test/clj/game_test/cards/agendas.clj",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "(ns game-test.cards.agendas"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  (:require [game.core :as core]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "            [game.utils :as utils]"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "            [game-test.core :refer :all]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "            [game-test.utils :refer :all]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "            [game-test.macros :refer :all]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "            [clojure.test :refer :all]))"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest ^{:card-title \"15-minutes\"}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  fifteen-minutes"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; 15 Minutes - check if it works correctly from both sides"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:hand [\"15 Minutes\"]}})"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"15 Minutes\" \"New remote\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    ;; use 15 minutes to take it away from runner"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    (run-empty-server state \"Server 1\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :runner)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (:agenda-point (get-runner))))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (count (:scored (get-runner)))))"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [fifm (first (:scored (get-runner)))]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 3 (:click (get-corp))))"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:abilities (refresh fifm)))))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp (refresh fifm) 0)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (:agenda-point (get-runner))))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (count (:scored (get-runner))))))"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (find-card \"15 Minutes\" (:deck (get-corp)))))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:hand [\"15 Minutes\"]}})"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"15 Minutes\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (:agenda-point (get-corp))))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (count (:scored (get-corp)))))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [fifm (first (:scored (get-corp)))]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:abilities (refresh fifm)))))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp (refresh fifm) 0)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (:agenda-point (get-corp))))"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (count (:scored (get-corp))))))"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (find-card \"15 Minutes\" (:deck (get-corp))))))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest accelerated-beta-test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Accelerated Beta Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Accelerated Beta Test\" \"Enigma\" (qty \"Hedge Fund\" 2)]}})"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    ;; Set up"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    (starting-hand state :corp [\"Accelerated Beta Test\"])"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Accelerated Beta Test\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-card state :corp (find-card \"Enigma\" (get-in @state [:corp :play-area])))"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :corp \"HQ\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (some? (get-ice state :hq 0)))"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 2 (count (:discard (get-corp)))))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/move state :corp (find-card \"Accelerated Beta Test\" (:scored (get-corp))) :hand)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/move state :corp (find-card \"Hedge Fund\" (:discard (get-corp))) :deck)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/move state :corp (find-card \"Hedge Fund\" (:discard (get-corp))) :deck)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Accelerated Beta Test\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :corp \"I have no regrets\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 2 (count (:discard (get-corp)))))))"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest advanced-concept-hopper"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Advanced Concept Hopper"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Advanced Concept Hopper\" (qty \"Hedge Fund\" 4)]}})"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    (starting-hand state :corp [\"Advanced Concept Hopper\"])"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Advanced Concept Hopper\")"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Corp draws 1 card, only once per turn\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [cards (count (:hand (get-corp)))]"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d cards (count (:hand (get-corp)))) (str \"Corp should have \" cards \" cards in hand\"))"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-on state :archives)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :corp \"Draw 1 card\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d (inc cards) (count (:hand (get-corp)))) (str \"Corp should have \" (inc cards) \" card in hand\"))"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-successful state)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-on state :archives)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (empty (:prompt (get-corp))) \"No prompt as it\u0027s once per turn\")))"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :runner)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Corp gains 1 credit, only once per turn\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [credits (:credit (get-corp))]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d credits (:credit (get-corp))) (str \"Corp should have \" credits \" credits\"))"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-on state :archives)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :corp \"Gain 1 [Credits]\")"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d (inc credits) (:credit (get-corp))) (str \"Corp should have \" (inc credits) \" credits\"))"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-successful state)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-on state :archives)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (empty (:prompt (get-corp))) \"No prompt as it\u0027s once per turn\")))))"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest ancestral-imager"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Ancestral Imager"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Ancestral Imager\" 3)]}})"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Ancestral Imager\")"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [grip (count (:hand (get-runner)))]"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d grip (count (:hand (get-runner)))) (str \"Runner has \" grip \" cards in hand\"))"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state :hq)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-jack-out state)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d (dec grip) (count (:hand (get-runner)))) \"Runner took 1 net damage\"))))"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest ar-enhanced-security"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; AR-Enhanced Security"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"AR-Enhanced Security\" (qty \"NGO Front\" 3)]}})"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"set up\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/gain state :corp :click 10 :credit 10)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/gain state :runner :credit 10)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      (dotimes [_ 3]"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        (play-from-hand state :corp \"NGO Front\" \"New remote\"))"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp))"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"don\u0027t take a tag from trashing normally\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state :remote1)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Pay 1 [Credits] to trash\")"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:discard (get-corp)))) \"trashed\")"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (count-tags state)) \"Runner took 0 tags\")"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"AR-Enhanced Security\")"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp))"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"gain a tag from first trash\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state :remote2)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Pay 1 [Credits] to trash\")"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (count (:discard (get-corp)))) \"trashed\")"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count-tags state)) \"Runner took 1 tag\"))"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"don\u0027t gain a tag from second trash\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state :remote3)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Pay 1 [Credits] to trash\")"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 3 (count (:discard (get-corp)))) \"trashed\")"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count-tags state)) \"Runner took 0 tags\"))))"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest architect-deployment-test"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Architect Deployment Test"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "   (new-game {:corp {:deck [(qty \"Architect Deployment Test\" 5) \"Oaktown Renovation\" \"Enigma\" \"Rashida Jaheem\"]}})"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "   (starting-hand state :corp (repeat 5 \"Architect Deployment Test\"))"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "   (core/gain state :corp :click 4)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "   (play-and-score state \"Architect Deployment Test\") ;makes a remote 1"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "   (click-prompt state :corp \"OK\")"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "   (click-prompt state :corp \"Enigma\")"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "   (is (changes-credits (get-corp) 0"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                        (click-prompt state :corp \"New remote\")))"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "   (is (:rezzed (get-ice state :remote2 0)) \"Enigma was installed and rezzed, both at no cost\")"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "   (play-and-score state \"Architect Deployment Test\")"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "   (click-prompt state :corp \"OK\")"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "   (click-prompt state :corp \"Cancel\")"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "   (is (empty (:prompt (get-corp))) \"No more prompts if cancel is clicked\")"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "   (play-and-score state \"Architect Deployment Test\")"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "   (click-prompt state :corp \"OK\")"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "   (click-prompt state :corp \"Rashida Jaheem\")"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "   (is (changes-credits (get-corp) 0"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                        (click-prompt state :corp \"Server 2\")))"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "   (is (:rezzed (get-content state :remote2 0)) \"Rashida Jaheem was installed and rezzed, both at no cost\")"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "   (play-and-score state \"Architect Deployment Test\")"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "   (click-prompt state :corp \"OK\")"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "   (click-prompt state :corp \"Oaktown Renovation\")"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "   (click-prompt state :corp \"New remote\")"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "   (is (\u003d \"Oaktown Renovation\" (:title (get-content state :remote6 0))) \"Oaktown Renovation was installed\")"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "   (is (:rezzed (get-content state :remote6 0)) \"Oaktown Renovation is installed faceup.\")"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "   (play-and-score state \"Architect Deployment Test\")"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "   (click-prompt state :corp \"OK\")"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "   (is (empty (:prompt (get-corp))) \"No prompts if there is no ice\")))"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest armed-intimidation"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Armed Intimidation"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Armed Intimidation\" 2)]}"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "               :runner {:deck [(qty \"Sure Gamble\" 3) (qty \"Diesel\" 2)]}})"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Armed Intimidation\")"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"Take 2 tags\")"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 2 (count-tags state)) \"Runner took 2 tags from Armed Intimidation tag choice\")"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Armed Intimidation\")"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 5 (count (:hand (get-runner)))) \"Runner has 5 cards before Armed Intimidation meat damage\")"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"Suffer 5 meat damage\")"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (zero? (count (:hand (get-runner)))) \"Runner has 0 cards after Armed Intimidation meat damage\")))"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest armored-servers"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Armored Servers"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Armored Servers\"]}})"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Armored Servers\")"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [as-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (get-counters (refresh as-scored) :agenda)) \"Should start with 1 agenda counters\")"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state \"HQ\")"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp as-scored 0)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (last-log-contains? state \"make the Runner trash\") \"Should only write to log\"))))"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest astroscript-pilot-program"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; AstroScript token placement"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"AstroScript Pilot Program\" 3) (qty \"Ice Wall\" 2)]}})"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :corp :click 3)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    (letfn [(try-place [from to]"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "              (card-ability state :corp (refresh from) 0)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "              (click-card state :corp (refresh to)))"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            (should-not-place [from to msg]"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "              (try-place from to)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "              (click-prompt state :corp \"Done\")"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "              (is (\u003d 1 (get-counters (refresh from) :agenda))"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                  (str (:title from)\" token was not used on \" (:title to) msg))"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "              (is (zero? (get-counters (refresh to) :advancement))"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                  (str \"Advancement token not placed on \" (:title to) msg)))"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            (should-place [from to msg]"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "              (try-place from to)"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "              (is (zero? (get-counters (refresh from) :agenda))"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                  (str (:title from) \" token was used on \" (:title to) msg))"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "              (is (\u003d 1 (get-counters (refresh to) :advancement))"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                  (str \"Advancement token placed on \" (:title to) msg)))]"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"AstroScript Pilot Program\")"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"AstroScript Pilot Program\" \"New remote\")"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [scored-astro (get-scored state :corp 0)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            installed-astro (get-content state :remote2 0)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            hand-astro (find-card \"AstroScript Pilot Program\" (:hand (get-corp)))]"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        (should-not-place scored-astro hand-astro \" in hand\")"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        (should-place scored-astro installed-astro \" that is installed\")"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state installed-astro 2)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/score state :corp {:card (refresh installed-astro)}))"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Ice Wall\" \"HQ\")"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [no-token-astro (get-scored state :corp 0)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            token-astro (get-scored state :corp 1)"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            hand-ice-wall (find-card \"Ice Wall\" (:hand (get-corp)))"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            installed-ice-wall (get-ice state :hq 0)]"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        (should-not-place token-astro no-token-astro \" that is scored\")"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        (should-not-place token-astro hand-ice-wall \" in hand\")"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        (should-place token-astro installed-ice-wall \" that is installed\")))))"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest award-bait"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Award Bait"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Award Bait\" 2) \"Ice Wall\"]}})"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/move state :corp (find-card \"Award Bait\" (:hand (get-corp))) :deck)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Ice Wall\" \"HQ\")"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [iw (get-ice state :hq 0)]"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (get-counters (refresh iw) :advancement)) \"Ice Wall should start with 0 advancement tokens\")"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Award Bait\" \"New remote\")"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state :remote1)"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"2\")"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp \"Ice Wall\")"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (get-counters (refresh iw) :advancement)) \"Ice Wall should gain 2 advancement tokens\")"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state :rd)"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"2\")"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (refresh iw))"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 4 (get-counters (refresh iw) :advancement)) \"Ice Wall should gain 2 advancement tokens\"))))"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest bacterial-programming"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Bacterial Programming"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Scoring should not cause a run to exist for runner.\""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Bacterial Programming\" \"Hedge Fund\"]}})"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :corp [\"Bacterial Programming\"])"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Bacterial Programming\")"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Done\")"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Done\")"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp (first (:deck (get-corp))))"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Done\")"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (empty (:prompt (get-corp))) \"Bacterial Programming prompts finished\")"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (not (:run @state)) \"No run is active\")))"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Removing all cards from R\u0026D should not freeze for runner, nor give an extra access.\""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [(qty \"Bacterial Programming\" 8)]"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                        :hand [\"Ice Wall\"]}"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "                 :options {:start-as :runner}})"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-empty-server state :rd)"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "      ;; Move all 7 cards to trash"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "      (doseq [_ (range 7)"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "              ;; Get the first card listed in the prompt choice"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "              ;; TODO make this function"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "              :let [card (-\u003e @state"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                             (get-in [:corp :prompt])"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "                             first"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "                             (get-in [:choices 0]))]]"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :corp card))"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Done\")                          ; Finished with trashing"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Done\")                          ; Finished with move-to-hq (no cards to move)"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "      ;; Run and prompts should be over now"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (empty (:prompt (get-corp))) \"Bacterial Programming prompts finished\")"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (empty (:prompt (get-runner))) \"Bacterial Programming prompts finished\")"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (not (:run @state))))))"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest better-citizen-program"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Better Citizen Program"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Basic test\""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Better Citizen Program\"]}"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:deck [(qty \"The Maker\u0027s Eye\" 2)"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "                                 (qty \"Wyrm\" 2)]}})"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Better Citizen Program\")"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/gain state :runner :credit 10)"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (count-tags state)) \"Runner starts with 0 tags\")"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"The Maker\u0027s Eye\")"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count-tags state)) \"Runner takes 1 tag for playing a Run event\")"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"Wyrm\")"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (empty? (:prompt (get-corp))) \"Corp shouldn\u0027t get a prompt to use Better Citizen Program\")"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count-tags state)) \"Runner doesn\u0027t gain a tag from installing an icebreaker after playing a Run event\")"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"Wyrm\")"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (count-tags state)) \"Runner gains 1 tag for installing an Icebreaker\")"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"The Maker\u0027s Eye\")"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (empty? (:prompt (get-corp))) \"Corp shouldn\u0027t get a prompt to use Better Citizen Program\")"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (count-tags state)) \"Runner doesn\u0027t gain a tag from playing a Run event after installing an Icebreaker\")"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)))"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Should only trigger on Run events. #3619\""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Better Citizen Program\"]}"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:deck [\"Mining Accident\"]}})"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Better Citizen Program\")"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-empty-server state \"HQ\")"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"Mining Accident\")"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Pay 5 [Credits]\")"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (empty? (:prompt (get-corp))) \"Corp shouldn\u0027t get a prompt to use Better Citizen Program\")"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (count-tags state)) \"Runner should not gain a tag from playing a non-Run event\"))))"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest bifrost-array"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Bifrost Array"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Bifrost Array\" \"Hostile Takeover\"]}})"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Hostile Takeover\")"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 12 (:credit (get-corp))) \"Should gain 7 credits from 5 to 12\")"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (:bad-publicity (get-corp))) \"Should gain 1 bad publicity\")"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [ht-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Bifrost Array\")"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp \"Hostile Takeover\")"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 19 (:credit (get-corp))) \"Should gain 7 credits from 12 to 19\")"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:bad-publicity (get-corp))) \"Should gain 1 bad publicity\"))))"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest brain-rewiring"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Brain Rewiring"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Brain Rewiring\"]}})"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "    (starting-hand state :runner [\"Sure Gamble\" \"Sure Gamble\"])"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Brain Rewiring\")"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (not (empty? (:prompt (get-runner)))) \"Runner waiting for Corp resolve Brain Rewiring\")"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :corp \"2\")"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (count (:hand (get-runner)))))"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (empty? (:prompt (get-runner))) \"Runner not waiting for Corp resolve Brain Rewiring\")"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (empty? (:prompt (get-corp))) \"Corp done resolving Brain Rewiring\")))"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest braintrust"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Braintrust"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Braintrust\" \"Ichi 1.0\"]}})"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Braintrust\" \"New remote\")"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [bt (get-content state :remote1 0)]"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/add-prop state :corp bt :advance-counter 7)"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/score state :corp {:card (refresh bt)})"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [scored-bt (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (get-counters (refresh scored-bt) :agenda))"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Scored w/ 4 over-advancements; 2 agenda counters\")"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        (play-from-hand state :corp \"Ichi 1.0\" \"HQ\")"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/rez state :corp (get-ice state :hq 0))"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (:credit (get-corp))) \"2c discount to rez Ichi\")))))"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest breaking-news"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Breaking News"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Breaking News\" 3)]}})"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Breaking News\")"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 2 (count-tags state)) \"Runner receives 2 tags from Breaking News\")"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (zero? (count-tags state))) \"Two tags removed at the end of the turn\"))"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest broad-daylight"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Broad Daylight"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"take bad pub\""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [(qty \"Broad Daylight\" 3)]}})"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (:bad-publicity (get-corp))) \"Corp start with no bad pub\")"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Broad Daylight\")"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:bad-publicity (get-corp))) \"Corp gains 1 bad pub\")"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (get-counters (get-scored state :corp 0) :agenda)) \"Should gain 1 agenda counter\")"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Broad Daylight\")"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"No\")"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:bad-publicity (get-corp))) \"Corp doesn\u0027t gain bad pub\")"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (get-counters (get-scored state :corp 1) :agenda)) \"Should gain 1 agenda counter\")"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Broad Daylight\")"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:bad-publicity (get-corp))) \"Corp gains 1 bad pub\")"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (get-counters (get-scored state :corp 2) :agenda)) \"Should gain 2 agenda counters\")))"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"deal damage\""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Broad Daylight\"]}})"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/gain state :corp :bad-publicity 3)"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Broad Daylight\")"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 4 (:bad-publicity (get-corp))) \"Corp gains 1 bad pub\")"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 4 (get-counters (get-scored state :corp 0) :agenda)) \"Should gain 1 agenda counter\")"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (empty? (:discard (get-runner))) \"Runner has no discarded cards\")"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp (get-scored state :corp 0) 0)"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (count (:discard (get-runner)))) \"Runner took 2 damage\")"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp (get-scored state :corp 0) 0)"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (count (:discard (get-runner)))) \"Runner didn\u0027t take additional damage\")))"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"bad pub triggers\""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Broad Daylight\" \"Broadcast Square\"]}})"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/gain state :corp :bad-publicity 1)"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Broadcast Square\" \"New remote\")"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/rez state :corp (get-content state :remote1 0))"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:bad-publicity (get-corp))) \"Corp start with one bad pub\")"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Broad Daylight\")"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:bad-publicity (get-corp))) \"Doesn\u0027t gain additional bad pub yet\")"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"0\")  ;; Corp doesn\u0027t pump trace, base 3"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"0\")  ;; Runner doesn\u0027t pump trace; loses trace"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:bad-publicity (get-corp))) \"Blocks gaining additional bad pub\")"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (get-counters (get-scored state :corp 0) :agenda)) \"Should gain 1 agenda counter\")))"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"bad pub triggers - more cases\""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Broad Daylight\" \"Broadcast Square\"]}})"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/gain state :corp :bad-publicity 1)"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Broadcast Square\" \"New remote\")"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/rez state :corp (get-content state :remote1 0))"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:bad-publicity (get-corp))) \"Corp start with one bad pub\")"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Broad Daylight\")"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:bad-publicity (get-corp))) \"Doesn\u0027t gain additional bad pub yet\")"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"0\")  ;; Corp doesn\u0027t pump trace, base 3"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"5\")  ;; Runner pumps trace; wins trace"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:bad-publicity (get-corp))) \"Gains additional bad pub\")"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (get-counters (get-scored state :corp 0) :agenda)) \"Should gain 2 agenda counter\"))))"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest cfc-excavation-contract"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; CFC Excavation Contract"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "  (dotimes [n 5]"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"CFC Excavation Contract\" (qty \"Eli 1.0\" n)]}})"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/gain state :corp :click 10 :credit 10)"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 15 (:credit (get-corp))) \"Should start with 5 credits\")"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "      (dotimes [_ n]"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "        (play-from-hand state :corp \"Eli 1.0\" \"New remote\")"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/rez state :corp (get-ice state (keyword (str \"remote\" (:rid @state))) 0)))"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [credit (:credit (get-corp))]"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "        (play-and-score state \"CFC Excavation Contract\")"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d (+ credit (* 2 n)) (:credit (get-corp)))"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "            (str \"Should now have with \" (+ credit (* 2 n)) \" credits\"))))))"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest character-assassination"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Character Assassination"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Character Assassination\"]}"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "               :runner {:deck [\"Fall Guy\" \"Kati Jones\"]}})"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :runner \"Kati Jones\")"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :runner \"Fall Guy\")"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :runner)"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Character Assassination\")"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [kati (get-resource state 0)]"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp kati)"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (empty? (:prompt (get-runner))) \"Fall Guy prevention didn\u0027t occur\")"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:discard (get-runner)))) \"Kati Jones trashed\"))))"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest chronos-project"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Chronos Project"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Chronos Project\"]}})"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "    (dotimes [_ 3]"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/move state :runner (find-card \"Sure Gamble\" (:hand (get-runner))) :discard))"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 3 (count (:discard (get-runner)))) \"Runner should have 3 cards in heap\")"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Chronos Project\")"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (zero? (count (:discard (get-runner)))) \"Runner should have 0 cards in heap\")))"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest city-works-project"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; City Works Project"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"City Works Project\"]}"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "               :runner {:deck [(qty \"Sure Gamble\" 4)]}})"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"City Works Project\" \"New remote\")"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [cwp (get-content state :remote1 0)]"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/advance state :corp {:card (refresh cwp)})"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/advance state :corp {:card (refresh cwp)}))"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "    (run-empty-server state \"Server 1\")"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 4 (count (:discard (get-runner)))) \"Runner paid 4 meat damage\")))"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest clone-retirement"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Clone Retirement"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Clone Retirement\" 2) \"Hostile Takeover\"]}})"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Hostile Takeover\")"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 12 (:credit (get-corp))))"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (:bad-publicity (get-corp))))"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Clone Retirement\")"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (zero? (:bad-publicity (get-corp))))"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Clone Retirement\" \"New remote\")"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "    (run-on state \"Server 3\")"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "    (run-successful state)"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (:bad-publicity (get-corp))))))"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest corporate-sales-team"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Corporate Sales Team"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Corporate Sales Team\" 2)]}})"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 5 (:credit (get-corp))))"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Corporate Sales Team\")"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [scored-cst (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/end-turn state :corp nil)"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/start-turn state :runner nil)"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 6 (:credit (get-corp))) \"Increments at runner\u0027s start of turn\")"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 9 (get-counters (refresh scored-cst) :credit)))"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/end-turn state :runner nil)"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/start-turn state :corp nil)"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 7 (:credit (get-corp))) \"Increments at corp\u0027s start of turn\")"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 8 (get-counters (refresh scored-cst) :credit))))))"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest corporate-war"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Corporate War"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Corporate War\" 2)]}})"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 5 (:credit (get-corp))))"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Corporate War\")"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (zero? (:credit (get-corp))) \"Lost all credits\")"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :corp :credit 7)"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Corporate War\")"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 14 (:credit (get-corp))) \"Had 7 credits when scoring, gained another 7\")))"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest crisis-management"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Crisis Management"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Crisis Management\"]}})"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Crisis Management\")"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :runner)"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 3 (count (:hand (get-runner)))) \"No damage done, Runner not tagged\")"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain-tags state :runner 1)"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :runner)"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 2 (count (:hand (get-runner)))) \"Crisis Management dealt 1 meat damage\")))"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest dedicated-neural-net"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Dedicated Neural Net"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Dedicated Neural Net\" (qty \"Scorched Earth\" 2)"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "                             \"Hedge Fund\" \"Caprice Nisei\"]}"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "               :runner {:deck [\"HQ Interface\"]}})"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Caprice Nisei\" \"HQ\")"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Dedicated Neural Net\")"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "    (run-empty-server state :hq)"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"0 [Credits]\")"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :corp \"1 [Credits]\")"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (-\u003e @state :run :run-effect :replace-access) \"Replace-access tiggered\")"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-card state :corp (find-card \"Hedge Fund\" (:hand (get-corp))))"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"Card from hand\")"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (accessing state \"Hedge Fund\") \"Runner accessing Hedge Fund\")"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"No action\")"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "    ;; test for #2376"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"Unrezzed upgrade in HQ\")"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (accessing state \"Caprice Nisei\") \"Runner accessing Caprice\")"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"No action\")"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (not (:run @state)) \"Run completed\")"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "    (run-empty-server state :hq)"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"Card from hand\")"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"No action\")"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :runner)"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :runner \"HQ Interface\")"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "    (run-empty-server state :hq)"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"0 [Credits]\")"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :corp \"1 [Credits]\")"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 2 (-\u003e (get-corp) :selected first :max)) \"Corp chooses 2 cards for Runner to access\")))"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest degree-mill"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Degree Mill"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Basic behavior\""
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [(qty \"Degree Mill\" 2)]}"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:deck [\"Ice Analyzer\" \"All-nighter\" \"Hunting Grounds\"]}})"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Degree Mill\" \"New remote\")"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (count (:deck (get-runner)))) \"Runner starts with empty deck\")"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state \"Server 1\")"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"No action\")"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (:agenda-point (get-runner))) \"Runner stole Degree Mill with no installed cards\")"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"Ice Analyzer\")"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"All-nighter\")"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [ia (get-resource state 0)"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "            an (get-resource state 1)]"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-on state \"Server 1\")"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-successful state)"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :runner \"Pay to steal\")"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :runner ia)"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :runner an)"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 3 (:agenda-point (get-runner))) \"Runner failed to steal Degree Mill\")"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (empty? (get-in @state [:runner :rig :resource])) \"Degree Mill didn\u0027t remove installed cards\")"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (count (:deck (get-runner)))) \"Degree Mill didn\u0027t put cards back in deck\"))"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "      ;; Checking if facedowns work as well"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Degree Mill\" \"New remote\")"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"Hunting Grounds\")"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [hg (get-resource state 0)]"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-on state \"Server 2\")"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-successful state)"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :runner \"No action\")"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 3 (:agenda-point (get-runner))) \"Runner stole Degree Mill with single card\")"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :runner hg 1)"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (count (get-in (get-runner) [:rig :facedown]))) \"Hunting Ground did not install cards facedown\")"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (empty? (:deck (get-runner))) \"Hunting Grounds did not remove cards from deck\")"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "        (let [fd1 (get-runner-facedown state 0)"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "              fd2 (get-runner-facedown state 1)]"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "          (run-on state \"Server 2\")"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "          (run-successful state)"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "          (click-prompt state :runner \"Pay to steal\")"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "          (click-card state :runner fd1)"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "          (click-card state :runner fd2)"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "          (is (\u003d 6 (:agenda-point (get-runner))) \"Runner failed to steal Degree Mill with facedown cards\")"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "          (is (empty? (get-in (get-runner)  [:rig :facedown])) \"Degree Mill didn\u0027t remove facedown cards\")"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "          (is (\u003d 2 (count (:deck (get-runner)))) \"Degree Mill didn\u0027t put cards back in deck\")))))"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Multiple steal costs\""
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [(qty \"Degree Mill\" 1) (qty \"Strongbox\" 1)]}"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:deck [(qty \"Ice Analyzer\" 3) (qty \"All-nighter\" 3)]}})"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Degree Mill\" \"New remote\")"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Strongbox\" \"Server 1\")"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [dm (get-content state :remote1 0)"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "            sb (get-content state :remote1 1)]"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/rez state :corp sb)"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :corp)"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "        (play-from-hand state :runner \"Ice Analyzer\")"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "        (play-from-hand state :runner \"All-nighter\")"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-empty-server state :remote1)"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :runner (refresh dm))"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :runner \"Pay to steal\")"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 1 (:click (get-runner))) \"Runner should start with 1 remaining click\")"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (count (get-in @state [:runner :rig :resource]))) \"Runner starts with 2 resources\")"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :runner (get-resource state 1))"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :runner (get-resource state 0))"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (:click (get-runner))) \"Runner should have spent a click\")"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (empty? (get-resource state)) \"Degree Mill removed installed cards\")"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (not-empty (get-scored state :runner)) \"Runner stole an agenda\")))))"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest director-haas-pet-project"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Director Haas\u0027 Pet Project"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Hedge Fund\" 5)]"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "                      :hand [\"Strongbox\""
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "                             \"Director Haas\u0027 Pet Project\""
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "                             \"Adonis Campaign\"]"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "                      :discard [\"Eli 1.0\"]}})"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Director Haas\u0027 Pet Project\")"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-card state :corp \"Adonis Campaign\")"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-card state :corp \"Strongbox\")"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-card state :corp \"Eli 1.0\")))"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest divested-trust"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Divested Trust"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Basic test\""
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [(qty \"Hedge Fund\" 10)]"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "                        :hand [\"Hostile Takeover\" \"Divested Trust\"]}})"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Divested Trust\")"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state :hq)"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (-\u003e (get-corp) :hand count zero?) \"Corp has no cards in hand\")"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:agenda-point (get-corp))) \"Corp should agenda points from Divested Trust\")"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:agenda-point (get-runner))) \"Runner should gain agenda points for stealing Hostile Takeover\")"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d \"Hostile Takeover\" (-\u003e (get-corp) :hand first :title)) \"Hostile Takeover should be in HQ\")"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (empty? (-\u003e (get-corp) :scored)))"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (:agenda-point (get-corp))) \"Corp should lose points from forfeit agenda\")"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (:agenda-point (get-runner))) \"Runner should lose agenda points from agenda leaving score area\")))"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Doesn\u0027t stop the runner from winning. Issue #4107\""
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [(qty \"Hedge Fund\" 10)]"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "                        :hand [\"Government Takeover\" \"Hostile Takeover\" \"Divested Trust\"]}})"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/gain state :corp :click 10)"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Divested Trust\")"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Government Takeover\" \"New remote\")"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state :remote2)"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"No\")"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state :hq)"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (empty? (:prompt (get-corp))) \"Corp doesn\u0027t get opportunity to use Divested Trust\")"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d :runner (:winner @state)) \"Runner should win\")"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d \"Agenda\" (:reason @state)) \"Win condition reports points\"))))"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest domestic-sleepers"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Domestic Sleepers"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Domestic Sleepers\"]}})"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Domestic Sleepers\")"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :corp :click 3)"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [ds_scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (get-counters (refresh ds_scored) :agenda)) \"Should start with 0 agenda counters\")"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (:agenda-point (get-corp))) \"Should provide 0 agenda points initially\")"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp ds_scored 0)"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (get-counters (refresh ds_scored) :agenda)) \"Should gain 1 agenda counter\")"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:agenda-point (get-corp))) \"Should provide 1 agenda point after ability use\"))))"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest eden-fragment"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Test that Eden Fragment ignores the install cost of the first ice"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Eden Fragment\" 3) (qty \"Ice Wall\" 3)]}})"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Ice Wall\" \"HQ\")"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Eden Fragment\")"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :runner)"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Ice Wall\" \"HQ\")"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (some? (get-ice state :hq 1)) \"Corp has two ice installed on HQ\")"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 6 (:credit (get-corp))) \"Corp does not pay for installing the first ICE of the turn\")"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Ice Wall\" \"HQ\")"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (some? (get-ice state :hq 2)) \"Corp has three ice installed on HQ\")"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 4 (:credit (get-corp))) \"Corp pays for installing the second ICE of the turn\")))"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest efficiency-committee"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Efficiency Committee"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Efficiency Committee\" 3) (qty \"Shipment from SanSan\" 2)"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "                             \"Ice Wall\"]}})"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :corp :click 4)"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Efficiency Committee\" \"New remote\")"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Efficiency Committee\" \"New remote\")"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Efficiency Committee\" \"New remote\")"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Ice Wall\" \"HQ\")"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [ec1 (get-content state :remote1 0)"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "          ec2 (get-content state :remote2 0)"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "          ec3 (get-content state :remote3 0)"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "          iw (get-ice state :hq 0)]"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "      (score-agenda state :corp ec1)"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [ec1_scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 3 (get-counters (refresh ec1_scored) :agenda)))"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (:agenda-point (get-corp))))"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "        ;; use token"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 3 (:click (get-corp))))"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp ec1_scored 0)"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 4 (:click (get-corp))))"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "        ;; try to advance Ice Wall"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state iw)"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 4 (:click (get-corp))))"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (get-counters (refresh iw) :advancement)))"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "        ;; try to advance Efficiency Committee"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state ec2)"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 4 (:click (get-corp))))"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (get-counters (refresh ec2) :advancement)))"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "        ;; advance with Shipment from SanSan"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "        (play-from-hand state :corp \"Shipment from SanSan\")"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :corp \"2\")"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp ec2)"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (get-counters (refresh ec2) :advancement)))"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "        (play-from-hand state :corp \"Shipment from SanSan\")"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :corp \"2\")"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp ec2)"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 4 (get-counters (refresh ec2) :advancement)))"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/score state :corp {:card (refresh ec2)})"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 4 (:agenda-point (get-corp))))"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :corp)"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :runner)"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "        ;; can advance again"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state iw)"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 1 (get-counters (refresh iw) :advancement)))"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state ec3)"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 1 (get-counters (refresh ec3) :advancement)))))))"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest elective-upgrade"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Elective Upgrade"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Elective Upgrade\"]}})"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Elective Upgrade\")"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [eu-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (get-counters (refresh eu-scored) :agenda)) \"Should start with 2 agenda counters\")"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 3 (:click (get-corp))) \"Should start with 4 clicks\")"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp eu-scored 0)"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp eu-scored 0)"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 4 (:click (get-corp))) \"Should gain 2 clicks, not 3\")"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (get-counters (refresh eu-scored) :agenda)) \"Should still have 1 agenda counter\"))))"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest encrypted-portals"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Encrypted Portals"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Encrypted Portals\" \"Lotus Field\"]}})"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Lotus Field\" \"HQ\")"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [lf (get-ice state :hq 0)]"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/rez state :corp lf)"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 4 (:current-strength (refresh lf))) \"Should start with base strength of 4\")"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (:credit (get-corp))) \"Should have 0 credits after rez\")"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Encrypted Portals\")"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 5 (:current-strength (refresh lf))) \"Should gain 1 strength from 4 to 5\")"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:credit (get-corp))) \"Should gain 1 credit for rezzed code gate\"))))"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest escalate-vitriol"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Escalate Vitriol"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Escalate Vitriol\"]}})"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/lose state :corp :credit 5)"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Escalate Vitriol\")"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [ev-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "      (dotimes [tag 10]"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (count-tags state)) \"Should start with 0 tags\")"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (:credit (get-corp))) \"Should start with 0 credits\")"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/gain-tags state :runner tag)"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp ev-scored 0)"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d tag (:credit (get-corp))) (str \"Should gain \" tag \" credits\"))"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :corp)"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :runner)"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/lose state :corp :credit (:credit (get-corp)))"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/lose-tags state :runner tag)))))"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest executive-retreat"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Executive Retreat"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Executive Retreat\" (qty \"Hedge Fund\" 5)]}})"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "    (starting-hand state :corp [\"Executive Retreat\" \"Hedge Fund\"])"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 2 (count (:hand (get-corp)))) \"Corp should start with 1 card in HQ\")"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Executive Retreat\")"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (zero? (count (:hand (get-corp)))) \"Corp should have 0 cards in HQ after shuffling HQ back into R\u0026D\")"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [er-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp er-scored 0)"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 5 (count (:hand (get-corp)))) \"Corp should have 5 cards in hand\")"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (get-counters (refresh er-scored) :agenda)) \"Executive Retreat should have 0 agenda counters\")))"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Overdraw\""
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Executive Retreat\" (qty \"Hedge Fund\" 4)]}})"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :corp [\"Executive Retreat\" \"Hedge Fund\"])"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (count (:hand (get-corp)))) \"Corp should start with 1 card in HQ\")"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Executive Retreat\")"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (count (:hand (get-corp)))) \"Corp should have 0 cards in HQ after shuffling HQ back into R\u0026D\")"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [er-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp er-scored 0)"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 4 (count (:hand (get-corp)))) \"Corp should have 5 cards in hand\")"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (get-counters (refresh er-scored) :agenda)) \"Executive Retreat should have 0 agenda counters\")"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d :runner (:winner @state)) \"Runner wins\")"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d \"Decked\" (:reason @state)) \"Win condition reports decked\")))))"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest explode-a-palooza"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Explode-a-palooza"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Basic test\""
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Explode-a-palooza\"]}})"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Explode-a-palooza\" \"New remote\")"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-empty-server state :remote1)"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 12 (:credit (get-corp))) \"Gained 5 credits\")))"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Interaction with The Turning Wheel. Issue #1717.\""
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [(qty \"Explode-a-palooza\" 3)]}"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:deck [\"The Turning Wheel\"]}})"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :corp [\"Explode-a-palooza\" \"Explode-a-palooza\"])"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Explode-a-palooza\" \"New remote\")"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"The Turning Wheel\")"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-empty-server state :remote1)"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [ttw (get-resource state 0)]"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (get-counters (refresh ttw) :power)) \"TTW did not gain counters\")"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 1 (count (:scored (get-runner)))) \"Runner stole Explodapalooza\")"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 12 (:credit (get-corp))) \"Gained 5 credits\")"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-empty-server state :rd)"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (get-counters (refresh ttw) :power)) \"TTW did not gain counters\")"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (count (:scored (get-runner)))) \"Runner stole Explodapalooza\")"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 17 (:credit (get-corp))) \"Gained 5 credits\")))))"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest false-lead"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; False Lead"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"False Lead\"]}})"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"False Lead\")"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (count (:scored (get-corp)))) \"Corp should have 1 agenda point\")"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 4 (:click (get-runner))) \"Runner should start turn with 4 clicks\")"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "    (card-ability state :corp (get-scored state :corp 0) 0)"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 2 (:click (get-runner))) \"Runner should lose 2 clicks from False Lead\")))"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest fetal-ai"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Fetal AI"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"basic test\""
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [(qty \"Fetal AI\" 3)]}"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:deck [(qty \"Sure Gamble\" 3) (qty \"Diesel\" 3) (qty \"Quality Time\" 3)]}})"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Fetal AI\" \"New remote\")"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp 2)"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-empty-server state \"Server 1\")"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Pay to steal\")"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 3 (count (:hand (get-runner)))) \"Runner took 2 net damage from Fetal AI\")"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 3 (:credit (get-runner))) \"Runner paid 2cr to steal Fetal AI\")"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:scored (get-runner)))) \"Runner stole Fetal AI\"))"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"can\u0027t afford to steal\""
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "      (do-game"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "        (new-game {:corp {:deck [(qty \"Fetal AI\" 3)]}"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "                   :runner {:deck [(qty \"Sure Gamble\" 3) (qty \"Diesel\" 3) (qty \"Quality Time\" 3)]}})"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "        (play-from-hand state :corp \"Fetal AI\" \"New remote\")"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :corp 2)"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/lose state :runner :credit 5)"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-empty-server state \"Server 1\")"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :runner \"No action\")"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 3 (count (:hand (get-runner)))) \"Runner took 2 net damage from Fetal AI\")"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (count (:scored (get-runner)))) \"Runner could not steal Fetal AI\")))))"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest firmware-updates"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Firmware Updates"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Firmware Updates\" \"Ice Wall\"]}})"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Firmware Updates\")"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Ice Wall\" \"HQ\")"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [fu (get-scored state :corp 0)"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "          iw (get-ice state :hq 0)]"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 3 (get-counters (refresh fu) :agenda)) \"Firmware Updates should start with 3 agenda counters\")"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/rez state :corp iw)"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (get-counters (refresh iw) :advancement)) \"Ice Wall should start with 0 advancement tokens\")"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp fu 0)"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (refresh iw))"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (get-counters (refresh fu) :agenda)) \"Firmware Updates should now have 2 agenda counters\")"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (get-counters (refresh iw) :advancement)) \"Ice Wall should have 1 advancement token\"))))"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest fly-on-the-wall"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Fly on the Wall - give the runner 1 tag"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Fly on the Wall\"]}})"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (zero? (count-tags state)) \"Runner starts with no tags\")"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Fly on the Wall\")"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (count-tags state)) \"Runner is tagged\")))"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest genetic-resequencing"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Genetic Resequencing"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Genetic Resequencing\" (qty \"Braintrust\" 2)]}})"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Braintrust\" \"New remote\")"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Braintrust\" \"New remote\")"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Genetic Resequencing\" \"New remote\")"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [bt1 (get-content state :remote1 0)"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "          bt2 (get-content state :remote2 0)"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "          gr (get-content state :remote3 0)]"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "      (score-agenda state :corp bt1)"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [btscored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (get-counters (refresh btscored) :agenda)) \"No agenda counters on scored Braintrust\")"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "        (score-agenda state :corp gr)"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp bt2)"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (get-counters (refresh bt2) :agenda))"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "            \"No agenda counters on installed Braintrust; not a valid target\")"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp btscored)"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 1 (get-counters (refresh btscored) :agenda))"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "            \"1 agenda counter placed on scored Braintrust\")))))"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest geothermal-fracking"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Geothermal Fracking"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"basic test\""
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Geothermal Fracking\"]}})"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Geothermal Fracking\")"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:click (get-corp))) \"Should have 2 clicks left\")"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 5 (:credit (get-corp))) \"Should start with 5 credits\")"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (:bad-publicity (get-corp))) \"Should start with 0 bad publicity\")"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [gf-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (get-counters (refresh gf-scored) :agenda)) \"Should start with 2 agenda counters\")"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp gf-scored 0)"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 1 (:click (get-corp))) \"Should have 1 click left\")"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 12 (:credit (get-corp))) \"Should gain 7 credits from 5 to 12\")"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 1 (:bad-publicity (get-corp))) \"Should gain 1 bad publicity\"))))"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"prevented bad publicity shouldn\u0027t block credit gain\""
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Geothermal Fracking\" \"Broadcast Square\"]}})"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Geothermal Fracking\")"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:click (get-corp))) \"Should have 2 clicks left\")"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 5 (:credit (get-corp))) \"Should start with 5 credits\")"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (:bad-publicity (get-corp))) \"Should start with 0 bad publicity\")"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Broadcast Square\" \"New remote\")"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [gf-scored (get-scored state :corp 0)"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "            bs (get-content state :remote2 0)]"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/rez state :corp bs)"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (get-counters (refresh gf-scored) :agenda)) \"Should start with 2 agenda counters\")"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp gf-scored 0)"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :corp \"0\")"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :runner \"0\")"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (:click (get-corp))) \"Should have 0 click left\")"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 10 (:credit (get-corp))) \"Should gain 7 credits from 3 to 10\")"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (:bad-publicity (get-corp))) \"Should gain 0 bad publicity from prevention\")))))"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest gila-hands-arcology"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Gila Hands Arcology"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Gila Hands Arcology\"]}})"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Gila Hands Arcology\")"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 2 (:click (get-corp))) \"Should have 2 clicks left\")"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 5 (:credit (get-corp))) \"Should start with 5 credits\")"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :corp :click 2)"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [gha-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp gha-scored 0)"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:click (get-corp))) \"Should spend 2 clicks on Gila Hands\")"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 8 (:credit (get-corp))) \"Should gain 3 credits from 5 to 8\")"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp gha-scored 0)"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (:click (get-corp))) \"Should spend 2 clicks on Gila Hands\")"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 11 (:credit (get-corp))) \"Should gain 3 credits from 8 to 11\"))))"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest glenn-station"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Glenn Station"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Glenn Station\" \"Ice Wall\"]}})"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Glenn Station\")"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [gs-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp gs-scored 0)"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp (find-card \"Ice Wall\" (:hand (get-corp))))"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:hosted (refresh gs-scored)))))"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp gs-scored 1)"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp (find-card \"Ice Wall\" (:hosted (refresh gs-scored))))"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (count (:hosted (refresh gs-scored))))))))"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest global-food-initiative"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Global Food Initiative"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Global Food Initiative\" 2)]}})"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Corp scores\""
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (:agenda-point (get-runner))) \"Runner should start with 0 agenda points\")"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (:agenda-point (get-corp))) \"Corp should start with 0 agenda points\")"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Global Food Initiative\")"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 3 (:agenda-point (get-corp))) \"Corp should gain 3 agenda points\"))"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Runner steals\""
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Global Food Initiative\" \"New remote\")"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state :remote2)"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:agenda-point (get-runner))) \"Runner should gain 2 agenda points, not 3\"))))"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest government-contracts"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Government Contracts"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Government Contracts\"]}})"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Government Contracts\")"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 2 (:click (get-corp))))"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "    (card-ability state :corp (get-scored state :corp 0) 0)"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (zero? (:click (get-corp))) \"Spent 2 clicks\")"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 9 (:credit (get-corp))) \"Gained 4 credits\")))"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest government-takeover"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Government Takeover"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Government Takeover\"]}})"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Government Takeover\")"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 5 (:credit (get-corp))) \"Should start with 5 credits\")"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [gt-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp gt-scored 0)"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 8 (:credit (get-corp))) \"Should gain 3 credits from 5 to 8\"))))"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest graft"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Graft"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "  (letfn [(graft-test [[number-of-picks deck-size]]"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "            (let [cards [\"Ice Wall\" \"Fire Wall\" \"Orion\"]]"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "              (do-game"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "                (new-game {:corp {:deck [\"Graft\" \"Ice Wall\""
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "                                         \"Fire Wall\" \"Orion\"]}})"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "                (starting-hand state :corp [\"Graft\"])"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": "                (play-and-score state \"Graft\")"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "                (dotimes [current-pick number-of-picks]"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "                  (click-prompt state :corp (find-card (nth cards current-pick) (:deck (get-corp)))))"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "                (is (\u003d number-of-picks (count (:hand (get-corp)))))"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "                (is (\u003d deck-size (count (:deck (get-corp))))))))]"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "    (doall (map graft-test"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "                [[0 3]"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "                 [1 2]"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": "                 [2 1]"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "                 [3 0]]))))"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest hades-fragment"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Hades Fragment"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Hades Fragment\" (qty \"Hedge Fund\" 2)]}})"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "    (starting-hand state :corp [\"Hades Fragment\"])"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Hades Fragment\")"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :runner)"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (count (:hand (get-corp)))) \"Corp should have no opportunity to use Hades Shard\")"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/move state :corp (find-card \"Hedge Fund\" (:hand (get-corp))) :discard)"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :runner)"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [hf-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp hf-scored 0)"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (find-card \"Hedge Fund\" (:discard (get-corp))))"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (count (:deck (get-corp)))) \"R\u0026D should have 2 cards in it after Hades Fragment use\"))))"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest helium-3-deposit"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Helium-3 Deposit"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Helium-3 Deposit\""
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "                             \"Chief Slee\""
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "                             \"Ice Wall\"]}})"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Chief Slee\" \"New remote\")"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Ice Wall\" \"HQ\")"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [cs (get-content state :remote1 0)"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "          iw (get-ice state :hq 0)]"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (get-counters (refresh cs) :power)) \"Chief Slee should start with 0 power counters\")"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/rez state :corp iw)"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state \"HQ\")"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp cs 0)"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (get-counters (refresh cs) :power)) \"Chief Slee should gain 1 power counter\")"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Helium-3 Deposit\")"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"2\")"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp cs)"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 3 (get-counters (refresh cs) :power)) \"Chief Slee should gain 2 power counters from 1 to 3\"))))"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest high-risk-investment"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; High-Risk Investment"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"High-Risk Investment\"]}})"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"High-Risk Investment\")"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [hri-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (get-counters (refresh hri-scored) :agenda)) \"Has 1 agenda counter\")"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 7 (:credit (get-corp))))"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 9 (:credit (get-runner))))"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp hri-scored 0)"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 16 (:credit (get-corp))) \"Gained 9 credits\")"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:click (get-corp))) \"Spent 1 click\")"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (get-counters (refresh hri-scored) :agenda)) \"Spent agenda counter\"))))"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest hollywood-renovation"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Hollywood Renovation"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Hollywood Renovation\" \"Ice Wall\"]}})"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :corp :click 10 :credit 10)"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Ice Wall\" \"HQ\")"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Hollywood Renovation\" \"New remote\")"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [hr (get-content state :remote1 0)"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": "          iw (get-ice state :hq 0)]"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (get-counters (refresh hr) :advancement)) \"Hollywood Renovation should start with 0 advancement tokens\")"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (get-counters (refresh iw) :advancement)) \"Ice Wall should start with 0 advancement tokens\")"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "      (dotimes [n 5]"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state (refresh hr))"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp (refresh iw)))"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 5 (get-counters (refresh hr) :advancement)) \"Hollywood Renovation should gain 5 advancement tokens\")"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 5 (get-counters (refresh iw) :advancement)) \"Ice Wall should gain 5 advancement tokens\")"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "      (advance state (refresh hr))"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (refresh iw))"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 6 (get-counters (refresh hr) :advancement)) \"Hollywood Renovation should gain 1 from 5 to 6 advancement tokens\")"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 7 (get-counters (refresh iw) :advancement)) \"Ice Wall should gain 2 from 5 to 7 advancement tokens\"))))"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest hostile-takeover"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Hostile Takeover"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Hostile Takeover\"]}})"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Hostile Takeover\")"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 12 (:credit (get-corp))) \"Gain 7 credits\")"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (:bad-publicity (get-corp))) \"Take 1 bad publicity\")))"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest house-of-knives"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; House of Knives"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"House of Knives\"]}})"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"House of Knives\")"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [hok-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 3 (get-counters (refresh hok-scored) :agenda)) \"House of Knives should start with 3 counters\")"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-empty-server state \"R\u0026D\")"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-phase-43 state)"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp hok-scored 0)"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:discard (get-runner)))) \"Runner should pay 1 net damage\")"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-empty-server state \"R\u0026D\")"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-phase-43 state)"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp hok-scored 0)"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp hok-scored 0)"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (count (:discard (get-runner)))) \"Runner should pay 1 net damage\"))))"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest hyperloop-extension"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Hyperloop Extension"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Score\""
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Hyperloop Extension\"]}})"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Hyperloop Extension\" \"New remote\")"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 5 (:credit (get-corp))) \"Corp starts with 5 credits\")"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "      (score-agenda state :corp (get-content state :remote1 0))"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 8 (:credit (get-corp))) \"Corp gains 3 credits\")))"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Steal\""
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Hyperloop Extension\"]}})"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Hyperloop Extension\" \"New remote\")"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-empty-server state \"Server 1\")"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 7 (:credit (get-corp))) \"Corp starts with 5 credits\")"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 10 (:credit (get-corp))) \"Corp gains 3 credits\"))))"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest ikawah-project"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Ikawah Project"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Basic test\""
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Ikawah Project\"]}})"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Ikawah Project\" \"New remote\")"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "      (testing \"No credits\""
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :corp)"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/lose state :runner :credit (:credit (get-runner)) :click 3)"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-empty-server state :remote1)"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :runner \"No action\")"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (:credit (get-runner))) \"Runner couldn\u0027t afford to steal, so no credits spent\")"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (count (:scored (get-runner)))) \"Runner could not steal Ikawah Project\"))"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": "      (testing \"No clicks\""
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :runner)"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :corp)"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/lose state :runner :credit (:credit (get-runner)) :click 3)"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-empty-server state :remote1)"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :runner \"No action\")"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (:click (get-runner))) \"Runner couldn\u0027t afford to steal, so no clicks spent\")"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (count (:scored (get-runner)))) \"Runner could not steal Ikawah Project\"))"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "      (testing \"Enough of both\""
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :runner)"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :corp)"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/lose state :runner :credit (:credit (get-runner)) :click (:click (get-runner)))"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/gain state :runner :credit 5 :click 4)"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 5 (:credit (get-runner))) \"Runner should be reset to 5 credits\")"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 4 (:click (get-runner))) \"Runner should be reset to 4 clicks\")"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-empty-server state :remote1)"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :runner \"Pay to steal\")"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (:click (get-runner))) \"Runner should lose 1 click to steal\")"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 3 (:credit (get-runner))) \"Runner should lose 2 credits to steal\")"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 3 (:agenda-point (get-runner))))"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 1 (count (:scored (get-runner)))) \"Runner should steal Ikawah Project\"))))"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Not stealing\""
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "    ;; do not reveal when the Runner does not steal from R\u0026D"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [(qty \"Ikawah Project\" 2)]}})"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :corp [\"Ikawah Project\"])"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-empty-server state \"R\u0026D\")"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"No action\")"
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (not (last-log-contains? state \"Ikawah Project\")) \"Ikawah Project should not be mentioned\")"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-empty-server state \"HQ\")"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"No action\")"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (last-log-contains? state \"Ikawah Project\") \"Ikawah Project should be mentioned\"))))"
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest illicit-sales"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Illicit Sales"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": "  (letfn [(illicit-sales-test [[starting-bp answer credits-gained]]"
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "            (testing (str \"starting with \" starting-bp \" and answering \" answer \" and gaining \" credits-gained)"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": "              (do-game"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": "                (new-game {:corp {:deck [\"Illicit Sales\"]}})"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": "                (let [credits (:credit (get-corp))]"
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "                  (core/gain state :corp :bad-publicity starting-bp)"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": "                  (play-and-score state \"Illicit Sales\")"
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": "                  (click-prompt state :corp answer)"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "                  (is (\u003d (:credit (get-corp)) (+ credits credits-gained)))))))]"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": "    (doall (map illicit-sales-test"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": "                [[0 \"No\" 0]"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "                 [0 \"Yes\" 3]"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "                 [1 \"No\" 3]"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": "                 [1 \"Yes\" 6]"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": "                 [2 \"No\" 6]"
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": "                 [2 \"Yes\" 9]"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": "                 [3 \"No\" 9]"
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": "                 [3 \"Yes\" 12]]))))"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest improved-protein-source"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Improved Protein Source"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Improved Protein Source\" 2)]}})"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 5 (:credit (get-runner))) \"Runner starts with 5 credits\")"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Improved Protein Source\")"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 9 (:credit (get-runner))) \"Runner should gain 4 credits from Corp scoring\")"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Improved Protein Source\" \"New remote\")"
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": "    (run-empty-server state :remote2)"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 13 (:credit (get-runner))) \"Runner should gain 4 credits from Corp scoring\")))"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest improved-tracers"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Improved Tracers"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Improved Tracers\" \"News Hound\" \"Information Overload\"]}})"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :corp :credit 10)"
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"News Hound\" \"HQ\")"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Information Overload\" \"R\u0026D\")"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [nh (get-ice state :hq 0)"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": "          io (get-ice state :rd 0)]"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/rez state :corp nh)"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/rez state :corp io)"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 4 (:current-strength (refresh nh))) \"Should start with base strength of 4\")"
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 7 (:credit (get-corp))) \"Should have 7 credits after rez\")"
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Improved Tracers\")"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 5 (:current-strength (refresh nh))) \"Should gain 1 strength from 4 to 5\")"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state \"HQ\")"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-subroutine state :corp nh 0)"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (-\u003e (get-corp) :prompt first :bonus)) \"Should gain 1 bonus trace strength\")"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"0\")"
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"0\")"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count-tags state)))"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-jack-out state)"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state \"HQ\")"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-subroutine state :corp nh 0)"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (-\u003e (get-corp) :prompt first :bonus))"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "-"
        },
        "content": "          \"Should gain only 1 bonus trace strength regardless of number of runs in a turn\")"
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"0\")"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"0\")"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (count-tags state)))"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state \"R\u0026D\")"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp io 1)"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (-\u003e (get-corp) :prompt first :bonus)) \"Should gain 0 bonus trace strength, as it\u0027s an encounter ability\"))))"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest jumon"
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Jumon"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Jumon\" \"Ice Wall\" \"Crisium Grid\" \"Project Atlas\"]}})"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Jumon\")"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Ice Wall\" \"New remote\")"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Project Atlas\" \"Server 2\")"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/end-turn state :corp nil)"
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [pa (get-content state :remote2 0)"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": "          iw (get-ice state :remote2 0)]"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (get-counters (refresh pa) :advancement)) \"Project Atlas starts with no counters\")"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (get-counters (refresh iw) :advancement)) \"Ice Wall starts with no counters\")"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp iw)"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp pa)"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (get-counters (refresh pa) :advancement)) \"Project Atlas gains 2 counters\")"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (get-counters (refresh iw) :advancement)) \"Ice Wall doesn\u0027t gain any counters\")"
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/start-turn state :runner nil)"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Crisium Grid\" \"Server 2\")"
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [cg (get-content state :remote2 1)]"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (get-counters (refresh cg) :advancement)) \"Crisium Grid starts with no counters\")"
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/end-turn state :corp nil)"
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp cg)"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (get-counters (refresh cg) :advancement)) \"Crisium Grid gains 2 counters\")))))"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest labyrinthine-servers"
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Labyrinthine Servers"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Labyrinthine Servers\" 2)]}})"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Labyrinthine Servers\")"
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Labyrinthine Servers\")"
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [ls1 (get-scored state :corp 0)"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "-"
        },
        "content": "          ls2 (get-scored state :corp 1)]"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (get-counters (refresh ls1) :power)))"
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (get-counters (refresh ls2) :power)))"
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "-"
        },
        "content": "      (testing \"Don\u0027t use token\""
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-on state \"HQ\")"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-jack-out state)"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (:run @state) \"Jack out prevent prompt\")"
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :corp \"Done\")"
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (not (:run @state)) \"Corp does not prevent the jack out, run ends\"))"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "-"
        },
        "content": "      (testing \"Use token\""
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-on state \"HQ\")"
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-jack-out state)"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp ls1 0)"
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp ls2 0)"
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp ls1 0)"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :corp \"Done\")"
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (:run @state) \"Jack out prevented, run is still ongoing\")"
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (true? (get-in @state [:run :cannot-jack-out])) \"Cannot jack out flag is in effect\")"
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-successful state)"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (not (:run @state))))"
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "-"
        },
        "content": "      (testing \"one Labyrinthine is empty but the other still has one token, ensure prompt still occurs\""
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (get-counters (refresh ls1) :power)))"
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 1 (get-counters (refresh ls2) :power)))"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-on state \"HQ\")"
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-jack-out state)"
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (:run @state))"
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp ls2 0)"
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :corp \"Done\")"
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (true? (get-in @state [:run :cannot-jack-out])))"
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-successful state)"
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (not (:run @state))))"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "-"
        },
        "content": "      (testing \"No more tokens\""
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-on state \"HQ\")"
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-jack-out state)"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (not (:run @state)) \"No jack out prevent prompt\")))))"
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest license-acquisition"
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; License Acquisition"
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"License Acquisition\" 4)"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "-"
        },
        "content": "                             \"Adonis Campaign\" \"Eve Campaign\""
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "-"
        },
        "content": "                             \"Strongbox\" \"Corporate Troubleshooter\"]}})"
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Set up\""
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :corp [\"License Acquisition\" \"License Acquisition\" \"License Acquisition\" \"License Acquisition\""
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "-"
        },
        "content": "                                  \"Adonis Campaign\" \"Strongbox\"])"
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/move state :corp (find-card \"Eve Campaign\" (:deck (get-corp))) :discard)"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/move state :corp (find-card \"Corporate Troubleshooter\" (:deck (get-corp))) :discard)"
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/gain state :corp :click 4))"
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Asset \u0026 HQ\""
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"License Acquisition\")"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (find-card \"Adonis Campaign\" (:hand (get-corp))))"
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"New remote\")"
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (some? (get-content state :remote2 0))))"
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Upgrade \u0026 HQ\""
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"License Acquisition\")"
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (find-card \"Strongbox\" (:hand (get-corp))))"
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"New remote\")"
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (some? (get-content state :remote4 0))))"
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Asset \u0026 Archives\""
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"License Acquisition\")"
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (find-card \"Eve Campaign\" (:discard (get-corp))))"
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"New remote\")"
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (some? (get-content state :remote6 0))))"
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Upgrade \u0026 Archives\""
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"License Acquisition\")"
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (find-card \"Corporate Troubleshooter\" (:discard (get-corp))))"
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"New remote\")"
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (some? (get-content state :remote8 0))))))"
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest mandatory-seed-replacement"
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Mandatory Seed Replacement"
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Mandatory Seed Replacement\""
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "-"
        },
        "content": "                             \"Ice Wall\" \"Fire Wall\""
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "-"
        },
        "content": "                             \"Kakugo\" \"Chum\""
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "-"
        },
        "content": "                             \"RSVP\" \"Sensei\"]}})"
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/click-draw state :corp 2)"
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :corp :click 10 :credit 10)"
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Ice Wall\" \"Archives\")"
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Fire Wall\" \"R\u0026D\")"
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Kakugo\" \"HQ\")"
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Chum\" \"Archives\")"
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"RSVP\" \"R\u0026D\")"
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Sensei\" \"HQ\")"
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [iw (get-ice state :archives 0)"
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "-"
        },
        "content": "          fw (get-ice state :rd 0)"
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "-"
        },
        "content": "          kk (get-ice state :hq 0)"
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "-"
        },
        "content": "          ch (get-ice state :archives 1)"
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "-"
        },
        "content": "          rs (get-ice state :rd 1)"
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "-"
        },
        "content": "          sn (get-ice state :hq 1)]"
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/rez state :corp iw)"
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/rez state :corp fw)"
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/rez state :corp kk)"
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/rez state :corp ch)"
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/rez state :corp rs)"
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/rez state :corp sn)"
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Mandatory Seed Replacement\")"
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (refresh iw))"
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (refresh fw))"
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (refresh kk))"
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (refresh ch))"
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (refresh rs))"
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (refresh sn)))))"
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest mandatory-upgrades"
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Mandatory Upgrades"
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Gain an additional click\""
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Mandatory Upgrades\""
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Melange Mining Corp.\"]}})"
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Mandatory Upgrades\")"
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:agenda-point (get-corp))))"
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Melange Mining Corp.\" \"New remote\")"
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [mmc (get-content state :remote2 0)]"
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/rez state :corp mmc)"
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :corp)"
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :runner)"
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 4 (:click (get-corp))))"
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp mmc 0)"
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 1 (:click (get-corp)))))))"
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Lose additional click if sacrificed\""
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Mandatory Upgrades\""
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Archer\"]}})"
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Mandatory Upgrades\")"
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:agenda-point (get-corp))))"
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Archer\" \"HQ\")"
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [arc (get-ice state :hq 0)"
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "-"
        },
        "content": "            mu (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 4 (:click (get-corp))) \"Corp should start turn with 4 clicks\")"
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/rez state :corp arc)"
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp (refresh mu))"
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 3 (:click (get-corp))) \"Corp should lose 1 click on agenda sacrifice\")))))"
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest market-research"
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Market Research"
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Market Research\" 2)]}})"
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Runner is not tagged\""
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Market Research\")"
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:agenda-point (get-corp))) \"Only 4 advancements: scored for standard 2 points\"))"
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Runner is tagged\""
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/gain-tags state :runner 1)"
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Market Research\")"
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 5 (:agenda-point (get-corp))) \"5 advancements: scored for 3 points\"))))"
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest medical-breakthrough"
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Medical Breakthrough"
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Medical Breakthrough\" 3) (qty \"Hedge Fund\" 3)]}})"
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Medical Breakthrough\" \"New remote\")"
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Medical Breakthrough\" \"New remote\")"
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Hedge Fund\")"
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "-"
        },
        "content": "    (run-empty-server state :remote1)"
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :runner)"
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [mb2 (get-content state :remote2 0)]"
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "-"
        },
        "content": "      (advance state mb2 3)"
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/score state :corp {:card (refresh mb2)})"
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:agenda-point (get-corp))) \"Only needed 3 advancements to score\"))"
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :runner)"
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Medical Breakthrough\" \"New remote\")"
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [mb3 (get-content state :remote3 0)]"
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "-"
        },
        "content": "      (advance state mb3 2)"
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/score state :corp {:card (refresh mb3)})"
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 4 (:agenda-point (get-corp))) \"Only needed 2 advancements to score\"))))"
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest merger"
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Merger"
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Merger\" 2)]}})"
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Merger\")"
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 2 (:agenda-point (get-corp))) \"Corp should score 2 points\")"
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Merger\" \"New remote\")"
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "-"
        },
        "content": "    (run-empty-server state :remote2)"
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 3 (:agenda-point (get-runner))) \"Runner should score 3 points\")))"
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest meteor-mining"
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Meteor Mining"
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"when Meteor Mining is stolen\""
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Meteor Mining\"]}})"
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Meteor Mining\" \"New remote\")"
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-empty-server state :remote1)"
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:agenda-point (get-runner))) \"Runner should score 2 points\")))"
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"when Meteor Mining is scored\""
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "-"
        },
        "content": "    (letfn [(meteor-mining-test [[tags num-choices pick creds dmg]]"
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "-"
        },
        "content": "              (do-game"
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "-"
        },
        "content": "                (new-game {:corp {:deck [\"Meteor Mining\"]}"
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "-"
        },
        "content": "                           :runner {:deck [(qty \"Sure Gamble\" 7)]}})"
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "-"
        },
        "content": "                (starting-hand state :runner (repeat 7 \"Sure Gamble\"))"
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "-"
        },
        "content": "                (let [credits (:credit (get-corp))"
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "-"
        },
        "content": "                      grip (count (:hand (get-runner)))]"
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "-"
        },
        "content": "                  (core/gain-tags state :runner tags)"
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "-"
        },
        "content": "                  (play-and-score state \"Meteor Mining\")"
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "-"
        },
        "content": "                  (is (\u003d num-choices (count (:choices (first (get-in @state [:corp :prompt]))))))"
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "-"
        },
        "content": "                  (click-prompt state :corp pick)"
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "-"
        },
        "content": "                  (is (\u003d (+ credits creds) (:credit (get-corp)))"
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "-"
        },
        "content": "                      (str \"Corp should have \" (+ credits creds) \" credits\"))"
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "-"
        },
        "content": "                  (is (\u003d (- grip dmg) (count (:hand (get-runner))))"
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "-"
        },
        "content": "                      (str \"Runner should have \" (- grip dmg) \" cards in hand\")))))]"
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "-"
        },
        "content": "      (doall (map meteor-mining-test"
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "-"
        },
        "content": "                  [[0 2 \"No action\" 0 0]"
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "-"
        },
        "content": "                   [0 2 \"Gain 7 [Credits]\" 7 0]"
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "-"
        },
        "content": "                   [1 2 \"No action\" 0 0]"
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "-"
        },
        "content": "                   [1 2 \"Gain 7 [Credits]\" 7 0]"
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "-"
        },
        "content": "                   [2 3 \"No action\" 0 0]"
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "-"
        },
        "content": "                   [2 3 \"Gain 7 [Credits]\" 7 0]"
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "-"
        },
        "content": "                   [2 3 \"Do 7 meat damage\" 0 7]"
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "-"
        },
        "content": "                   [3 3 \"No action\" 0 0]"
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "-"
        },
        "content": "                   [3 3 \"Gain 7 [Credits]\" 7 0]"
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "-"
        },
        "content": "                   [3 3 \"Do 7 meat damage\" 0 7]])))))"
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest napd-contract"
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; NAPD Contract"
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"basic test\""
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"NAPD Contract\"]}})"
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"NAPD Contract\" \"New remote\")"
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [napd (get-content state :remote1 0)]"
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state napd 2)"
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :corp)"
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/lose state :runner :credit 2)"
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-empty-server state \"Server 1\")"
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :runner \"No action\")"
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (count (:scored (get-runner)))) \"Runner could not steal NAPD Contract\")"
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 3 (:credit (get-runner))) \"Runner couldn\u0027t afford to steal, so no credits spent\")"
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :runner)"
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/gain state :corp :bad-publicity 1)"
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state napd 2)"
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/score state :corp {:card (refresh napd)})"
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (some? (get-content state :remote1 0))"
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Corp can\u0027t score with 4 advancements because of BP\")"
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state napd)"
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/score state :corp {:card (refresh napd)})"
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (:agenda-point (get-corp))) \"Scored NAPD for 2 points after 5 advancements\"))))"
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"scoring requirement increases with bad publicity from Corporate Scandal\""
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"NAPD Contract\"]}"
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:deck [\"Corporate Scandal\"]}})"
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"NAPD Contract\" \"New remote\")"
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [napd (get-content state :remote1 0)]"
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state napd 2)"
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :corp)"
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "-"
        },
        "content": "        (play-from-hand state :runner \"Corporate Scandal\")"
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :runner)"
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state napd 2)"
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/score state :corp {:card (refresh napd)})"
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (some? (get-content state :remote1 0))"
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Corp can\u0027t score with 4 advancements because of BP\")"
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state napd)"
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/score state :corp {:card (refresh napd)})"
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (:agenda-point (get-corp))) \"Scored NAPD for 2 points after 5 advancements\")))))"
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest net-quarantine"
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Net Quarantine"
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Net Quarantine\"]}})"
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :runner :link 1)"
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :corp :click 3)"
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Net Quarantine\")"
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [credits (:credit (get-corp))]"
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d credits (:credit (get-corp))) (str \"Corp has \" credits \" credits\"))"
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:link (get-runner))) \"Runner has 1 link\")"
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/init-trace state :corp {:title \"/trace command\" :side :corp} {:base 1})"
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"0\")"
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (-\u003e (get-runner) :prompt first :link)) \"Runner has 0 link during first trace\")"
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"3\")"
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d (inc credits) (:credit (get-corp))) \"Corp gained a credit from NQ\")"
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "-"
        },
        "content": "      ; second trace of turn - no link reduction"
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/init-trace state :corp {:title \"/trace command\" :side :corp} {:base 1})"
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"0\")"
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (-\u003e (get-runner) :prompt first :link)) \"Runner has 1 link during later traces\")"
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"2\")"
      },
      {
        "lineNumber": 1639,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d (+ credits 2) (:credit (get-corp))) \"Corp gained a credit from NQ\"))))"
      },
      {
        "lineNumber": 1640,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1641,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest new-construction"
      },
      {
        "lineNumber": 1642,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; New Construction"
      },
      {
        "lineNumber": 1643,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1644,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"New Construction\" (qty \"Commercial Bankers Group\" 10)]}})"
      },
      {
        "lineNumber": 1645,
        "author": {
          "gitId": "-"
        },
        "content": "    (starting-hand state :corp (vec (cons \"New Construction\" (repeat 10 \"Commercial Bankers Group\"))))"
      },
      {
        "lineNumber": 1646,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :corp :click 10 :credit 10)"
      },
      {
        "lineNumber": 1647,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"New Construction\" \"New remote\")"
      },
      {
        "lineNumber": 1648,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [nc (get-content state :remote1 0)]"
      },
      {
        "lineNumber": 1649,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (get-counters (refresh nc) :advancement)))"
      },
      {
        "lineNumber": 1650,
        "author": {
          "gitId": "-"
        },
        "content": "      (dotimes [n 4]"
      },
      {
        "lineNumber": 1651,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state (refresh nc))"
      },
      {
        "lineNumber": 1652,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 1653,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp (find-card \"Commercial Bankers Group\" (:hand (get-corp)))))"
      },
      {
        "lineNumber": 1654,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 4 (get-counters (refresh nc) :advancement)))"
      },
      {
        "lineNumber": 1655,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (not\u003d :this-turn (:rezzed (get-content state :remote5 0))))"
      },
      {
        "lineNumber": 1656,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [credits (:credit (get-corp))]"
      },
      {
        "lineNumber": 1657,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state (refresh nc))"
      },
      {
        "lineNumber": 1658,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 1659,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp (find-card \"Commercial Bankers Group\" (:hand (get-corp))))"
      },
      {
        "lineNumber": 1660,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 5 (get-counters (refresh nc) :advancement)))"
      },
      {
        "lineNumber": 1661,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d :this-turn (:rezzed (get-content state :remote6 0))))"
      },
      {
        "lineNumber": 1662,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d (dec credits) (:credit (get-corp))))))))"
      },
      {
        "lineNumber": 1663,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1664,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest next-wave-2"
      },
      {
        "lineNumber": 1665,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; NEXT Wave 2"
      },
      {
        "lineNumber": 1666,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1667,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"NEXT Wave 2\" 2) \"NEXT Bronze\"]}})"
      },
      {
        "lineNumber": 1668,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (zero? (:brain-damage (get-runner))) \"Runner should start with 0 brain damage\")"
      },
      {
        "lineNumber": 1669,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"NEXT Bronze\" \"HQ\")"
      },
      {
        "lineNumber": 1670,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [nxbr (get-ice state :hq 0)]"
      },
      {
        "lineNumber": 1671,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/rez state :corp nxbr))"
      },
      {
        "lineNumber": 1672,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"NEXT Wave 2\")"
      },
      {
        "lineNumber": 1673,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :corp \"No\")"
      },
      {
        "lineNumber": 1674,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (zero? (:brain-damage (get-runner))) \"Runner should stay at 0 brain damage\")"
      },
      {
        "lineNumber": 1675,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"NEXT Wave 2\")"
      },
      {
        "lineNumber": 1676,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 1677,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (:brain-damage (get-runner))) \"Runner should gain 1 brain damage\")))"
      },
      {
        "lineNumber": 1678,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1679,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest nisei-mk-ii"
      },
      {
        "lineNumber": 1680,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Nisei MK II - Remove hosted counter to ETR, check this works in 4.3"
      },
      {
        "lineNumber": 1681,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1682,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Nisei MK II\"]}})"
      },
      {
        "lineNumber": 1683,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Nisei MK II\")"
      },
      {
        "lineNumber": 1684,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [scored-nisei (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 1685,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (get-counters (refresh scored-nisei) :agenda)) \"Scored Nisei has one counter\")"
      },
      {
        "lineNumber": 1686,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 1687,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state \"HQ\")"
      },
      {
        "lineNumber": 1688,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-phase-43 state)"
      },
      {
        "lineNumber": 1689,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp (refresh scored-nisei) 0)"
      },
      {
        "lineNumber": 1690,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Done\") ; close 4.3 corp"
      },
      {
        "lineNumber": 1691,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (not (:run @state)) \"Run ended by using Nisei counter\")"
      },
      {
        "lineNumber": 1692,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (get-counters (refresh scored-nisei) :agenda)) \"Scored Nisei has no counters\"))))"
      },
      {
        "lineNumber": 1693,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1694,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest oaktown-renovation"
      },
      {
        "lineNumber": 1695,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Oaktown Renovation"
      },
      {
        "lineNumber": 1696,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1697,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Oaktown Renovation\" \"Shipment from SanSan\"]}})"
      },
      {
        "lineNumber": 1698,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :corp :click 3)"
      },
      {
        "lineNumber": 1699,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Oaktown Renovation\" \"New remote\")"
      },
      {
        "lineNumber": 1700,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [oak (get-content state :remote1 0)]"
      },
      {
        "lineNumber": 1701,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (:rezzed (refresh oak)) \"Oaktown installed face up\")"
      },
      {
        "lineNumber": 1702,
        "author": {
          "gitId": "-"
        },
        "content": "      (advance state oak)"
      },
      {
        "lineNumber": 1703,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 6 (:credit (get-corp))) \"Spent 1 credit to advance, gained 2 credits from Oaktown\")"
      },
      {
        "lineNumber": 1704,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Shipment from SanSan\")"
      },
      {
        "lineNumber": 1705,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"2\")"
      },
      {
        "lineNumber": 1706,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp oak)"
      },
      {
        "lineNumber": 1707,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 3 (get-counters (refresh oak) :advancement)))"
      },
      {
        "lineNumber": 1708,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 6 (:credit (get-corp))) \"No credits gained due to advancements being placed\")"
      },
      {
        "lineNumber": 1709,
        "author": {
          "gitId": "-"
        },
        "content": "      (advance state oak)"
      },
      {
        "lineNumber": 1710,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 7 (:credit (get-corp))) \"Spent 1 credit to advance, gained 2 credits from Oaktown\")"
      },
      {
        "lineNumber": 1711,
        "author": {
          "gitId": "-"
        },
        "content": "      (advance state oak)"
      },
      {
        "lineNumber": 1712,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 5 (get-counters (refresh oak) :advancement)))"
      },
      {
        "lineNumber": 1713,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 9 (:credit (get-corp)))"
      },
      {
        "lineNumber": 1714,
        "author": {
          "gitId": "-"
        },
        "content": "          \"Spent 1 credit to advance, gained 3 credits from Oaktown\"))))"
      },
      {
        "lineNumber": 1715,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1716,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest obokata-protocol"
      },
      {
        "lineNumber": 1717,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Obotaka Protocol"
      },
      {
        "lineNumber": 1718,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1719,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:id \"Jinteki: Personal Evolution\""
      },
      {
        "lineNumber": 1720,
        "author": {
          "gitId": "-"
        },
        "content": "                      :deck [(qty \"Obokata Protocol\" 10)]}"
      },
      {
        "lineNumber": 1721,
        "author": {
          "gitId": "-"
        },
        "content": "               :runner {:deck [(qty \"Sure Gamble\" 4)]}})"
      },
      {
        "lineNumber": 1722,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Obokata Protocol\" \"New remote\")"
      },
      {
        "lineNumber": 1723,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 1724,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :runner :agenda-point 6)"
      },
      {
        "lineNumber": 1725,
        "author": {
          "gitId": "-"
        },
        "content": "    (run-empty-server state \"Server 1\")"
      },
      {
        "lineNumber": 1726,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"Pay to steal\")"
      },
      {
        "lineNumber": 1727,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 4 (count (:discard (get-runner)))) \"Runner paid 4 net damage\")"
      },
      {
        "lineNumber": 1728,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d :runner (:winner @state)) \"Runner wins\")"
      },
      {
        "lineNumber": 1729,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d \"Agenda\" (:reason @state)) \"Win condition reports agenda points\")))"
      },
      {
        "lineNumber": 1730,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1731,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest paper-trail"
      },
      {
        "lineNumber": 1732,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Paper Trail"
      },
      {
        "lineNumber": 1733,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1734,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Paper Trail\"]}"
      },
      {
        "lineNumber": 1735,
        "author": {
          "gitId": "-"
        },
        "content": "               :runner {:deck [\"Aeneas Informant\" \"Bank Job\""
      },
      {
        "lineNumber": 1736,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Rosetta 2.0\" \"Magnum Opus\""
      },
      {
        "lineNumber": 1737,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Astrolabe\"]}})"
      },
      {
        "lineNumber": 1738,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 1739,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :runner :click 10 :credit 10)"
      },
      {
        "lineNumber": 1740,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :runner \"Aeneas Informant\")"
      },
      {
        "lineNumber": 1741,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :runner \"Bank Job\")"
      },
      {
        "lineNumber": 1742,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :runner \"Rosetta 2.0\")"
      },
      {
        "lineNumber": 1743,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :runner \"Magnum Opus\")"
      },
      {
        "lineNumber": 1744,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :runner \"Astrolabe\")"
      },
      {
        "lineNumber": 1745,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :runner)"
      },
      {
        "lineNumber": 1746,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Paper Trail\")"
      },
      {
        "lineNumber": 1747,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :corp \"0\")"
      },
      {
        "lineNumber": 1748,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"0\")"
      },
      {
        "lineNumber": 1749,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 2 (count (:discard (get-runner)))))"
      },
      {
        "lineNumber": 1750,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (some? (get-resource state 0)))"
      },
      {
        "lineNumber": 1751,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (count (get-resource state))))"
      },
      {
        "lineNumber": 1752,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (some? (get-program state 0)))"
      },
      {
        "lineNumber": 1753,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (some? (get-hardware state 0)))))"
      },
      {
        "lineNumber": 1754,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1755,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest personality-profiles"
      },
      {
        "lineNumber": 1756,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Personality Profiles"
      },
      {
        "lineNumber": 1757,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"basic test\""
      },
      {
        "lineNumber": 1758,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 1759,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Personality Profiles\"]}"
      },
      {
        "lineNumber": 1760,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:deck [\"Self-modifying Code\" \"Clone Chip\""
      },
      {
        "lineNumber": 1761,
        "author": {
          "gitId": "-"
        },
        "content": "                                 \"Corroder\" (qty \"Patron\" 2)]}})"
      },
      {
        "lineNumber": 1762,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :runner [\"Self-modifying Code\" \"Clone Chip\" \"Patron\" \"Patron\"])"
      },
      {
        "lineNumber": 1763,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Personality Profiles\")"
      },
      {
        "lineNumber": 1764,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 1765,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"Self-modifying Code\")"
      },
      {
        "lineNumber": 1766,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"Clone Chip\")"
      },
      {
        "lineNumber": 1767,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [smc (get-program state 0)]"
      },
      {
        "lineNumber": 1768,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :runner smc 0)"
      },
      {
        "lineNumber": 1769,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :runner (find-card \"Corroder\" (:deck (get-runner))))"
      },
      {
        "lineNumber": 1770,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (count (:discard (get-runner))))))"
      },
      {
        "lineNumber": 1771,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [chip (get-hardware state 0)]"
      },
      {
        "lineNumber": 1772,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :runner chip 0)"
      },
      {
        "lineNumber": 1773,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :runner (find-card \"Self-modifying Code\" (:discard (get-runner))))"
      },
      {
        "lineNumber": 1774,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (second-last-log-contains? state \"Patron\")"
      },
      {
        "lineNumber": 1775,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Personality Profiles trashed card name is in log\")"
      },
      {
        "lineNumber": 1776,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 3 (count (:discard (get-runner))))))))"
      },
      {
        "lineNumber": 1777,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Ensure effects still fire with an empty hand, #1840\""
      },
      {
        "lineNumber": 1778,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 1779,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Personality Profiles\"]}"
      },
      {
        "lineNumber": 1780,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:deck [\"Self-modifying Code\" \"Clone Chip\""
      },
      {
        "lineNumber": 1781,
        "author": {
          "gitId": "-"
        },
        "content": "                                 \"Corroder\"]}})"
      },
      {
        "lineNumber": 1782,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :runner [\"Self-modifying Code\" \"Clone Chip\"])"
      },
      {
        "lineNumber": 1783,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Personality Profiles\")"
      },
      {
        "lineNumber": 1784,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 1785,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"Self-modifying Code\")"
      },
      {
        "lineNumber": 1786,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"Clone Chip\")"
      },
      {
        "lineNumber": 1787,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [smc (get-program state 0)]"
      },
      {
        "lineNumber": 1788,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :runner smc 0)"
      },
      {
        "lineNumber": 1789,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :runner (find-card \"Corroder\" (:deck (get-runner)))))"
      },
      {
        "lineNumber": 1790,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [cor (get-program state 0)]"
      },
      {
        "lineNumber": 1791,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (some? cor))"
      },
      {
        "lineNumber": 1792,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d (:title cor) \"Corroder\"))"
      },
      {
        "lineNumber": 1793,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d \"Self-modifying Code\" (:title (first (:discard (get-runner)))))))"
      },
      {
        "lineNumber": 1794,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [chip (get-hardware state 0)]"
      },
      {
        "lineNumber": 1795,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :runner chip 0)"
      },
      {
        "lineNumber": 1796,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :runner (find-card \"Self-modifying Code\" (:discard (get-runner)))))"
      },
      {
        "lineNumber": 1797,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [smc (get-program state 1)]"
      },
      {
        "lineNumber": 1798,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (some? smc))"
      },
      {
        "lineNumber": 1799,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d (:title smc) \"Self-modifying Code\"))"
      },
      {
        "lineNumber": 1800,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d \"Clone Chip\" (:title (first (:discard (get-runner))))))))))"
      },
      {
        "lineNumber": 1801,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1802,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest philotic-entanglement"
      },
      {
        "lineNumber": 1803,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Philotic Entanglement"
      },
      {
        "lineNumber": 1804,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1805,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Philotic Entanglement\" (qty \"House of Knives\" 3)]}"
      },
      {
        "lineNumber": 1806,
        "author": {
          "gitId": "-"
        },
        "content": "               :runner {:deck [(qty \"Sure Gamble\" 3) (qty \"Cache\" 2)]}})"
      },
      {
        "lineNumber": 1807,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"House of Knives\" \"New remote\")"
      },
      {
        "lineNumber": 1808,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"House of Knives\" \"New remote\")"
      },
      {
        "lineNumber": 1809,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"House of Knives\" \"New remote\")"
      },
      {
        "lineNumber": 1810,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 1811,
        "author": {
          "gitId": "-"
        },
        "content": "    (run-empty-server state :remote1)"
      },
      {
        "lineNumber": 1812,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 1813,
        "author": {
          "gitId": "-"
        },
        "content": "    (run-empty-server state :remote2)"
      },
      {
        "lineNumber": 1814,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 1815,
        "author": {
          "gitId": "-"
        },
        "content": "    (run-empty-server state :remote3)"
      },
      {
        "lineNumber": 1816,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 1817,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 3 (count (:scored (get-runner)))))"
      },
      {
        "lineNumber": 1818,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :runner)"
      },
      {
        "lineNumber": 1819,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Philotic Entanglement\")"
      },
      {
        "lineNumber": 1820,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 2 (:agenda-point (get-corp))))"
      },
      {
        "lineNumber": 1821,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 3 (count (:discard (get-runner)))) \"Dealt 3 net damage upon scoring\")))"
      },
      {
        "lineNumber": 1822,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1823,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest posted-bounty"
      },
      {
        "lineNumber": 1824,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Posted Bounty"
      },
      {
        "lineNumber": 1825,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Forfeiting takes 1 bad publicity\""
      },
      {
        "lineNumber": 1826,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 1827,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Posted Bounty\"]}})"
      },
      {
        "lineNumber": 1828,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Posted Bounty\")"
      },
      {
        "lineNumber": 1829,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 1830,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (:agenda-point (get-corp))) \"Forfeiting Posted Bounty nullifies agenda points\")"
      },
      {
        "lineNumber": 1831,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:bad-publicity (get-corp))) \"Forfeiting takes 1 bad publicity\")"
      },
      {
        "lineNumber": 1832,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count-tags state)) \"Runner receives 1 tag forfeiting Posted Bounty\")))"
      },
      {
        "lineNumber": 1833,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Choosing not to forfeit scores normally\""
      },
      {
        "lineNumber": 1834,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 1835,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Posted Bounty\"]}})"
      },
      {
        "lineNumber": 1836,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Posted Bounty\")"
      },
      {
        "lineNumber": 1837,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"No\")"
      },
      {
        "lineNumber": 1838,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:agenda-point (get-corp))))"
      },
      {
        "lineNumber": 1839,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (:bad-publicity (get-corp))))"
      },
      {
        "lineNumber": 1840,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (count-tags state))))))"
      },
      {
        "lineNumber": 1841,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1842,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest priority-requisition"
      },
      {
        "lineNumber": 1843,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Priority Requisition"
      },
      {
        "lineNumber": 1844,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1845,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Priority Requisition\" \"Archer\"]}})"
      },
      {
        "lineNumber": 1846,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Archer\" \"HQ\")"
      },
      {
        "lineNumber": 1847,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [arc (get-ice state :hq 0)]"
      },
      {
        "lineNumber": 1848,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Priority Requisition\")"
      },
      {
        "lineNumber": 1849,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp arc)"
      },
      {
        "lineNumber": 1850,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (:rezzed (refresh arc))))))"
      },
      {
        "lineNumber": 1851,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1852,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest private-security-force"
      },
      {
        "lineNumber": 1853,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Private Security Force"
      },
      {
        "lineNumber": 1854,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1855,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Private Security Force\" 10)]}})"
      },
      {
        "lineNumber": 1856,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain-tags state :runner 1)"
      },
      {
        "lineNumber": 1857,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Private Security Force\")"
      },
      {
        "lineNumber": 1858,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [psf-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 1859,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp psf-scored 0)"
      },
      {
        "lineNumber": 1860,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:discard (get-runner)))))"
      },
      {
        "lineNumber": 1861,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 1862,
        "author": {
          "gitId": "-"
        },
        "content": "      (dotimes [n 3]"
      },
      {
        "lineNumber": 1863,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp psf-scored 0))"
      },
      {
        "lineNumber": 1864,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 3 (count (:discard (get-runner)))))"
      },
      {
        "lineNumber": 1865,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d :corp (:winner @state)) \"Corp wins\")"
      },
      {
        "lineNumber": 1866,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d \"Flatline\" (:reason @state)) \"Win condition reports flatline\"))))"
      },
      {
        "lineNumber": 1867,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1868,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest profiteering"
      },
      {
        "lineNumber": 1869,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Profiteering"
      },
      {
        "lineNumber": 1870,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1871,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Profiteering\"]}})"
      },
      {
        "lineNumber": 1872,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Profiteering\")"
      },
      {
        "lineNumber": 1873,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :corp \"3\")"
      },
      {
        "lineNumber": 1874,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (:agenda-point (get-corp))))"
      },
      {
        "lineNumber": 1875,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 3 (:bad-publicity (get-corp))) \"Took 3 bad publicity\")"
      },
      {
        "lineNumber": 1876,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 20 (:credit (get-corp))) \"Gained 15 credits\")))"
      },
      {
        "lineNumber": 1877,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1878,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest project-ares"
      },
      {
        "lineNumber": 1879,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Project Ares"
      },
      {
        "lineNumber": 1880,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1881,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Project Ares\" 2)]}"
      },
      {
        "lineNumber": 1882,
        "author": {
          "gitId": "-"
        },
        "content": "               :runner {:deck [\"Clone Chip\"]}})"
      },
      {
        "lineNumber": 1883,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 1884,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :runner \"Clone Chip\")"
      },
      {
        "lineNumber": 1885,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :runner)"
      },
      {
        "lineNumber": 1886,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Project Ares\")"
      },
      {
        "lineNumber": 1887,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (empty? (get-in @state [:runner :prompt])) \"No prompt for Runner if scored with 4 advancement tokens\")"
      },
      {
        "lineNumber": 1888,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :corp :click 5)"
      },
      {
        "lineNumber": 1889,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Project Ares\" \"New remote\")"
      },
      {
        "lineNumber": 1890,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [ares (get-content state :remote2 0)]"
      },
      {
        "lineNumber": 1891,
        "author": {
          "gitId": "-"
        },
        "content": "      (advance state ares 6)"
      },
      {
        "lineNumber": 1892,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 6 (get-counters (refresh ares) :advancement)))"
      },
      {
        "lineNumber": 1893,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/score state :corp {:card (refresh ares)})"
      },
      {
        "lineNumber": 1894,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (prompt-is-card? state :runner ares) \"Runner has Ares prompt to trash installed cards\"))"
      },
      {
        "lineNumber": 1895,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-card state :runner (find-card \"Clone Chip\" (:hardware (:rig (get-runner)))))"
      },
      {
        "lineNumber": 1896,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (empty? (get-in @state [:runner :prompt])) \"Runner must trash 2 cards but only has 1 card in rig, prompt ended\")"
      },
      {
        "lineNumber": 1897,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (count (:discard (get-runner)))))"
      },
      {
        "lineNumber": 1898,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (:bad-publicity (get-corp))))))"
      },
      {
        "lineNumber": 1899,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1900,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest project-atlas"
      },
      {
        "lineNumber": 1901,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Project Atlas"
      },
      {
        "lineNumber": 1902,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"basic test\""
      },
      {
        "lineNumber": 1903,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 1904,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Project Atlas\""
      },
      {
        "lineNumber": 1905,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Beanstalk Royalties\"]}})"
      },
      {
        "lineNumber": 1906,
        "author": {
          "gitId": "-"
        },
        "content": "      ;; Set up"
      },
      {
        "lineNumber": 1907,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :corp [\"Project Atlas\"])"
      },
      {
        "lineNumber": 1908,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:hand (get-corp)))) \"Corp should have 1 cards in hand\")"
      },
      {
        "lineNumber": 1909,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/gain state :corp :click 10 :credit 10)"
      },
      {
        "lineNumber": 1910,
        "author": {
          "gitId": "-"
        },
        "content": "      ;; Should gain 1 counter"
      },
      {
        "lineNumber": 1911,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Project Atlas\" \"New remote\")"
      },
      {
        "lineNumber": 1912,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [atlas (get-content state :remote1 0)]"
      },
      {
        "lineNumber": 1913,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state atlas 4)"
      },
      {
        "lineNumber": 1914,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 4 (get-counters (refresh atlas) :advancement)) \"Atlas should have 4 advancement tokens\")"
      },
      {
        "lineNumber": 1915,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/score state :corp {:card (refresh atlas)}))"
      },
      {
        "lineNumber": 1916,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [atlas-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 1917,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 1 (get-counters (refresh atlas-scored) :agenda)) \"Atlas should have 1 agenda counter\")"
      },
      {
        "lineNumber": 1918,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp atlas-scored 0)"
      },
      {
        "lineNumber": 1919,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :corp (find-card \"Beanstalk Royalties\" (:deck (get-corp))))"
      },
      {
        "lineNumber": 1920,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (get-counters (refresh atlas-scored) :agenda)) \"Atlas should have 0 agenda counters\")"
      },
      {
        "lineNumber": 1921,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 1 (count (:hand (get-corp)))) \"Corp should have 1 cards in hand\"))))"
      },
      {
        "lineNumber": 1922,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"test with Titan\""
      },
      {
        "lineNumber": 1923,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 1924,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:id \"Titan Transnational: Investing In Your Future\""
      },
      {
        "lineNumber": 1925,
        "author": {
          "gitId": "-"
        },
        "content": "                        :deck [(qty \"Project Atlas\" 2) \"Beanstalk Royalties\" \"Hedge Fund\"]}})"
      },
      {
        "lineNumber": 1926,
        "author": {
          "gitId": "-"
        },
        "content": "      ;; Set up"
      },
      {
        "lineNumber": 1927,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :corp [\"Project Atlas\" \"Project Atlas\"])"
      },
      {
        "lineNumber": 1928,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (count (:hand (get-corp)))) \"Corp should have 2 cards in hand\")"
      },
      {
        "lineNumber": 1929,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/gain state :corp :click 10 :credit 10)"
      },
      {
        "lineNumber": 1930,
        "author": {
          "gitId": "-"
        },
        "content": "      ;; Should gain 1 counter"
      },
      {
        "lineNumber": 1931,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Project Atlas\" \"New remote\")"
      },
      {
        "lineNumber": 1932,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [atlas (get-content state :remote1 0)]"
      },
      {
        "lineNumber": 1933,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state atlas 3)"
      },
      {
        "lineNumber": 1934,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 3 (get-counters (refresh atlas) :advancement)) \"Atlas should have 3 advancement tokens\")"
      },
      {
        "lineNumber": 1935,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/score state :corp {:card (refresh atlas)}))"
      },
      {
        "lineNumber": 1936,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [atlas-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 1937,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 1 (get-counters (refresh atlas-scored) :agenda)) \"Atlas should have 1 agenda counter\")"
      },
      {
        "lineNumber": 1938,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp atlas-scored 0)"
      },
      {
        "lineNumber": 1939,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :corp (find-card \"Beanstalk Royalties\" (:deck (get-corp))))"
      },
      {
        "lineNumber": 1940,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (get-counters (refresh atlas-scored) :agenda)) \"Atlas should have 0 agenda counters\")"
      },
      {
        "lineNumber": 1941,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (count (:hand (get-corp)))) \"Corp should have 2 card in hand\"))"
      },
      {
        "lineNumber": 1942,
        "author": {
          "gitId": "-"
        },
        "content": "      ;; Should gain 2 counters"
      },
      {
        "lineNumber": 1943,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Project Atlas\" \"New remote\")"
      },
      {
        "lineNumber": 1944,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [atlas (get-content state :remote2 0)]"
      },
      {
        "lineNumber": 1945,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state atlas 4)"
      },
      {
        "lineNumber": 1946,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 4 (get-counters (refresh atlas) :advancement)) \"Atlas should have 4 advancement tokens\")"
      },
      {
        "lineNumber": 1947,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/score state :corp {:card (refresh atlas)}))"
      },
      {
        "lineNumber": 1948,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [atlas-scored (get-scored state :corp 1)]"
      },
      {
        "lineNumber": 1949,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (get-counters (refresh atlas-scored) :agenda)) \"Atlas should have 2 agenda counter\")"
      },
      {
        "lineNumber": 1950,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp atlas-scored 0)"
      },
      {
        "lineNumber": 1951,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :corp (find-card \"Hedge Fund\" (:deck (get-corp))))"
      },
      {
        "lineNumber": 1952,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 1 (get-counters (refresh atlas-scored) :agenda)) \"Atlas should have 1 agenda counters\")"
      },
      {
        "lineNumber": 1953,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (count (:hand (get-corp)))) \"Corp should have 2 cards in hand\")))))"
      },
      {
        "lineNumber": 1954,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1955,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest project-beale"
      },
      {
        "lineNumber": 1956,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Project Beale"
      },
      {
        "lineNumber": 1957,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1958,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Project Beale\" 2)]}})"
      },
      {
        "lineNumber": 1959,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :corp :click 8 :credit 8)"
      },
      {
        "lineNumber": 1960,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Project Beale\" \"New remote\")"
      },
      {
        "lineNumber": 1961,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [pb1 (get-content state :remote1 0)]"
      },
      {
        "lineNumber": 1962,
        "author": {
          "gitId": "-"
        },
        "content": "      (advance state pb1 4)"
      },
      {
        "lineNumber": 1963,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/score state :corp {:card (refresh pb1)})"
      },
      {
        "lineNumber": 1964,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:agenda-point (get-corp))) \"Only 4 advancements: scored for standard 2 points\")"
      },
      {
        "lineNumber": 1965,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Project Beale\" \"New remote\"))"
      },
      {
        "lineNumber": 1966,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [pb2 (get-content state :remote2 0)]"
      },
      {
        "lineNumber": 1967,
        "author": {
          "gitId": "-"
        },
        "content": "      (advance state pb2 5)"
      },
      {
        "lineNumber": 1968,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/score state :corp {:card (refresh pb2)})"
      },
      {
        "lineNumber": 1969,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 5 (:agenda-point (get-corp))) \"5 advancements: scored for 3 points\"))))"
      },
      {
        "lineNumber": 1970,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1971,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest project-kusanagi"
      },
      {
        "lineNumber": 1972,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Project Kusanagi"
      },
      {
        "lineNumber": 1973,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1974,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Project Kusanagi\" 2) \"Ice Wall\"]}})"
      },
      {
        "lineNumber": 1975,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Ice Wall\" \"HQ\")"
      },
      {
        "lineNumber": 1976,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :corp :click 10 :credit 10)"
      },
      {
        "lineNumber": 1977,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Should gain 0 counters\""
      },
      {
        "lineNumber": 1978,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Project Kusanagi\")"
      },
      {
        "lineNumber": 1979,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [pk-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 1980,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (get-counters (refresh pk-scored) :agenda)) \"Kusanagi should start with 0 agenda counters\")))"
      },
      {
        "lineNumber": 1981,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Should gain 1 counter\""
      },
      {
        "lineNumber": 1982,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Project Kusanagi\" \"New remote\")"
      },
      {
        "lineNumber": 1983,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [pk (get-content state :remote2 0)]"
      },
      {
        "lineNumber": 1984,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state pk 3)"
      },
      {
        "lineNumber": 1985,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 3 (get-counters (refresh pk) :advancement)) \"Kusanagi should have 3 advancement tokens\")"
      },
      {
        "lineNumber": 1986,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/score state :corp {:card (refresh pk)}))"
      },
      {
        "lineNumber": 1987,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [pk-scored (get-scored state :corp 1)]"
      },
      {
        "lineNumber": 1988,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 1 (get-counters (refresh pk-scored) :agenda)) \"Kusanagi should have 1 agenda counter\")"
      },
      {
        "lineNumber": 1989,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-empty-server state :hq)"
      },
      {
        "lineNumber": 1990,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp pk-scored 0)"
      },
      {
        "lineNumber": 1991,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (last-log-contains? state \"Do 1 net damage\"))"
      },
      {
        "lineNumber": 1992,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (get-counters (refresh pk-scored) :agenda)) \"Kusanagi should have 0 agenda counters\")))))"
      },
      {
        "lineNumber": 1993,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1994,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest project-vitruvius"
      },
      {
        "lineNumber": 1995,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Project Vitruvius"
      },
      {
        "lineNumber": 1996,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 1997,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Project Vitruvius\""
      },
      {
        "lineNumber": 1998,
        "author": {
          "gitId": "-"
        },
        "content": "                             \"Hedge Fund\"]}})"
      },
      {
        "lineNumber": 1999,
        "author": {
          "gitId": "-"
        },
        "content": "    ;; Set up"
      },
      {
        "lineNumber": 2000,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/move state :corp (find-card \"Hedge Fund\" (:hand (get-corp))) :discard)"
      },
      {
        "lineNumber": 2001,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (count (:discard (get-corp)))) \"Corp should have 1 cards in hand\")"
      },
      {
        "lineNumber": 2002,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (count (:hand (get-corp)))) \"Corp should have 1 cards in hand\")"
      },
      {
        "lineNumber": 2003,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :corp :click 10 :credit 10)"
      },
      {
        "lineNumber": 2004,
        "author": {
          "gitId": "-"
        },
        "content": "    ;; Should gain 1 counter"
      },
      {
        "lineNumber": 2005,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Project Vitruvius\" \"New remote\")"
      },
      {
        "lineNumber": 2006,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [vit (get-content state :remote1 0)]"
      },
      {
        "lineNumber": 2007,
        "author": {
          "gitId": "-"
        },
        "content": "      (advance state vit 4)"
      },
      {
        "lineNumber": 2008,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 4 (get-counters (refresh vit) :advancement)) \"Vitruvius should have 4 advancement tokens\")"
      },
      {
        "lineNumber": 2009,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/score state :corp {:card (refresh vit)}))"
      },
      {
        "lineNumber": 2010,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [vit-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 2011,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (get-counters (refresh vit-scored) :agenda)) \"Vitruvius should have 1 agenda counter\")"
      },
      {
        "lineNumber": 2012,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp vit-scored 0)"
      },
      {
        "lineNumber": 2013,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (find-card \"Hedge Fund\" (:discard (get-corp))))"
      },
      {
        "lineNumber": 2014,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (get-counters (refresh vit-scored) :agenda)) \"Vitruvius should have 0 agenda counters\")"
      },
      {
        "lineNumber": 2015,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:hand (get-corp)))) \"Corp should have 1 cards in hand\"))))"
      },
      {
        "lineNumber": 2016,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2017,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest project-wotan"
      },
      {
        "lineNumber": 2018,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Project Wotan - Only checks if agenda counter is spent"
      },
      {
        "lineNumber": 2019,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2020,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Project Wotan\""
      },
      {
        "lineNumber": 2021,
        "author": {
          "gitId": "-"
        },
        "content": "                             \"Eli 1.0\""
      },
      {
        "lineNumber": 2022,
        "author": {
          "gitId": "-"
        },
        "content": "                             (qty \"Hedge Fund\" 3)]}})"
      },
      {
        "lineNumber": 2023,
        "author": {
          "gitId": "-"
        },
        "content": "    (starting-hand state :corp [\"Project Wotan\" \"Eli 1.0\"])"
      },
      {
        "lineNumber": 2024,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Eli 1.0\" \"HQ\")"
      },
      {
        "lineNumber": 2025,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [eli (get-ice state :hq 0)]"
      },
      {
        "lineNumber": 2026,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/rez state :corp eli))"
      },
      {
        "lineNumber": 2027,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Project Wotan\")"
      },
      {
        "lineNumber": 2028,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 2029,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [wot-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 2030,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 3 (get-counters (refresh wot-scored) :agenda)) \"Wotan should start with 3 agenda counters\")"
      },
      {
        "lineNumber": 2031,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state \"HQ\")"
      },
      {
        "lineNumber": 2032,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp wot-scored 0)"
      },
      {
        "lineNumber": 2033,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (get-counters (refresh wot-scored) :agenda))) \"Wotan should only have 2 agenda counters\")))"
      },
      {
        "lineNumber": 2034,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2035,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest project-yagi-uda"
      },
      {
        "lineNumber": 2036,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Swap ICE from HQ\""
      },
      {
        "lineNumber": 2037,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2038,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [(qty \"Project Yagi-Uda\" 2)"
      },
      {
        "lineNumber": 2039,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Eli 1.0\""
      },
      {
        "lineNumber": 2040,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Eli 2.0\""
      },
      {
        "lineNumber": 2041,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Jackson Howard\""
      },
      {
        "lineNumber": 2042,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Prisec\""
      },
      {
        "lineNumber": 2043,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Hedge Fund\"]}})"
      },
      {
        "lineNumber": 2044,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/gain state :corp :click 10 :credit 10)"
      },
      {
        "lineNumber": 2045,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/click-draw state :corp 2)"
      },
      {
        "lineNumber": 2046,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Project Yagi-Uda\" \"New remote\")"
      },
      {
        "lineNumber": 2047,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Eli 1.0\" \"New remote\")"
      },
      {
        "lineNumber": 2048,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [pyu (get-content state :remote1 0)]"
      },
      {
        "lineNumber": 2049,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state pyu 4)"
      },
      {
        "lineNumber": 2050,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/score state :corp {:card (refresh pyu)}))"
      },
      {
        "lineNumber": 2051,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 2052,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [pyu-scored (get-scored state :corp 0)"
      },
      {
        "lineNumber": 2053,
        "author": {
          "gitId": "-"
        },
        "content": "            eli1 (get-ice state :remote2 0)]"
      },
      {
        "lineNumber": 2054,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-on state :remote2)"
      },
      {
        "lineNumber": 2055,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp pyu-scored 0)"
      },
      {
        "lineNumber": 2056,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp eli1)"
      },
      {
        "lineNumber": 2057,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp \"Hedge Fund\")"
      },
      {
        "lineNumber": 2058,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d (:title (get-ice state :remote2 0)) \"Eli 1.0\") \"Couldn\u0027t swap ICE for Operation\")"
      },
      {
        "lineNumber": 2059,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp \"Jackson Howard\")"
      },
      {
        "lineNumber": 2060,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d (:title (get-ice state :remote2 0)) \"Eli 1.0\") \"Couldn\u0027t swap ICE for Asset\")"
      },
      {
        "lineNumber": 2061,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp \"Prisec\")"
      },
      {
        "lineNumber": 2062,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d (:title (get-ice state :remote2 0)) \"Eli 1.0\") \"Couldn\u0027t swap ICE for Upgrade\")"
      },
      {
        "lineNumber": 2063,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp (find-card \"Project Yagi-Uda\" (:hand (get-corp))))"
      },
      {
        "lineNumber": 2064,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d (:title (get-ice state :remote2 0)) \"Eli 1.0\") \"Couldn\u0027t swap ICE for Agenda\")"
      },
      {
        "lineNumber": 2065,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp \"Eli 2.0\")"
      },
      {
        "lineNumber": 2066,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d (:title (get-ice state :remote2 0)) \"Eli 2.0\") \"Swapped Eli 1.0 for 2.0\"))))"
      },
      {
        "lineNumber": 2067,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Swap cards in server with cards in HQ\""
      },
      {
        "lineNumber": 2068,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2069,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [(qty \"Project Yagi-Uda\" 2)"
      },
      {
        "lineNumber": 2070,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Eli 1.0\""
      },
      {
        "lineNumber": 2071,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Eli 2.0\""
      },
      {
        "lineNumber": 2072,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Jackson Howard\""
      },
      {
        "lineNumber": 2073,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Prisec\""
      },
      {
        "lineNumber": 2074,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Hedge Fund\"]}})"
      },
      {
        "lineNumber": 2075,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/gain state :corp :click 10 :credit 10)"
      },
      {
        "lineNumber": 2076,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/click-draw state :corp 2)"
      },
      {
        "lineNumber": 2077,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Project Yagi-Uda\" \"New remote\")"
      },
      {
        "lineNumber": 2078,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Project Yagi-Uda\" \"New remote\")"
      },
      {
        "lineNumber": 2079,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [pyu (get-content state :remote1 0)]"
      },
      {
        "lineNumber": 2080,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state pyu 6)"
      },
      {
        "lineNumber": 2081,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/score state :corp {:card (refresh pyu)}))"
      },
      {
        "lineNumber": 2082,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 2083,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [pyu-scored (get-scored state :corp 0)"
      },
      {
        "lineNumber": 2084,
        "author": {
          "gitId": "-"
        },
        "content": "            pyu2 (get-content state :remote2 0)]"
      },
      {
        "lineNumber": 2085,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-on state :remote2)"
      },
      {
        "lineNumber": 2086,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp pyu-scored 0)"
      },
      {
        "lineNumber": 2087,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp pyu2)"
      },
      {
        "lineNumber": 2088,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp \"Hedge Fund\")"
      },
      {
        "lineNumber": 2089,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d (:title (get-content state :remote2 0)) \"Project Yagi-Uda\")"
      },
      {
        "lineNumber": 2090,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Couldn\u0027t swap Agenda for Operation\")"
      },
      {
        "lineNumber": 2091,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp \"Eli 2.0\")"
      },
      {
        "lineNumber": 2092,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d (:title (get-content state :remote2 0)) \"Project Yagi-Uda\")"
      },
      {
        "lineNumber": 2093,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Couldn\u0027t swap Agenda for ICE\")"
      },
      {
        "lineNumber": 2094,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp \"Jackson Howard\")"
      },
      {
        "lineNumber": 2095,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d (:title (get-content state :remote2 0)) \"Jackson Howard\")"
      },
      {
        "lineNumber": 2096,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Swapped Agenda for Asset\")"
      },
      {
        "lineNumber": 2097,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp pyu-scored 0)"
      },
      {
        "lineNumber": 2098,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp (get-content state :remote2 0))"
      },
      {
        "lineNumber": 2099,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp \"Prisec\")"
      },
      {
        "lineNumber": 2100,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d (:title (get-content state :remote2 0)) \"Prisec\")"
      },
      {
        "lineNumber": 2101,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Swapped Asset for Upgrade\")"
      },
      {
        "lineNumber": 2102,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp pyu-scored 0)"
      },
      {
        "lineNumber": 2103,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp (get-content state :remote2 0))"
      },
      {
        "lineNumber": 2104,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp (find-card \"Project Yagi-Uda\" (:hand (get-corp))))"
      },
      {
        "lineNumber": 2105,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d (:title (get-content state :remote2 0)) \"Project Yagi-Uda\")"
      },
      {
        "lineNumber": 2106,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Swapped Upgrade for Agenda\"))))"
      },
      {
        "lineNumber": 2107,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Cancel swapping at different stages\""
      },
      {
        "lineNumber": 2108,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2109,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Project Yagi-Uda\""
      },
      {
        "lineNumber": 2110,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Eli 1.0\""
      },
      {
        "lineNumber": 2111,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Eli 2.0\" ]}})"
      },
      {
        "lineNumber": 2112,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/gain state :corp :click 10 :credit 10)"
      },
      {
        "lineNumber": 2113,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Project Yagi-Uda\" \"New remote\")"
      },
      {
        "lineNumber": 2114,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Eli 1.0\" \"New remote\")"
      },
      {
        "lineNumber": 2115,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [pyu (get-content state :remote1 0)]"
      },
      {
        "lineNumber": 2116,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state pyu 4)"
      },
      {
        "lineNumber": 2117,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/score state :corp {:card (refresh pyu)}))"
      },
      {
        "lineNumber": 2118,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 2119,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [pyu-scored (get-scored state :corp 0)"
      },
      {
        "lineNumber": 2120,
        "author": {
          "gitId": "-"
        },
        "content": "            eli1 (get-ice state :remote2 0)]"
      },
      {
        "lineNumber": 2121,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-on state :remote2)"
      },
      {
        "lineNumber": 2122,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 1 (get-counters (refresh pyu-scored) :agenda)) \"Yagi-Uda should have a counter to start with\")"
      },
      {
        "lineNumber": 2123,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp pyu-scored 0)"
      },
      {
        "lineNumber": 2124,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 0 (get-counters (refresh pyu-scored) :agenda)) \"Using Yagi-Uda should remove counter\")"
      },
      {
        "lineNumber": 2125,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :corp \"Done\")"
      },
      {
        "lineNumber": 2126,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 1 (get-counters (refresh pyu-scored) :agenda)) \"Cancelling during first selection should bring back counter\")"
      },
      {
        "lineNumber": 2127,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :corp pyu-scored 0)"
      },
      {
        "lineNumber": 2128,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp eli1)"
      },
      {
        "lineNumber": 2129,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :corp \"Done\")"
      },
      {
        "lineNumber": 2130,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 1 (get-counters (refresh pyu-scored) :agenda)) \"Cancelling during second selection should bring back counter\")))))"
      },
      {
        "lineNumber": 2131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2132,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest puppet-master"
      },
      {
        "lineNumber": 2133,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Puppet Master - game progresses if no valid targets. Issue #1661."
      },
      {
        "lineNumber": 2134,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2135,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Puppet Master\"]}})"
      },
      {
        "lineNumber": 2136,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Puppet Master\")"
      },
      {
        "lineNumber": 2137,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 2138,
        "author": {
          "gitId": "-"
        },
        "content": "    (run-empty-server state :archives)"
      },
      {
        "lineNumber": 2139,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :corp \"Done\")"
      },
      {
        "lineNumber": 2140,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (empty? (:prompt (get-runner))) \"Runner\u0027s waiting prompt resolved\")))"
      },
      {
        "lineNumber": 2141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2142,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest quantum-predictive-model"
      },
      {
        "lineNumber": 2143,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Quantum Predictive Model"
      },
      {
        "lineNumber": 2144,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2145,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Quantum Predictive Model\" 4)]}})"
      },
      {
        "lineNumber": 2146,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Set up\""
      },
      {
        "lineNumber": 2147,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :corp [\"Quantum Predictive Model\" \"Quantum Predictive Model\"])"
      },
      {
        "lineNumber": 2148,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Quantum Predictive Model\" \"New remote\")"
      },
      {
        "lineNumber": 2149,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Quantum Predictive Model\" \"New remote\")"
      },
      {
        "lineNumber": 2150,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp))"
      },
      {
        "lineNumber": 2151,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Access installed with no tag\""
      },
      {
        "lineNumber": 2152,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state :remote1)"
      },
      {
        "lineNumber": 2153,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 2154,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 2155,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:agenda-point (get-runner))) \"Runner should steal\"))"
      },
      {
        "lineNumber": 2156,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Access R\u0026D with no tag\""
      },
      {
        "lineNumber": 2157,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state :rd)"
      },
      {
        "lineNumber": 2158,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 2159,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 2160,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:agenda-point (get-runner))) \"Runner should steal\"))"
      },
      {
        "lineNumber": 2161,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain-tags state :runner 1)"
      },
      {
        "lineNumber": 2162,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Access intalled with tag\""
      },
      {
        "lineNumber": 2163,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state :remote2)"
      },
      {
        "lineNumber": 2164,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 2165,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"OK\") ;; this is now a prompt that QPM was added to Corp score area"
      },
      {
        "lineNumber": 2166,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:agenda-point (get-runner))) \"Runner should not steal\")"
      },
      {
        "lineNumber": 2167,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:agenda-point (get-corp))) \"Corp should score\"))"
      },
      {
        "lineNumber": 2168,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Access R\u0026D with tag\""
      },
      {
        "lineNumber": 2169,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state :rd)"
      },
      {
        "lineNumber": 2170,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 2171,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"OK\")"
      },
      {
        "lineNumber": 2172,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:agenda-point (get-runner))) \"Runner should not steal\")"
      },
      {
        "lineNumber": 2173,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:agenda-point (get-corp))) \"Corp should score\"))"
      },
      {
        "lineNumber": 2174,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (zero? (count (:deck (get-corp)))))))"
      },
      {
        "lineNumber": 2175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2176,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest rebranding-team"
      },
      {
        "lineNumber": 2177,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Rebranding Team"
      },
      {
        "lineNumber": 2178,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2179,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Rebranding Team\" \"Launch Campaign\" \"City Surveillance\""
      },
      {
        "lineNumber": 2180,
        "author": {
          "gitId": "-"
        },
        "content": "                             \"Jackson Howard\" \"Museum of History\" \"Advanced Assembly Lines\"]}})"
      },
      {
        "lineNumber": 2181,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Rebranding Team\")"
      },
      {
        "lineNumber": 2182,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/click-draw state :runner 1)"
      },
      {
        "lineNumber": 2183,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (has-subtype? (find-card \"Advanced Assembly Lines\" (:hand (get-corp))) \"Advertisement\"))"
      },
      {
        "lineNumber": 2184,
        "author": {
          "gitId": "-"
        },
        "content": "    ; #2608 part 2 - retain Advertisement always"
      },
      {
        "lineNumber": 2185,
        "author": {
          "gitId": "-"
        },
        "content": "    (trash-from-hand state :corp \"Advanced Assembly Lines\")"
      },
      {
        "lineNumber": 2186,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (has-subtype? (find-card \"Advanced Assembly Lines\" (:discard (get-corp))) \"Advertisement\"))"
      },
      {
        "lineNumber": 2187,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (has-subtype? (find-card \"Launch Campaign\" (:hand (get-corp))) \"Advertisement\"))"
      },
      {
        "lineNumber": 2188,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (has-subtype? (find-card \"City Surveillance\" (:hand (get-corp))) \"Advertisement\"))"
      },
      {
        "lineNumber": 2189,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (has-subtype? (find-card \"Jackson Howard\" (:hand (get-corp))) \"Advertisement\"))"
      },
      {
        "lineNumber": 2190,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (has-subtype? (find-card \"Jackson Howard\" (:hand (get-corp))) \"Executive\"))"
      },
      {
        "lineNumber": 2191,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (has-subtype? (find-card \"Museum of History\" (:hand (get-corp))) \"Advertisement\"))"
      },
      {
        "lineNumber": 2192,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (has-subtype? (find-card \"Museum of History\" (:hand (get-corp))) \"Alliance\"))"
      },
      {
        "lineNumber": 2193,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (has-subtype? (find-card \"Museum of History\" (:hand (get-corp))) \"Ritzy\"))"
      },
      {
        "lineNumber": 2194,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/move state :corp (find-card \"Rebranding Team\" (:scored (get-corp))) :deck)"
      },
      {
        "lineNumber": 2195,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (has-subtype? (find-card \"Launch Campaign\" (:hand (get-corp))) \"Advertisement\"))"
      },
      {
        "lineNumber": 2196,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (not (has-subtype? (find-card \"Advanced Assembly Lines\" (:discard (get-corp))) \"Advertisement\")))"
      },
      {
        "lineNumber": 2197,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (not (has-subtype? (find-card \"City Surveillance\" (:hand (get-corp))) \"Advertisement\")))"
      },
      {
        "lineNumber": 2198,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (not (has-subtype? (find-card \"Jackson Howard\" (:hand (get-corp))) \"Advertisement\")))"
      },
      {
        "lineNumber": 2199,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (has-subtype? (find-card \"Jackson Howard\" (:hand (get-corp))) \"Executive\"))"
      },
      {
        "lineNumber": 2200,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (not (has-subtype? (find-card \"Museum of History\" (:hand (get-corp))) \"Advertisement\")))"
      },
      {
        "lineNumber": 2201,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (has-subtype? (find-card \"Museum of History\" (:hand (get-corp))) \"Alliance\"))"
      },
      {
        "lineNumber": 2202,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (has-subtype? (find-card \"Museum of History\" (:hand (get-corp))) \"Ritzy\"))))"
      },
      {
        "lineNumber": 2203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2204,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest reeducation"
      },
      {
        "lineNumber": 2205,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Reeducation"
      },
      {
        "lineNumber": 2206,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Simple test\""
      },
      {
        "lineNumber": 2207,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2208,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Reeducation\" \"Sweeps Week\" \"Hedge Fund\""
      },
      {
        "lineNumber": 2209,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Jackson Howard\" \"Gutenberg\"]}"
      },
      {
        "lineNumber": 2210,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:deck [\"Self-modifying Code\" \"Clone Chip\""
      },
      {
        "lineNumber": 2211,
        "author": {
          "gitId": "-"
        },
        "content": "                                 \"Corroder\" \"Sure Gamble\" \"Desperado\"]}})"
      },
      {
        "lineNumber": 2212,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :corp [\"Reeducation\" \"Sweeps Week\"])"
      },
      {
        "lineNumber": 2213,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :runner [\"Self-modifying Code\"])"
      },
      {
        "lineNumber": 2214,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Reeducation\")"
      },
      {
        "lineNumber": 2215,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (prompt-is-type? state :runner :waiting) \"Runner has wait prompt\")"
      },
      {
        "lineNumber": 2216,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (get-in @state [:corp :hand]))))"
      },
      {
        "lineNumber": 2217,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (get-in @state [:runner :hand]))))"
      },
      {
        "lineNumber": 2218,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp (find-card \"Sweeps Week\" (:hand (get-corp)))) ; put Sweeps Week at bottom of R\u0026D"
      },
      {
        "lineNumber": 2219,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Done\") ; finished selecting cards"
      },
      {
        "lineNumber": 2220,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Done\") ; corp prompt for Done/Start Over"
      },
      {
        "lineNumber": 2221,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d \"Sweeps Week\" (:title (last (:deck (get-corp))))))"
      },
      {
        "lineNumber": 2222,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d \"Self-modifying Code\" (:title (last (:deck (get-runner))))))"
      },
      {
        "lineNumber": 2223,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (get-in @state [:corp :hand]))))"
      },
      {
        "lineNumber": 2224,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (count (get-in @state [:runner :hand]))))))"
      },
      {
        "lineNumber": 2225,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Extra cards\""
      },
      {
        "lineNumber": 2226,
        "author": {
          "gitId": "-"
        },
        "content": "    ;; If Corp is adding more cards in HQ than Runner has in their Grip, Runner"
      },
      {
        "lineNumber": 2227,
        "author": {
          "gitId": "-"
        },
        "content": "    ;; is not \u0027able\u0027 to resolve the effect and doesn\u0027t have to add to bottom of Stack"
      },
      {
        "lineNumber": 2228,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2229,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Reeducation\" \"Sweeps Week\" \"Hedge Fund\""
      },
      {
        "lineNumber": 2230,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Jackson Howard\" \"Gutenberg\"]}"
      },
      {
        "lineNumber": 2231,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:deck [\"Self-modifying Code\" \"Clone Chip\""
      },
      {
        "lineNumber": 2232,
        "author": {
          "gitId": "-"
        },
        "content": "                                 \"Corroder\" \"Sure Gamble\" \"Desperado\"]}})"
      },
      {
        "lineNumber": 2233,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :corp [\"Reeducation\" \"Sweeps Week\" \"Hedge Fund\"])"
      },
      {
        "lineNumber": 2234,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :runner [\"Self-modifying Code\"])"
      },
      {
        "lineNumber": 2235,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Reeducation\")"
      },
      {
        "lineNumber": 2236,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (prompt-is-type? state :runner :waiting) \"Runner has wait prompt\")"
      },
      {
        "lineNumber": 2237,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (count (:hand (get-corp)))))"
      },
      {
        "lineNumber": 2238,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:hand (get-runner)))))"
      },
      {
        "lineNumber": 2239,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp (find-card \"Sweeps Week\" (:hand (get-corp))))"
      },
      {
        "lineNumber": 2240,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp (find-card \"Hedge Fund\" (:hand (get-corp)))) ; this is the bottom card of R\u0026D"
      },
      {
        "lineNumber": 2241,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Done\") ; finished selecting cards"
      },
      {
        "lineNumber": 2242,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Done\") ; corp prompt for Done/Start Over"
      },
      {
        "lineNumber": 2243,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d \"Hedge Fund\" (:title (last (:deck (get-corp))))))"
      },
      {
        "lineNumber": 2244,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d \"Sweeps Week\" (:title (last (butlast (:deck (get-corp)))))))"
      },
      {
        "lineNumber": 2245,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d \"Self-modifying Code\" (:title (first (:hand (get-runner))))))"
      },
      {
        "lineNumber": 2246,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (count (:hand (get-corp)))))"
      },
      {
        "lineNumber": 2247,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:hand (get-runner))))))))"
      },
      {
        "lineNumber": 2248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2249,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest remastered-edition"
      },
      {
        "lineNumber": 2250,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Remastered Edition"
      },
      {
        "lineNumber": 2251,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2252,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Remastered Edition\" 2) (qty \"Enigma\" 1)]}})"
      },
      {
        "lineNumber": 2253,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :corp :click 3)"
      },
      {
        "lineNumber": 2254,
        "author": {
          "gitId": "-"
        },
        "content": "    (letfn [(try-place [from to]"
      },
      {
        "lineNumber": 2255,
        "author": {
          "gitId": "-"
        },
        "content": "              (card-ability state :corp (refresh from) 0)"
      },
      {
        "lineNumber": 2256,
        "author": {
          "gitId": "-"
        },
        "content": "              (click-card state :corp (refresh to)))"
      },
      {
        "lineNumber": 2257,
        "author": {
          "gitId": "-"
        },
        "content": "            (place-counter [from to]"
      },
      {
        "lineNumber": 2258,
        "author": {
          "gitId": "-"
        },
        "content": "              (try-place from to)"
      },
      {
        "lineNumber": 2259,
        "author": {
          "gitId": "-"
        },
        "content": "              (is (zero? (get-counters (refresh from) :agenda))"
      },
      {
        "lineNumber": 2260,
        "author": {
          "gitId": "-"
        },
        "content": "                  (str (:title from) \" token was used on \" (:title to)))"
      },
      {
        "lineNumber": 2261,
        "author": {
          "gitId": "-"
        },
        "content": "              (is (\u003d 1 (get-counters (refresh to) :advancement))"
      },
      {
        "lineNumber": 2262,
        "author": {
          "gitId": "-"
        },
        "content": "                  (str \"Advancement token placed on \" (:title to))))]"
      },
      {
        "lineNumber": 2263,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Remastered Edition\")"
      },
      {
        "lineNumber": 2264,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Remastered Edition\" \"New remote\")"
      },
      {
        "lineNumber": 2265,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [scored-agenda (get-scored state :corp 0)"
      },
      {
        "lineNumber": 2266,
        "author": {
          "gitId": "-"
        },
        "content": "            installed-agenda (get-content state :remote2 0)]"
      },
      {
        "lineNumber": 2267,
        "author": {
          "gitId": "-"
        },
        "content": "        (place-counter scored-agenda installed-agenda)"
      },
      {
        "lineNumber": 2268,
        "author": {
          "gitId": "-"
        },
        "content": "        (advance state installed-agenda 3)"
      },
      {
        "lineNumber": 2269,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/score state :corp {:card (refresh installed-agenda)}))"
      },
      {
        "lineNumber": 2270,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Enigma\" \"HQ\")"
      },
      {
        "lineNumber": 2271,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [strikeforce (get-scored state :corp 1)"
      },
      {
        "lineNumber": 2272,
        "author": {
          "gitId": "-"
        },
        "content": "            enigma (get-ice state :hq 0)]"
      },
      {
        "lineNumber": 2273,
        "author": {
          "gitId": "-"
        },
        "content": "        (place-counter strikeforce enigma)))))"
      },
      {
        "lineNumber": 2274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2275,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest remote-data-farm"
      },
      {
        "lineNumber": 2276,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Remote Data Farm"
      },
      {
        "lineNumber": 2277,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2278,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Remote Data Farm\"]}})"
      },
      {
        "lineNumber": 2279,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 5 (hand-size :corp)))"
      },
      {
        "lineNumber": 2280,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Remote Data Farm\")"
      },
      {
        "lineNumber": 2281,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 7 (hand-size :corp)))))"
      },
      {
        "lineNumber": 2282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2283,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest remote-enforcement"
      },
      {
        "lineNumber": 2284,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Remote Enforcement - Search R\u0026D for a piece of ice and install it on a remote at no rez cost"
      },
      {
        "lineNumber": 2285,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2286,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Remote Enforcement\" 2)"
      },
      {
        "lineNumber": 2287,
        "author": {
          "gitId": "-"
        },
        "content": "                             \"Archer\""
      },
      {
        "lineNumber": 2288,
        "author": {
          "gitId": "-"
        },
        "content": "                             \"Chiyashi\"]}"
      },
      {
        "lineNumber": 2289,
        "author": {
          "gitId": "-"
        },
        "content": "               :runner {:id \"Reina Roja: Freedom Fighter\"}})"
      },
      {
        "lineNumber": 2290,
        "author": {
          "gitId": "-"
        },
        "content": "    (starting-hand state :corp [\"Remote Enforcement\" \"Remote Enforcement\"])"
      },
      {
        "lineNumber": 2291,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 2 (count (:deck (get-corp)))))"
      },
      {
        "lineNumber": 2292,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Remote Enforcement\")"
      },
      {
        "lineNumber": 2293,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [N (:credit (get-corp))]"
      },
      {
        "lineNumber": 2294,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 2295,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp (find-card \"Chiyashi\" (:deck (get-corp))))"
      },
      {
        "lineNumber": 2296,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"New remote\")"
      },
      {
        "lineNumber": 2297,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (core/rezzed? (get-ice state :remote2 0)) \"Chiyashi was installed rezzed\")"
      },
      {
        "lineNumber": 2298,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d N (:credit (get-corp))) \"Rezzing Chiyashi was free\"))"
      },
      {
        "lineNumber": 2299,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Remote Enforcement\")"
      },
      {
        "lineNumber": 2300,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [N (:credit (get-corp))]"
      },
      {
        "lineNumber": 2301,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 2302,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp (find-card \"Archer\" (:deck (get-corp))))"
      },
      {
        "lineNumber": 2303,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Server 2\")"
      },
      {
        "lineNumber": 2304,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d (dec N) (:credit (get-corp))) \"Installing Archer cost a credit\")"
      },
      {
        "lineNumber": 2305,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (not-empty (:prompt (get-corp))) \"Corp prompted to forfeit an agenda for Archer\")"
      },
      {
        "lineNumber": 2306,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d (dec N) (:credit (get-corp))) \"Rezzing Archer didn\u0027t cost any credits\"))))"
      },
      {
        "lineNumber": 2307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2308,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest research-grant"
      },
      {
        "lineNumber": 2309,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Research Grant"
      },
      {
        "lineNumber": 2310,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Basic test\""
      },
      {
        "lineNumber": 2311,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2312,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [(qty \"Research Grant\" 2)]}})"
      },
      {
        "lineNumber": 2313,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Research Grant\" \"New remote\")"
      },
      {
        "lineNumber": 2314,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Research Grant\")"
      },
      {
        "lineNumber": 2315,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (get-content state :remote1 0))"
      },
      {
        "lineNumber": 2316,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (count (:scored (get-corp)))) \"2 copies of Research Grant scored\")))"
      },
      {
        "lineNumber": 2317,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "  (testing \"Single test\""
      },
      {
        "lineNumber": 2318,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2319,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "      (new-game {:corp {:deck [(qty \"Research Grant\" 1)]}})"
      },
      {
        "lineNumber": 2320,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "      (play-and-score state \"Research Grant\")"
      },
      {
        "lineNumber": 2321,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "      (is (\u003d 1 (count (:scored (get-corp)))) \"1 copy of Research Grant scored\")))"
      },
      {
        "lineNumber": 2322,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "  (testing \"with Team Sponsorship\""
      },
      {
        "lineNumber": 2323,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2324,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "      (new-game {:corp {:deck [(qty \"Research Grant\" 3) (qty \"Team Sponsorship\" 1)]}})"
      },
      {
        "lineNumber": 2325,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "      (play-from-hand state :corp \"Team Sponsorship\" \"New remote\")"
      },
      {
        "lineNumber": 2326,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "      (core/rez state :corp (get-content state :remote1 0))"
      },
      {
        "lineNumber": 2327,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "      (play-and-score state \"Research Grant\")"
      },
      {
        "lineNumber": 2328,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "      (click-card state :corp (find-card \"Research Grant\" (:hand (get-corp))))"
      },
      {
        "lineNumber": 2329,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "      (click-prompt state :corp \"New remote\")"
      },
      {
        "lineNumber": 2330,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "      (click-card state :corp (get-content state :remote3 0))"
      },
      {
        "lineNumber": 2331,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "      (click-card state :corp (find-card \"Research Grant\" (:hand (get-corp))))"
      },
      {
        "lineNumber": 2332,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "      (click-prompt state :corp \"New remote\")"
      },
      {
        "lineNumber": 2333,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "      (click-card state :corp (get-content state :remote4 0))"
      },
      {
        "lineNumber": 2334,
        "author": {
          "gitId": "ChooJeremy"
        },
        "content": "      (is (\u003d 3 (count (:scored (get-corp)))) \"3 copies of Research Grant scored\")))"
      },
      {
        "lineNumber": 2335,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"vs Leela\""
      },
      {
        "lineNumber": 2336,
        "author": {
          "gitId": "-"
        },
        "content": "    ;; Issue #3069"
      },
      {
        "lineNumber": 2337,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2338,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [(qty \"Research Grant\" 2) (qty \"Ice Wall\" 2)]}"
      },
      {
        "lineNumber": 2339,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:id \"Leela Patel: Trained Pragmatist\""
      },
      {
        "lineNumber": 2340,
        "author": {
          "gitId": "-"
        },
        "content": "                          :deck [\"Sure Gamble\"]}})"
      },
      {
        "lineNumber": 2341,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/gain state :corp :click 1)"
      },
      {
        "lineNumber": 2342,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Ice Wall\" \"HQ\")"
      },
      {
        "lineNumber": 2343,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Ice Wall\" \"R\u0026D\")"
      },
      {
        "lineNumber": 2344,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Research Grant\" \"New remote\")"
      },
      {
        "lineNumber": 2345,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Research Grant\")"
      },
      {
        "lineNumber": 2346,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (get-content state :remote1 0))"
      },
      {
        "lineNumber": 2347,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (count (:scored (get-corp)))) \"2 copies of Research Grant scored\")"
      },
      {
        "lineNumber": 2348,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :runner (get-ice state :hq 0))"
      },
      {
        "lineNumber": 2349,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :runner (get-ice state :rd 0))"
      },
      {
        "lineNumber": 2350,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (empty? (:effect-completed @state)) \"All score and Leela effects resolved\"))))"
      },
      {
        "lineNumber": 2351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2352,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest restructured-datapool"
      },
      {
        "lineNumber": 2353,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Restructured Datapool"
      },
      {
        "lineNumber": 2354,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2355,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Restructured Datapool\"]}})"
      },
      {
        "lineNumber": 2356,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (zero? (count-tags state)) \"Runner should start with no tags\")"
      },
      {
        "lineNumber": 2357,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Restructured Datapool\")"
      },
      {
        "lineNumber": 2358,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [rd-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 2359,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp rd-scored 0)"
      },
      {
        "lineNumber": 2360,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"0\")"
      },
      {
        "lineNumber": 2361,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"0\")"
      },
      {
        "lineNumber": 2362,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count-tags state)) \"Runner should gain a tag from Restructured Datapool ability\"))))"
      },
      {
        "lineNumber": 2363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2364,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest sds-drone-deployment"
      },
      {
        "lineNumber": 2365,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; SDS Drone Deployment"
      },
      {
        "lineNumber": 2366,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Corp score, a program is installed\""
      },
      {
        "lineNumber": 2367,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2368,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:hand [\"SDS Drone Deployment\"]}"
      },
      {
        "lineNumber": 2369,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:hand [\"Cache\"]}})"
      },
      {
        "lineNumber": 2370,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 2371,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"Cache\")"
      },
      {
        "lineNumber": 2372,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2373,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"SDS Drone Deployment\")"
      },
      {
        "lineNumber": 2374,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [cache (get-program state 0)]"
      },
      {
        "lineNumber": 2375,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (prompt-is-type? state :corp :select) \"Corp must choose an installed program\")"
      },
      {
        "lineNumber": 2376,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp \"Cache\")"
      },
      {
        "lineNumber": 2377,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (nil? (refresh cache)) \"Cache is trashed\")"
      },
      {
        "lineNumber": 2378,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (find-card \"Cache\" (:discard (get-runner))) \"Cache is trashed\"))))"
      },
      {
        "lineNumber": 2379,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Corp score, no program is installed\""
      },
      {
        "lineNumber": 2380,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2381,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:hand [\"SDS Drone Deployment\"]}})"
      },
      {
        "lineNumber": 2382,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"SDS Drone Deployment\")"
      },
      {
        "lineNumber": 2383,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (nil? (seq (:prompt (get-corp)))) \"Corp doesn\u0027t get any choices when runner has no installed programs\")))"
      },
      {
        "lineNumber": 2384,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Runner steal, a program is installed\""
      },
      {
        "lineNumber": 2385,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2386,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:hand [\"SDS Drone Deployment\"]}"
      },
      {
        "lineNumber": 2387,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:hand [\"Cache\"]}})"
      },
      {
        "lineNumber": 2388,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"SDS Drone Deployment\" \"New remote\")"
      },
      {
        "lineNumber": 2389,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 2390,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"Cache\")"
      },
      {
        "lineNumber": 2391,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-empty-server state \"Remote 1\")"
      },
      {
        "lineNumber": 2392,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [cache (get-program state 0)]"
      },
      {
        "lineNumber": 2393,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d [\"Pay to steal\" \"No action\"] (:choices (prompt-map :runner))) \"Runner should not be able to steal\")"
      },
      {
        "lineNumber": 2394,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :runner \"Pay to steal\")"
      },
      {
        "lineNumber": 2395,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :runner \"Cache\")"
      },
      {
        "lineNumber": 2396,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (nil? (refresh cache)) \"Cache is trashed\")"
      },
      {
        "lineNumber": 2397,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (find-card \"Cache\" (:discard (get-runner))) \"Cache is trashed\")"
      },
      {
        "lineNumber": 2398,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (find-card \"SDS Drone Deployment\" (:scored (get-runner)))))))"
      },
      {
        "lineNumber": 2399,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Runner steal, no program is installed\""
      },
      {
        "lineNumber": 2400,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2401,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:hand [\"SDS Drone Deployment\"]}})"
      },
      {
        "lineNumber": 2402,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"SDS Drone Deployment\" \"New remote\")"
      },
      {
        "lineNumber": 2403,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 2404,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-empty-server state \"Remote 1\")"
      },
      {
        "lineNumber": 2405,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d [\"No action\"] (:choices (prompt-map :runner))) \"Runner should not be able to steal\"))))"
      },
      {
        "lineNumber": 2406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2407,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest self-destruct-chips"
      },
      {
        "lineNumber": 2408,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Self-Destruct Chips"
      },
      {
        "lineNumber": 2409,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2410,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Self-Destruct Chips\"]}})"
      },
      {
        "lineNumber": 2411,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 5 (hand-size :runner)) \"Runner\u0027s hand size starts at 5\")"
      },
      {
        "lineNumber": 2412,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Self-Destruct Chips\")"
      },
      {
        "lineNumber": 2413,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 4 (hand-size :runner)) \"By scoring Self-Destruct Chips, Runner\u0027s hand size is reduced by 1\")))"
      },
      {
        "lineNumber": 2414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2415,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest sensor-net-activation"
      },
      {
        "lineNumber": 2416,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Sensor Net Activation"
      },
      {
        "lineNumber": 2417,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2418,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Sensor Net Activation\" 2) \"Enforcer 1.0\" \"Ash 2X3ZB9CY\"]}})"
      },
      {
        "lineNumber": 2419,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Enforcer 1.0\" \"HQ\")"
      },
      {
        "lineNumber": 2420,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Sensor Net Activation\")"
      },
      {
        "lineNumber": 2421,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [sna-scored (get-scored state :corp 0)"
      },
      {
        "lineNumber": 2422,
        "author": {
          "gitId": "-"
        },
        "content": "          enf (get-ice state :hq 0)]"
      },
      {
        "lineNumber": 2423,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (get-counters (refresh sna-scored) :agenda)) \"Should start with 1 agenda counter\")"
      },
      {
        "lineNumber": 2424,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (not (:rezzed (refresh enf))) \"Enforcer 1.0 should start derezzed\")"
      },
      {
        "lineNumber": 2425,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp (refresh sna-scored) 0)"
      },
      {
        "lineNumber": 2426,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp enf)"
      },
      {
        "lineNumber": 2427,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (:rezzed (refresh enf)) \"Enforcer 1.0 should be rezzed\")"
      },
      {
        "lineNumber": 2428,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:scored (get-corp)))) \"Enforcer 1.0 should be rezzed without forfeiting agenda\")"
      },
      {
        "lineNumber": 2429,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 2430,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (not (:rezzed (refresh enf))) \"Enforcer 1.0 should be derezzed\"))"
      },
      {
        "lineNumber": 2431,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 2432,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :runner)"
      },
      {
        "lineNumber": 2433,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Ash 2X3ZB9CY\" \"New remote\")"
      },
      {
        "lineNumber": 2434,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Sensor Net Activation\")"
      },
      {
        "lineNumber": 2435,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [sna-scored (get-scored state :corp 1)"
      },
      {
        "lineNumber": 2436,
        "author": {
          "gitId": "-"
        },
        "content": "          ash (get-content state :remote2 0)]"
      },
      {
        "lineNumber": 2437,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (get-counters (refresh sna-scored) :agenda)) \"Should start with 1 agenda counter\")"
      },
      {
        "lineNumber": 2438,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (not (:rezzed (refresh ash))) \"Ash should start derezzed\")"
      },
      {
        "lineNumber": 2439,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :corp (refresh sna-scored) 0)"
      },
      {
        "lineNumber": 2440,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp ash)"
      },
      {
        "lineNumber": 2441,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (:rezzed (refresh ash)) \"Ash should be rezzed\")"
      },
      {
        "lineNumber": 2442,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 2443,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (not (:rezzed (refresh ash))) \"Ash should be derezzed\"))))"
      },
      {
        "lineNumber": 2444,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2445,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest sentinel-defense-program"
      },
      {
        "lineNumber": 2446,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Sentinel Defense Program - Doesn\u0027t fire if brain damage is prevented"
      },
      {
        "lineNumber": 2447,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2448,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Sentinel Defense Program\" \"Viktor 1.0\"]}"
      },
      {
        "lineNumber": 2449,
        "author": {
          "gitId": "-"
        },
        "content": "               :runner {:deck [\"Feedback Filter\" (qty \"Sure Gamble\" 3)]}})"
      },
      {
        "lineNumber": 2450,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Sentinel Defense Program\")"
      },
      {
        "lineNumber": 2451,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Viktor 1.0\" \"HQ\")"
      },
      {
        "lineNumber": 2452,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 2453,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :runner \"Feedback Filter\")"
      },
      {
        "lineNumber": 2454,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [viktor (get-ice state :hq 0)"
      },
      {
        "lineNumber": 2455,
        "author": {
          "gitId": "-"
        },
        "content": "          ff (get-hardware state 0)]"
      },
      {
        "lineNumber": 2456,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state \"HQ\")"
      },
      {
        "lineNumber": 2457,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/rez state :corp viktor)"
      },
      {
        "lineNumber": 2458,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-subroutine state :corp viktor 0)"
      },
      {
        "lineNumber": 2459,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Done\")  ;; Don\u0027t prevent the brain damage"
      },
      {
        "lineNumber": 2460,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:discard (get-runner)))))"
      },
      {
        "lineNumber": 2461,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:brain-damage (get-runner))))"
      },
      {
        "lineNumber": 2462,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Done\")  ;; So we take the net, but don\u0027t prevent it either"
      },
      {
        "lineNumber": 2463,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (count (:discard (get-runner)))))"
      },
      {
        "lineNumber": 2464,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-subroutine state :corp viktor 0)"
      },
      {
        "lineNumber": 2465,
        "author": {
          "gitId": "-"
        },
        "content": "      (card-ability state :runner ff 1)  ;; Prevent the brain damage this time"
      },
      {
        "lineNumber": 2466,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Done\")"
      },
      {
        "lineNumber": 2467,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 3 (count (:discard (get-runner)))) \"Feedback filter trashed, didn\u0027t take another net damage\")"
      },
      {
        "lineNumber": 2468,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:brain-damage (get-runner)))))))"
      },
      {
        "lineNumber": 2469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2470,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest show-of-force"
      },
      {
        "lineNumber": 2471,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Show of Force"
      },
      {
        "lineNumber": 2472,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2473,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Show of Force\"]}})"
      },
      {
        "lineNumber": 2474,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 3 (count (:hand (get-runner)))) \"Runner should start with 3 cards in hand\")"
      },
      {
        "lineNumber": 2475,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Show of Force\")"
      },
      {
        "lineNumber": 2476,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (count (:hand (get-runner)))) \"Runner should have 1 card in hand\")"
      },
      {
        "lineNumber": 2477,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 2 (count (:discard (get-runner)))) \"Runner should have discarded 2 cards\")))"
      },
      {
        "lineNumber": 2478,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2479,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest ssl-endorsement"
      },
      {
        "lineNumber": 2480,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; SSL Endorsement"
      },
      {
        "lineNumber": 2481,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"gain credits when in corp score area before turn begins\""
      },
      {
        "lineNumber": 2482,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2483,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"SSL Endorsement\"]}})"
      },
      {
        "lineNumber": 2484,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"SSL Endorsement\")"
      },
      {
        "lineNumber": 2485,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2486,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (not-empty (:prompt (get-corp))) \"Corp prompted to take credits\")"
      },
      {
        "lineNumber": 2487,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 5 (:credit (get-corp))) \"Corp starts with 5 credits\")"
      },
      {
        "lineNumber": 2488,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 2489,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 8 (:credit (get-corp))) \"Corp gains 3 credits\")"
      },
      {
        "lineNumber": 2490,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2491,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 8 (:credit (get-corp))) \"Corp starts with 8 credits\")"
      },
      {
        "lineNumber": 2492,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"No\")"
      },
      {
        "lineNumber": 2493,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 8 (:credit (get-corp))) \"Corp doesn\u0027t gain 3 credits\")"
      },
      {
        "lineNumber": 2494,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2495,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 8 (:credit (get-corp))) \"Corp starts with 8 credits\")"
      },
      {
        "lineNumber": 2496,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 2497,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 11 (:credit (get-corp))) \"Corp gains 3 credits\")"
      },
      {
        "lineNumber": 2498,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2499,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 11 (:credit (get-corp))) \"Corp starts with 11 credits\")"
      },
      {
        "lineNumber": 2500,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 2501,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 14 (:credit (get-corp))) \"Corp gains 3 credits\")"
      },
      {
        "lineNumber": 2502,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2503,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (empty? (:prompt (get-corp))) \"Not prompted when out of money\")))"
      },
      {
        "lineNumber": 2504,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"gain credits when in runner score area before turn begins\""
      },
      {
        "lineNumber": 2505,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2506,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"SSL Endorsement\"]}})"
      },
      {
        "lineNumber": 2507,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"SSL Endorsement\" \"New remote\")"
      },
      {
        "lineNumber": 2508,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 2509,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state \"Server 1\")"
      },
      {
        "lineNumber": 2510,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 2511,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 2512,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2513,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (not-empty (:prompt (get-corp))) \"Corp prompted to take credits\")"
      },
      {
        "lineNumber": 2514,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 7 (:credit (get-corp))) \"Corp starts with 7 credits\")"
      },
      {
        "lineNumber": 2515,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 2516,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 10 (:credit (get-corp))) \"Corp gains 3 credits\")"
      },
      {
        "lineNumber": 2517,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2518,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 10 (:credit (get-corp))) \"Corp starts with 10 credits\")"
      },
      {
        "lineNumber": 2519,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"No\")"
      },
      {
        "lineNumber": 2520,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 10 (:credit (get-corp))) \"Corp doesn\u0027t gain 3 credits\")"
      },
      {
        "lineNumber": 2521,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2522,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 10 (:credit (get-corp))) \"Corp starts with 10 credits\")"
      },
      {
        "lineNumber": 2523,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 2524,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 13 (:credit (get-corp))) \"Corp gains 3 credits\")"
      },
      {
        "lineNumber": 2525,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2526,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 13 (:credit (get-corp))) \"Corp starts with 13 credits\")"
      },
      {
        "lineNumber": 2527,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 2528,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 16 (:credit (get-corp))) \"Corp gains 3 credits\")"
      },
      {
        "lineNumber": 2529,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2530,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (empty? (:prompt (get-corp))) \"Not prompted when out of money\")))"
      },
      {
        "lineNumber": 2531,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"register event when agenda swapped with Turntable\""
      },
      {
        "lineNumber": 2532,
        "author": {
          "gitId": "-"
        },
        "content": "    ;; Regression test for #3114"
      },
      {
        "lineNumber": 2533,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2534,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"SSL Endorsement\" \"Breaking News\"]}"
      },
      {
        "lineNumber": 2535,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:deck [\"Turntable\"]}})"
      },
      {
        "lineNumber": 2536,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Breaking News\" \"New remote\")"
      },
      {
        "lineNumber": 2537,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"SSL Endorsement\")"
      },
      {
        "lineNumber": 2538,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 2539,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"Turntable\")"
      },
      {
        "lineNumber": 2540,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state \"Server 1\")"
      },
      {
        "lineNumber": 2541,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 2542,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 2543,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Yes\")"
      },
      {
        "lineNumber": 2544,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :runner (find-card \"SSL Endorsement\" (:scored (get-corp))))  ;; Swap BN with SSL"
      },
      {
        "lineNumber": 2545,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2546,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (not-empty (:prompt (get-corp))) \"Corp prompted to take credits\")"
      },
      {
        "lineNumber": 2547,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 6 (:credit (get-corp))) \"Corp starts with 7 credits\")"
      },
      {
        "lineNumber": 2548,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 2549,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 9 (:credit (get-corp))) \"Corp gains 3 credits from Turntable\u0027d SSL Endorsement\")))"
      },
      {
        "lineNumber": 2550,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"don\u0027t double register event when agenda is swapped\""
      },
      {
        "lineNumber": 2551,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2552,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"SSL Endorsement\" \"Breaking News\""
      },
      {
        "lineNumber": 2553,
        "author": {
          "gitId": "-"
        },
        "content": "                               \"Exchange of Information\"]}})"
      },
      {
        "lineNumber": 2554,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"SSL Endorsement\" \"New remote\")"
      },
      {
        "lineNumber": 2555,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Breaking News\")"
      },
      {
        "lineNumber": 2556,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 2557,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state \"Server 1\")"
      },
      {
        "lineNumber": 2558,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 2559,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 2560,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2561,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (not-empty (:prompt (get-corp))) \"Corp prompted to take credits\")"
      },
      {
        "lineNumber": 2562,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 6 (:credit (get-corp))) \"Corp starts with 6 credits\")"
      },
      {
        "lineNumber": 2563,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 2564,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 9 (:credit (get-corp))) \"Corp gains 3 credits\")"
      },
      {
        "lineNumber": 2565,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/gain-tags state :runner 1)"
      },
      {
        "lineNumber": 2566,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Exchange of Information\")"
      },
      {
        "lineNumber": 2567,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (find-card \"SSL Endorsement\" (:scored (get-runner))))"
      },
      {
        "lineNumber": 2568,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (find-card \"Breaking News\" (:scored (get-corp))))"
      },
      {
        "lineNumber": 2569,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2570,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 9 (:credit (get-corp))) \"Corp starts with 9 credits\")"
      },
      {
        "lineNumber": 2571,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"No\")"
      },
      {
        "lineNumber": 2572,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (empty? (:prompt (get-corp))) \"Not double prompted for credits\")"
      },
      {
        "lineNumber": 2573,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 9 (:credit (get-corp))) \"Corp doesn\u0027t gain 3 credits\")"
      },
      {
        "lineNumber": 2574,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2575,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 9 (:credit (get-corp))) \"Corp starts with 9 credits\")"
      },
      {
        "lineNumber": 2576,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 2577,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 12 (:credit (get-corp))) \"Corp gains 3 credits\")"
      },
      {
        "lineNumber": 2578,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2579,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 12 (:credit (get-corp))) \"Corp starts with 12 credits\")"
      },
      {
        "lineNumber": 2580,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 2581,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 15 (:credit (get-corp))) \"Corp gains 3 credits\")"
      },
      {
        "lineNumber": 2582,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2583,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (empty? (:prompt (get-corp))) \"Not prompted when out of money\"))))"
      },
      {
        "lineNumber": 2584,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2585,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest standoff"
      },
      {
        "lineNumber": 2586,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Standoff"
      },
      {
        "lineNumber": 2587,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Runner declines first\""
      },
      {
        "lineNumber": 2588,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2589,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Standoff\" \"Ice Wall\" \"News Team\"]}"
      },
      {
        "lineNumber": 2590,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:deck [\"Cache\"]}})"
      },
      {
        "lineNumber": 2591,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :corp [\"Standoff\" \"Ice Wall\"])"
      },
      {
        "lineNumber": 2592,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Ice Wall\" \"HQ\")"
      },
      {
        "lineNumber": 2593,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 2594,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"Cache\")"
      },
      {
        "lineNumber": 2595,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2596,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Standoff\")"
      },
      {
        "lineNumber": 2597,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :corp [])"
      },
      {
        "lineNumber": 2598,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (-\u003e (get-runner) :discard count)) \"Runner should have no cards in Heap\")"
      },
      {
        "lineNumber": 2599,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :runner (get-program state 0))"
      },
      {
        "lineNumber": 2600,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (-\u003e (get-runner) :discard count)) \"Runner should now have 1 card in Heap\")"
      },
      {
        "lineNumber": 2601,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (-\u003e (get-corp) :discard count)) \"Corp should have no cards in Archives\")"
      },
      {
        "lineNumber": 2602,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (get-ice state :hq 0))"
      },
      {
        "lineNumber": 2603,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (-\u003e (get-corp) :discard count)) \"Corp should now have 1 card in Archives\")"
      },
      {
        "lineNumber": 2604,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (-\u003e (get-corp) :hand count)) \"Corp should have no cards in hand\")"
      },
      {
        "lineNumber": 2605,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [credits (:credit (get-corp))]"
      },
      {
        "lineNumber": 2606,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :runner \"Done\")"
      },
      {
        "lineNumber": 2607,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d (+ credits 5) (:credit (get-corp))) \"Corp should gain 5 credits from Runner declining to trash an installed card\")"
      },
      {
        "lineNumber": 2608,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 1 (-\u003e (get-corp) :hand count)) \"Corp should draw a card from Runner declining to trash an installed card\"))))"
      },
      {
        "lineNumber": 2609,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Corp declines first\""
      },
      {
        "lineNumber": 2610,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2611,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Standoff\" \"Ice Wall\" \"News Team\"]}"
      },
      {
        "lineNumber": 2612,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:deck [\"Cache\" \"Cache\"]}})"
      },
      {
        "lineNumber": 2613,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :corp [\"Standoff\" \"Ice Wall\"])"
      },
      {
        "lineNumber": 2614,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Ice Wall\" \"HQ\")"
      },
      {
        "lineNumber": 2615,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 2616,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"Cache\")"
      },
      {
        "lineNumber": 2617,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"Cache\")"
      },
      {
        "lineNumber": 2618,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2619,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Standoff\")"
      },
      {
        "lineNumber": 2620,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :corp [])"
      },
      {
        "lineNumber": 2621,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (-\u003e (get-runner) :discard count)) \"Runner should have no cards in Heap\")"
      },
      {
        "lineNumber": 2622,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :runner (get-program state 0))"
      },
      {
        "lineNumber": 2623,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (-\u003e (get-runner) :discard count)) \"Runner should now have 1 card in Heap\")"
      },
      {
        "lineNumber": 2624,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (-\u003e (get-corp) :discard count)) \"Corp should have no cards in Archives\")"
      },
      {
        "lineNumber": 2625,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (get-ice state :hq 0))"
      },
      {
        "lineNumber": 2626,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (-\u003e (get-corp) :discard count)) \"Corp should now have 1 card in Archives\")"
      },
      {
        "lineNumber": 2627,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (-\u003e (get-corp) :hand count)) \"Corp should have no cards in hand\")"
      },
      {
        "lineNumber": 2628,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :runner (get-program state 0))"
      },
      {
        "lineNumber": 2629,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (-\u003e (get-runner) :discard count)) \"Runner should now have 2 cards in Heap\")"
      },
      {
        "lineNumber": 2630,
        "author": {
          "gitId": "-"
        },
        "content": "      (let [credits (:credit (get-corp))]"
      },
      {
        "lineNumber": 2631,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :corp \"Done\")"
      },
      {
        "lineNumber": 2632,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d credits (:credit (get-corp))) \"Corp should gain no credits from declining to trash an installed card\")"
      },
      {
        "lineNumber": 2633,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (-\u003e (get-corp) :hand count)) \"Corp should draw no cards from declining to trash an installed card\")))))"
      },
      {
        "lineNumber": 2634,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2635,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest sting"
      },
      {
        "lineNumber": 2636,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Sting! - do 1 net on score/steal + 1 more net for each sting in the other player\u0027s score"
      },
      {
        "lineNumber": 2637,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Corp score, then Runner steal, then Corp score\""
      },
      {
        "lineNumber": 2638,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2639,
        "author": {
          "gitId": "-"
        },
        "content": "     (new-game {:corp {:deck [(qty \"Sting!\" 3)]}"
      },
      {
        "lineNumber": 2640,
        "author": {
          "gitId": "-"
        },
        "content": "                :runner {:deck [(qty \"Spy Camera\" 5)]}})"
      },
      {
        "lineNumber": 2641,
        "author": {
          "gitId": "-"
        },
        "content": "     (is (\u003d 5 (count (:hand (get-runner)))) \"5 cards in hand to be damaged away\")"
      },
      {
        "lineNumber": 2642,
        "author": {
          "gitId": "-"
        },
        "content": "     (play-from-hand state :corp \"Sting!\" \"New remote\")"
      },
      {
        "lineNumber": 2643,
        "author": {
          "gitId": "-"
        },
        "content": "     (play-and-score state \"Sting!\")"
      },
      {
        "lineNumber": 2644,
        "author": {
          "gitId": "-"
        },
        "content": "     (is (\u003d 1 (-\u003e (get-runner) :discard count)) \"Runner should have taken 1 net damage\")"
      },
      {
        "lineNumber": 2645,
        "author": {
          "gitId": "-"
        },
        "content": "     (take-credits state :corp)"
      },
      {
        "lineNumber": 2646,
        "author": {
          "gitId": "-"
        },
        "content": "     (run-empty-server state :remote1)"
      },
      {
        "lineNumber": 2647,
        "author": {
          "gitId": "-"
        },
        "content": "     (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 2648,
        "author": {
          "gitId": "-"
        },
        "content": "     (is (\u003d 3 (-\u003e (get-runner) :discard count)) \"Runner should take 2 net damage because there is a Sting! in the Corp\u0027s score area\")"
      },
      {
        "lineNumber": 2649,
        "author": {
          "gitId": "-"
        },
        "content": "     (take-credits state :runner)"
      },
      {
        "lineNumber": 2650,
        "author": {
          "gitId": "-"
        },
        "content": "     (play-and-score state \"Sting!\")"
      },
      {
        "lineNumber": 2651,
        "author": {
          "gitId": "-"
        },
        "content": "     (is (\u003d 5 (-\u003e (get-runner) :discard count)) \"Runner should take 2 net damage because there is a Sting! in the Runner\u0027s score area\"))))"
      },
      {
        "lineNumber": 2652,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2653,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest successful-field-test"
      },
      {
        "lineNumber": 2654,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Successful Field Test"
      },
      {
        "lineNumber": 2655,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2656,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Successful Field Test\" (qty \"Ice Wall\" 10)]}})"
      },
      {
        "lineNumber": 2657,
        "author": {
          "gitId": "-"
        },
        "content": "    (starting-hand state :corp (vec (cons \"Successful Field Test\" (repeat 10 \"Ice Wall\"))))"
      },
      {
        "lineNumber": 2658,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 5 (:credit (get-corp))) \"Should start with 5 credits\")"
      },
      {
        "lineNumber": 2659,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Successful Field Test\")"
      },
      {
        "lineNumber": 2660,
        "author": {
          "gitId": "-"
        },
        "content": "    (dotimes [n 10]"
      },
      {
        "lineNumber": 2661,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (find-card \"Ice Wall\" (:hand (get-corp))))"
      },
      {
        "lineNumber": 2662,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"HQ\"))"
      },
      {
        "lineNumber": 2663,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 5 (:credit (get-corp))) \"Should still have 5 credits\")"
      },
      {
        "lineNumber": 2664,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (some? (get-ice state :hq 9)))))"
      },
      {
        "lineNumber": 2665,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2666,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest superior-cyberwalls"
      },
      {
        "lineNumber": 2667,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Superior Cyberwalls"
      },
      {
        "lineNumber": 2668,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2669,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Superior Cyberwalls\" \"Ice Wall\"]}})"
      },
      {
        "lineNumber": 2670,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Ice Wall\" \"HQ\")"
      },
      {
        "lineNumber": 2671,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [iw (get-ice state :hq 0)]"
      },
      {
        "lineNumber": 2672,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/rez state :corp iw)"
      },
      {
        "lineNumber": 2673,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:current-strength (refresh iw))) \"Should start with base strength of 1\")"
      },
      {
        "lineNumber": 2674,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 4 (:credit (get-corp))) \"Should have 4 credits after rez\")"
      },
      {
        "lineNumber": 2675,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Superior Cyberwalls\")"
      },
      {
        "lineNumber": 2676,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:current-strength (refresh iw))) \"Should gain 1 strength from 1 to 2\")"
      },
      {
        "lineNumber": 2677,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 5 (:credit (get-corp))) \"Should gain 1 credit for rezzed barrier\"))))"
      },
      {
        "lineNumber": 2678,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2679,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest tgtbt"
      },
      {
        "lineNumber": 2680,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; TGTBT - Give the Runner 1 tag when they access"
      },
      {
        "lineNumber": 2681,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; OHG still not working..."
      },
      {
        "lineNumber": 2682,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2683,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"TGTBT\" 2) \"Old Hollywood Grid\"]}})"
      },
      {
        "lineNumber": 2684,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"TGTBT\" \"New remote\")"
      },
      {
        "lineNumber": 2685,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Old Hollywood Grid\" \"Server 1\")"
      },
      {
        "lineNumber": 2686,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"TGTBT\" \"New remote\")"
      },
      {
        "lineNumber": 2687,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 2688,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [tg1 (get-content state :remote1 0)"
      },
      {
        "lineNumber": 2689,
        "author": {
          "gitId": "-"
        },
        "content": "          ohg (get-content state :remote1 1)]"
      },
      {
        "lineNumber": 2690,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state \"Server 1\")"
      },
      {
        "lineNumber": 2691,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/rez state :corp ohg)"
      },
      {
        "lineNumber": 2692,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 2693,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :runner tg1)"
      },
      {
        "lineNumber": 2694,
        "author": {
          "gitId": "-"
        },
        "content": "      ;; Accesses TGTBT but can\u0027t steal"
      },
      {
        "lineNumber": 2695,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count-tags state)) \"Runner took 1 tag from accessing without stealing\")"
      },
      {
        "lineNumber": 2696,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"No action\")"
      },
      {
        "lineNumber": 2697,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :runner ohg))"
      },
      {
        "lineNumber": 2698,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"Pay 4 [Credits] to trash\") ;; Trashes OHG"
      },
      {
        "lineNumber": 2699,
        "author": {
          "gitId": "-"
        },
        "content": "    (run-empty-server state \"Server 2\")"
      },
      {
        "lineNumber": 2700,
        "author": {
          "gitId": "-"
        },
        "content": "    ;; Accesses TGTBT and can steal"
      },
      {
        "lineNumber": 2701,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 2702,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 2 (count-tags state)) \"Runner took 1 tag from accessing and stealing\")))"
      },
      {
        "lineNumber": 2703,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2704,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest the-cleaners"
      },
      {
        "lineNumber": 2705,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; The Cleaners"
      },
      {
        "lineNumber": 2706,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Basic test\""
      },
      {
        "lineNumber": 2707,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2708,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"The Cleaners\" \"Scorched Earth\"]}"
      },
      {
        "lineNumber": 2709,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:deck [(qty \"Sure Gamble\" 3) (qty \"Diesel\" 3)]}})"
      },
      {
        "lineNumber": 2710,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"The Cleaners\")"
      },
      {
        "lineNumber": 2711,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/gain-tags state :runner 1)"
      },
      {
        "lineNumber": 2712,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Scorched Earth\")"
      },
      {
        "lineNumber": 2713,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (count (:hand (get-runner)))) \"5 damage dealt to Runner\")))"
      },
      {
        "lineNumber": 2714,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"No bonus damage when runner \u0027suffers\u0027 damage, ie Cybernetics\""
      },
      {
        "lineNumber": 2715,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2716,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"The Cleaners\"]}"
      },
      {
        "lineNumber": 2717,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:deck [(qty \"Respirocytes\" 3)]}})"
      },
      {
        "lineNumber": 2718,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"The Cleaners\")"
      },
      {
        "lineNumber": 2719,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 2720,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"Respirocytes\")"
      },
      {
        "lineNumber": 2721,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:hand (get-runner)))) \"Only 1 damage dealt to Runner from Cybernetics\"))))"
      },
      {
        "lineNumber": 2722,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2723,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest the-future-is-now"
      },
      {
        "lineNumber": 2724,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; The Future is Now"
      },
      {
        "lineNumber": 2725,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"With at least one card in deck\""
      },
      {
        "lineNumber": 2726,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2727,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"The Future is Now\" \"Ice Wall\"]}})"
      },
      {
        "lineNumber": 2728,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :corp [\"The Future is Now\"])"
      },
      {
        "lineNumber": 2729,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:hand (get-corp)))))"
      },
      {
        "lineNumber": 2730,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:deck (get-corp)))))"
      },
      {
        "lineNumber": 2731,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"The Future is Now\")"
      },
      {
        "lineNumber": 2732,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp (find-card \"Ice Wall\" (:deck (get-corp))))"
      },
      {
        "lineNumber": 2733,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:hand (get-corp)))))"
      },
      {
        "lineNumber": 2734,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (count (:deck (get-corp)))))))"
      },
      {
        "lineNumber": 2735,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"With an empty deck\""
      },
      {
        "lineNumber": 2736,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2737,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"The Future is Now\"]}})"
      },
      {
        "lineNumber": 2738,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:hand (get-corp)))))"
      },
      {
        "lineNumber": 2739,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (count (:deck (get-corp)))))"
      },
      {
        "lineNumber": 2740,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"The Future is Now\")"
      },
      {
        "lineNumber": 2741,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (empty? (:prompt (get-corp))) \"Ability shouldn\u0027t fire if deck is empty\")"
      },
      {
        "lineNumber": 2742,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (count (:hand (get-corp)))))"
      },
      {
        "lineNumber": 2743,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (count (:deck (get-corp))))))))"
      },
      {
        "lineNumber": 2744,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2745,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest the-future-perfect"
      },
      {
        "lineNumber": 2746,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; The Future Perfect"
      },
      {
        "lineNumber": 2747,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2748,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"The Future Perfect\" 2)]}})"
      },
      {
        "lineNumber": 2749,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"The Future Perfect\" \"New remote\")"
      },
      {
        "lineNumber": 2750,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 2751,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"No steal on not-equal Psi game\""
      },
      {
        "lineNumber": 2752,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-empty-server state \"HQ\")"
      },
      {
        "lineNumber": 2753,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"1 [Credits]\")"
      },
      {
        "lineNumber": 2754,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"0 [Credits]\")"
      },
      {
        "lineNumber": 2755,
        "author": {
          "gitId": "-"
        },
        "content": "      ;; Cannot steal prompt"
      },
      {
        "lineNumber": 2756,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"No action\")"
      },
      {
        "lineNumber": 2757,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (:agenda-point (get-runner))) \"Runner did not steal TFP\"))"
      },
      {
        "lineNumber": 2758,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Successful steal on equal Psi game\""
      },
      {
        "lineNumber": 2759,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-empty-server state \"HQ\")"
      },
      {
        "lineNumber": 2760,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"1 [Credits]\")"
      },
      {
        "lineNumber": 2761,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"1 [Credits]\")"
      },
      {
        "lineNumber": 2762,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 2763,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 3 (:agenda-point (get-runner))) \"Runner stole TFP\"))"
      },
      {
        "lineNumber": 2764,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"No Psi game and successful steal when installed\""
      },
      {
        "lineNumber": 2765,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-empty-server state \"Server 1\")"
      },
      {
        "lineNumber": 2766,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 2767,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 6 (:agenda-point (get-runner))) \"Runner stole TFP - no Psi game on installed TFP\"))))"
      },
      {
        "lineNumber": 2768,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2769,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest timely-public-release"
      },
      {
        "lineNumber": 2770,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Timely Public Release: spend agenda counter to install, ignoring all costs"
      },
      {
        "lineNumber": 2771,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Install outside run\""
      },
      {
        "lineNumber": 2772,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2773,
        "author": {
          "gitId": "-"
        },
        "content": "     (new-game {:corp {:deck [(qty \"Hedge Fund\" 5)]"
      },
      {
        "lineNumber": 2774,
        "author": {
          "gitId": "-"
        },
        "content": "                       :hand [\"Timely Public Release\" \"Enigma\"]}})"
      },
      {
        "lineNumber": 2775,
        "author": {
          "gitId": "-"
        },
        "content": "     (play-and-score state \"Timely Public Release\")"
      },
      {
        "lineNumber": 2776,
        "author": {
          "gitId": "-"
        },
        "content": "     (let [tpr (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 2777,
        "author": {
          "gitId": "-"
        },
        "content": "       (is (\u003d 1 (get-counters (refresh tpr) :agenda)) \"TPR comes with 1 counter\")"
      },
      {
        "lineNumber": 2778,
        "author": {
          "gitId": "-"
        },
        "content": "       (card-ability state :corp (refresh tpr) 0)"
      },
      {
        "lineNumber": 2779,
        "author": {
          "gitId": "-"
        },
        "content": "       (core/move state :corp (assoc (find-card \"Enigma\" (:hand (get-corp))) :seen true) :discard)"
      },
      {
        "lineNumber": 2780,
        "author": {
          "gitId": "-"
        },
        "content": "       (click-card state :corp \"Enigma\")"
      },
      {
        "lineNumber": 2781,
        "author": {
          "gitId": "-"
        },
        "content": "       (click-prompt state :corp \"HQ\")"
      },
      {
        "lineNumber": 2782,
        "author": {
          "gitId": "-"
        },
        "content": "       (click-prompt state :corp \"0\")"
      },
      {
        "lineNumber": 2783,
        "author": {
          "gitId": "-"
        },
        "content": "       (is (\u003d \"Enigma\" (:title (get-ice state :hq 0))) \"Enigma was installed\")"
      },
      {
        "lineNumber": 2784,
        "author": {
          "gitId": "-"
        },
        "content": "       (is (empty? (:hand (get-corp))) \"Enigma removed from HQ\")"
      },
      {
        "lineNumber": 2785,
        "author": {
          "gitId": "-"
        },
        "content": "       (is (zero? (get-counters (refresh tpr) :agenda)) \"Agenda counter was spent\"))))"
      },
      {
        "lineNumber": 2786,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Install on server being run\""
      },
      {
        "lineNumber": 2787,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2788,
        "author": {
          "gitId": "-"
        },
        "content": "     (new-game {:corp {:deck [\"Enigma\" \"Ice Wall\" (qty \"Timely Public Release\" 2)]}})"
      },
      {
        "lineNumber": 2789,
        "author": {
          "gitId": "-"
        },
        "content": "     (play-and-score state \"Timely Public Release\")"
      },
      {
        "lineNumber": 2790,
        "author": {
          "gitId": "-"
        },
        "content": "     (play-and-score state \"Timely Public Release\")"
      },
      {
        "lineNumber": 2791,
        "author": {
          "gitId": "-"
        },
        "content": "     (take-credits state :corp)"
      },
      {
        "lineNumber": 2792,
        "author": {
          "gitId": "-"
        },
        "content": "     (let [tpr1 (get-scored state :corp 0)"
      },
      {
        "lineNumber": 2793,
        "author": {
          "gitId": "-"
        },
        "content": "           tpr2 (get-scored state :corp 1)"
      },
      {
        "lineNumber": 2794,
        "author": {
          "gitId": "-"
        },
        "content": "           corp-credits (:credit (get-corp))]"
      },
      {
        "lineNumber": 2795,
        "author": {
          "gitId": "-"
        },
        "content": "       (run-on state \"R\u0026D\")"
      },
      {
        "lineNumber": 2796,
        "author": {
          "gitId": "-"
        },
        "content": "       (is (zero? (get-in @state [:run :position]))"
      },
      {
        "lineNumber": 2797,
        "author": {
          "gitId": "-"
        },
        "content": "           \"Initial run position is approaching server\")"
      },
      {
        "lineNumber": 2798,
        "author": {
          "gitId": "-"
        },
        "content": "       (card-ability state :corp (refresh tpr1) 0)"
      },
      {
        "lineNumber": 2799,
        "author": {
          "gitId": "-"
        },
        "content": "       (click-card state :corp (find-card \"Enigma\" (:hand (get-corp))))"
      },
      {
        "lineNumber": 2800,
        "author": {
          "gitId": "-"
        },
        "content": "       (click-prompt state :corp \"R\u0026D\")"
      },
      {
        "lineNumber": 2801,
        "author": {
          "gitId": "-"
        },
        "content": "       (click-prompt state :corp \"0\")"
      },
      {
        "lineNumber": 2802,
        "author": {
          "gitId": "-"
        },
        "content": "       (is (\u003d \"Enigma\" (:title (get-ice state :rd 0))) \"Enigma was installed\")"
      },
      {
        "lineNumber": 2803,
        "author": {
          "gitId": "-"
        },
        "content": "       (is (\u003d corp-credits (:credit (get-corp))) \"Install was free\")"
      },
      {
        "lineNumber": 2804,
        "author": {
          "gitId": "-"
        },
        "content": "       (is (\u003d 1 (get-in @state [:run :position])) \"Now approaching new ice\")"
      },
      {
        "lineNumber": 2805,
        "author": {
          "gitId": "-"
        },
        "content": "       (run-continue state)"
      },
      {
        "lineNumber": 2806,
        "author": {
          "gitId": "-"
        },
        "content": "       (let [innermost (get-in @state [:run :position])]"
      },
      {
        "lineNumber": 2807,
        "author": {
          "gitId": "-"
        },
        "content": "         (is (zero? (get-in @state [:run :position])) \"Run position is after Enigma\")"
      },
      {
        "lineNumber": 2808,
        "author": {
          "gitId": "-"
        },
        "content": "         (card-ability state :corp (refresh tpr2) 0)"
      },
      {
        "lineNumber": 2809,
        "author": {
          "gitId": "-"
        },
        "content": "         (click-card state :corp (find-card \"Ice Wall\" (:hand (get-corp))))"
      },
      {
        "lineNumber": 2810,
        "author": {
          "gitId": "-"
        },
        "content": "         (click-prompt state :corp \"R\u0026D\")"
      },
      {
        "lineNumber": 2811,
        "author": {
          "gitId": "-"
        },
        "content": "         (click-prompt state :corp \"1\")"
      },
      {
        "lineNumber": 2812,
        "author": {
          "gitId": "-"
        },
        "content": "         (is (\u003d \"Ice Wall\" (:title (get-ice state :rd 1))) \"Ice Wall was installed\")"
      },
      {
        "lineNumber": 2813,
        "author": {
          "gitId": "-"
        },
        "content": "         (is (\u003d innermost (get-in @state [:run :position])) \"Run position unchanged because ice was installed \u0027behind\u0027 the runner\")"
      },
      {
        "lineNumber": 2814,
        "author": {
          "gitId": "-"
        },
        "content": "         (is (\u003d corp-credits (:credit (get-corp))) \"Install was free\"))))))"
      },
      {
        "lineNumber": 2815,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2816,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest underway-renovation"
      },
      {
        "lineNumber": 2817,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Underway Renovation"
      },
      {
        "lineNumber": 2818,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2819,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Underway Renovation\" \"Shipment from SanSan\"]}})"
      },
      {
        "lineNumber": 2820,
        "author": {
          "gitId": "-"
        },
        "content": "    (core/gain state :corp :click 2)"
      },
      {
        "lineNumber": 2821,
        "author": {
          "gitId": "-"
        },
        "content": "    (starting-hand state :runner [])"
      },
      {
        "lineNumber": 2822,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Underway Renovation\" \"New remote\")"
      },
      {
        "lineNumber": 2823,
        "author": {
          "gitId": "-"
        },
        "content": "    (let [ur (get-content state :remote1 0)]"
      },
      {
        "lineNumber": 2824,
        "author": {
          "gitId": "-"
        },
        "content": "      (advance state ur)"
      },
      {
        "lineNumber": 2825,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (last-log-contains? state \"Sure Gamble\")"
      },
      {
        "lineNumber": 2826,
        "author": {
          "gitId": "-"
        },
        "content": "          \"Underway Renovation trashed card name is in log\")"
      },
      {
        "lineNumber": 2827,
        "author": {
          "gitId": "-"
        },
        "content": "      ; check for #2370"
      },
      {
        "lineNumber": 2828,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (not (last-log-contains? state \"Sure Gamble, Sure Gamble\"))"
      },
      {
        "lineNumber": 2829,
        "author": {
          "gitId": "-"
        },
        "content": "          \"Underway Renovation trashed card name is in log\")"
      },
      {
        "lineNumber": 2830,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:discard (get-runner)))) \"1 card milled from Runner Stack\")"
      },
      {
        "lineNumber": 2831,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Shipment from SanSan\")"
      },
      {
        "lineNumber": 2832,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"2\")"
      },
      {
        "lineNumber": 2833,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp ur)"
      },
      {
        "lineNumber": 2834,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 3 (get-counters (refresh ur) :advancement)))"
      },
      {
        "lineNumber": 2835,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:discard (get-runner)))) \"No Runner mills; advancements were placed\")"
      },
      {
        "lineNumber": 2836,
        "author": {
          "gitId": "-"
        },
        "content": "      (advance state ur)"
      },
      {
        "lineNumber": 2837,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 4 (get-counters (refresh ur) :advancement)))"
      },
      {
        "lineNumber": 2838,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (last-log-contains? state \"Sure Gamble, Sure Gamble\")"
      },
      {
        "lineNumber": 2839,
        "author": {
          "gitId": "-"
        },
        "content": "          \"Underway Renovation trashed card name is in log\")"
      },
      {
        "lineNumber": 2840,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 3 (count (:discard (get-runner)))) \"2 cards milled from Runner Stack; 4+ advancements\"))))"
      },
      {
        "lineNumber": 2841,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2842,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest unorthodox-predictions"
      },
      {
        "lineNumber": 2843,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Unorthodox Predictions"
      },
      {
        "lineNumber": 2844,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2845,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Unorthodox Predictions\"]}})"
      },
      {
        "lineNumber": 2846,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Unorthodox Predictions\")"
      },
      {
        "lineNumber": 2847,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :corp \"Barrier\")"
      },
      {
        "lineNumber": 2848,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (last-log-contains? state \"Barrier\"))))"
      },
      {
        "lineNumber": 2849,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2850,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest utopia-fragment"
      },
      {
        "lineNumber": 2851,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Utopia Fragment"
      },
      {
        "lineNumber": 2852,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2853,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Utopia Fragment\""
      },
      {
        "lineNumber": 2854,
        "author": {
          "gitId": "-"
        },
        "content": "                             \"Hostile Takeover\"]}})"
      },
      {
        "lineNumber": 2855,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Utopia Fragment\")"
      },
      {
        "lineNumber": 2856,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Hostile Takeover\" \"New remote\")"
      },
      {
        "lineNumber": 2857,
        "author": {
          "gitId": "-"
        },
        "content": "    (advance state (get-content state :remote2 0))"
      },
      {
        "lineNumber": 2858,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 2859,
        "author": {
          "gitId": "-"
        },
        "content": "    (run-on state :remote2)"
      },
      {
        "lineNumber": 2860,
        "author": {
          "gitId": "-"
        },
        "content": "    (run-successful state)"
      },
      {
        "lineNumber": 2861,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d [\"Pay to steal\" \"No action\"] (:choices (prompt-map :runner))))"
      },
      {
        "lineNumber": 2862,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"Pay to steal\")"
      },
      {
        "lineNumber": 2863,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (:agenda-point (get-runner))))"
      },
      {
        "lineNumber": 2864,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 3 (:credit (get-runner))))))"
      },
      {
        "lineNumber": 2865,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2866,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest vanity-project"
      },
      {
        "lineNumber": 2867,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Vanity Project"
      },
      {
        "lineNumber": 2868,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 2869,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Vanity Project\"]}})"
      },
      {
        "lineNumber": 2870,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Vanity Project\")"
      },
      {
        "lineNumber": 2871,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 4 (:agenda-point (get-corp))))))"
      },
      {
        "lineNumber": 2872,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2873,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest veterans-program"
      },
      {
        "lineNumber": 2874,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Veterans Program"
      },
      {
        "lineNumber": 2875,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Veterans Program basic test\""
      },
      {
        "lineNumber": 2876,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2877,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [(qty \"Hostile Takeover\" 2) \"Veterans Program\"]}})"
      },
      {
        "lineNumber": 2878,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Hostile Takeover\")"
      },
      {
        "lineNumber": 2879,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Hostile Takeover\")"
      },
      {
        "lineNumber": 2880,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 19 (:credit (get-corp))) \"Should gain 14 credits from 5 to 19\")"
      },
      {
        "lineNumber": 2881,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (:bad-publicity (get-corp))) \"Should gain 2 bad publicity\")"
      },
      {
        "lineNumber": 2882,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Veterans Program\")"
      },
      {
        "lineNumber": 2883,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (:bad-publicity (get-corp))) \"Should lose 2 bad publicity\")))"
      },
      {
        "lineNumber": 2884,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Removes _up to 2_ bad publicity\""
      },
      {
        "lineNumber": 2885,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2886,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Hostile Takeover\" \"Veterans Program\"]}})"
      },
      {
        "lineNumber": 2887,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Hostile Takeover\")"
      },
      {
        "lineNumber": 2888,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 12 (:credit (get-corp))) \"Should gain 7 credits from 5 to 12\")"
      },
      {
        "lineNumber": 2889,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (:bad-publicity (get-corp))) \"Should gain 1 bad publicity\")"
      },
      {
        "lineNumber": 2890,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Veterans Program\")"
      },
      {
        "lineNumber": 2891,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (:bad-publicity (get-corp))) \"Should lose 1 bad publicity\"))))"
      },
      {
        "lineNumber": 2892,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2893,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest viral-weaponization"
      },
      {
        "lineNumber": 2894,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Viral Weaponization - at the end of turn scored, do 1 net damage for each card in grip"
      },
      {
        "lineNumber": 2895,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Score on corp turn\""
      },
      {
        "lineNumber": 2896,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2897,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [(qty \"Viral Weaponization\" 2)]}"
      },
      {
        "lineNumber": 2898,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:deck [(qty \"Sure Gamble\" 3)]}})"
      },
      {
        "lineNumber": 2899,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :runner [\"Sure Gamble\" \"Sure Gamble\"])"
      },
      {
        "lineNumber": 2900,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Viral Weaponization\")"
      },
      {
        "lineNumber": 2901,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (count (:hand (get-runner)))) \"Runner doesn\u0027t take damage when scored\")"
      },
      {
        "lineNumber": 2902,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 2903,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (count (:hand (get-runner)))) \"Runner takes damage at end of turn\")"
      },
      {
        "lineNumber": 2904,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/click-draw state :runner 1)"
      },
      {
        "lineNumber": 2905,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2906,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 2907,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 1 (count (:hand (get-runner)))) \"Runner doesn\u0027t take damage in future turns\")"
      },
      {
        "lineNumber": 2908,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :runner \"Sure Gamble\")"
      },
      {
        "lineNumber": 2909,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2910,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (count (:hand (get-runner)))) \"Runner\u0027s hand is empty\")"
      },
      {
        "lineNumber": 2911,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-and-score state \"Viral Weaponization\")"
      },
      {
        "lineNumber": 2912,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 2913,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (count (:hand (get-runner)))) \"Runner\u0027s hand is empty\")))"
      },
      {
        "lineNumber": 2914,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Score on runners turn\""
      },
      {
        "lineNumber": 2915,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2916,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Viral Weaponization\" \"Plan B\"]}"
      },
      {
        "lineNumber": 2917,
        "author": {
          "gitId": "-"
        },
        "content": "                 :runner {:deck [(qty \"Sure Gamble\" 3)]}})"
      },
      {
        "lineNumber": 2918,
        "author": {
          "gitId": "-"
        },
        "content": "      (starting-hand state :runner [\"Sure Gamble\" \"Sure Gamble\"])"
      },
      {
        "lineNumber": 2919,
        "author": {
          "gitId": "-"
        },
        "content": "      (play-from-hand state :corp \"Plan B\" \"New remote\")"
      },
      {
        "lineNumber": 2920,
        "author": {
          "gitId": "-"
        },
        "content": "      (core/add-prop state :corp (get-content state :remote1 0) :advance-counter 4)"
      },
      {
        "lineNumber": 2921,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :corp)"
      },
      {
        "lineNumber": 2922,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-on state \"Server 1\")"
      },
      {
        "lineNumber": 2923,
        "author": {
          "gitId": "-"
        },
        "content": "      (run-successful state)"
      },
      {
        "lineNumber": 2924,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 2925,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-card state :corp (find-card \"Viral Weaponization\" (:hand (get-corp))))"
      },
      {
        "lineNumber": 2926,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d [\"Pay 1 [Credits] to trash\" \"No action\"] (:choices (prompt-map :runner))))"
      },
      {
        "lineNumber": 2927,
        "author": {
          "gitId": "-"
        },
        "content": "      (click-prompt state :runner \"No action\")"
      },
      {
        "lineNumber": 2928,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (\u003d 2 (count (:hand (get-runner)))) \"Runner doesn\u0027t take damage when scored\")"
      },
      {
        "lineNumber": 2929,
        "author": {
          "gitId": "-"
        },
        "content": "      (take-credits state :runner)"
      },
      {
        "lineNumber": 2930,
        "author": {
          "gitId": "-"
        },
        "content": "      (is (zero? (count (:hand (get-runner)))) \"Runner takes damage at end of turn\")))"
      },
      {
        "lineNumber": 2931,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"interaction with The Class Act\""
      },
      {
        "lineNumber": 2932,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Score on corp turn\""
      },
      {
        "lineNumber": 2933,
        "author": {
          "gitId": "-"
        },
        "content": "      (do-game"
      },
      {
        "lineNumber": 2934,
        "author": {
          "gitId": "-"
        },
        "content": "        (new-game {:corp {:deck [(qty \"Hedge Fund\" 5)]"
      },
      {
        "lineNumber": 2935,
        "author": {
          "gitId": "-"
        },
        "content": "                          :hand [\"Viral Weaponization\"]}"
      },
      {
        "lineNumber": 2936,
        "author": {
          "gitId": "-"
        },
        "content": "                   :runner {:deck [\"The Class Act\" (qty \"Sure Gamble\" 10)]"
      },
      {
        "lineNumber": 2937,
        "author": {
          "gitId": "-"
        },
        "content": "                            :hand [\"Artist Colony\" \"Fan Site\" \"Sure Gamble\" \"Sure Gamble\"]}})"
      },
      {
        "lineNumber": 2938,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :corp)"
      },
      {
        "lineNumber": 2939,
        "author": {
          "gitId": "-"
        },
        "content": "        (play-from-hand state :runner \"Artist Colony\")"
      },
      {
        "lineNumber": 2940,
        "author": {
          "gitId": "-"
        },
        "content": "        (play-from-hand state :runner \"Fan Site\")"
      },
      {
        "lineNumber": 2941,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :runner)"
      },
      {
        "lineNumber": 2942,
        "author": {
          "gitId": "-"
        },
        "content": "        (play-and-score state \"Viral Weaponization\")"
      },
      {
        "lineNumber": 2943,
        "author": {
          "gitId": "-"
        },
        "content": "        (card-ability state :runner (get-resource state 0) 0)"
      },
      {
        "lineNumber": 2944,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :runner \"The Class Act\")"
      },
      {
        "lineNumber": 2945,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :runner \"Fan Site\")"
      },
      {
        "lineNumber": 2946,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d \"The Class Act\" (:title (get-resource state 1))))"
      },
      {
        "lineNumber": 2947,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d :this-turn (:installed (get-resource state 1))))"
      },
      {
        "lineNumber": 2948,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (count (:hand (get-runner)))) \"Runner doesn\u0027t take damage when scored\")"
      },
      {
        "lineNumber": 2949,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :corp)"
      },
      {
        "lineNumber": 2950,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (count (:hand (get-runner)))) \"Runner takes damage before resolving The Class Act\")"
      },
      {
        "lineNumber": 2951,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :runner \"Sure Gamble\")"
      },
      {
        "lineNumber": 2952,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 4 (count (:hand (get-runner)))) \"Runner draws from The Class Act after taking damage\")))"
      },
      {
        "lineNumber": 2953,
        "author": {
          "gitId": "-"
        },
        "content": "    (testing \"Scored on the runner\u0027s turn\""
      },
      {
        "lineNumber": 2954,
        "author": {
          "gitId": "-"
        },
        "content": "      (do-game"
      },
      {
        "lineNumber": 2955,
        "author": {
          "gitId": "-"
        },
        "content": "        (new-game {:corp {:deck [(qty \"Hedge Fund\" 5)]"
      },
      {
        "lineNumber": 2956,
        "author": {
          "gitId": "-"
        },
        "content": "                          :hand [\"Viral Weaponization\" \"Plan B\"]}"
      },
      {
        "lineNumber": 2957,
        "author": {
          "gitId": "-"
        },
        "content": "                   :runner {:deck [(qty \"Sure Gamble\" 3)]"
      },
      {
        "lineNumber": 2958,
        "author": {
          "gitId": "-"
        },
        "content": "                            :hand [\"Sure Gamble\" \"Sure Gamble\" \"The Class Act\"]}})"
      },
      {
        "lineNumber": 2959,
        "author": {
          "gitId": "-"
        },
        "content": "        (play-from-hand state :corp \"Plan B\" \"New remote\")"
      },
      {
        "lineNumber": 2960,
        "author": {
          "gitId": "-"
        },
        "content": "        (core/add-prop state :corp (get-content state :remote1 0) :advance-counter 4)"
      },
      {
        "lineNumber": 2961,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :corp)"
      },
      {
        "lineNumber": 2962,
        "author": {
          "gitId": "-"
        },
        "content": "        (play-from-hand state :runner \"The Class Act\")"
      },
      {
        "lineNumber": 2963,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-on state \"Server 1\")"
      },
      {
        "lineNumber": 2964,
        "author": {
          "gitId": "-"
        },
        "content": "        (run-successful state)"
      },
      {
        "lineNumber": 2965,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :corp \"Yes\")"
      },
      {
        "lineNumber": 2966,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-card state :corp (find-card \"Viral Weaponization\" (:hand (get-corp))))"
      },
      {
        "lineNumber": 2967,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d [\"Pay 1 [Credits] to trash\" \"No action\"] (:choices (prompt-map :runner))))"
      },
      {
        "lineNumber": 2968,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :runner \"No action\")"
      },
      {
        "lineNumber": 2969,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (count (:hand (get-runner)))) \"Runner doesn\u0027t take damage when scored\")"
      },
      {
        "lineNumber": 2970,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :runner)"
      },
      {
        "lineNumber": 2971,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (\u003d 2 (count (:hand (get-runner)))) \"Runner doesn\u0027t take the damage until after resolving The Class Act\")"
      },
      {
        "lineNumber": 2972,
        "author": {
          "gitId": "-"
        },
        "content": "        (click-prompt state :runner \"Sure Gamble\")"
      },
      {
        "lineNumber": 2973,
        "author": {
          "gitId": "-"
        },
        "content": "        (is (zero? (count (:hand (get-runner)))) \"Runner takes damage at end of turn\")))))"
      },
      {
        "lineNumber": 2974,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2975,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest voting-machine-initiative"
      },
      {
        "lineNumber": 2976,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Voting Machine Initiative"
      },
      {
        "lineNumber": 2977,
        "author": {
          "gitId": "-"
        },
        "content": "  (testing \"Voting Machine Initiative\""
      },
      {
        "lineNumber": 2978,
        "author": {
          "gitId": "-"
        },
        "content": "    (do-game"
      },
      {
        "lineNumber": 2979,
        "author": {
          "gitId": "-"
        },
        "content": "      (new-game {:corp {:deck [\"Voting Machine Initiative\"]}})"
      },
      {
        "lineNumber": 2980,
        "author": {
          "gitId": "-"
        },
        "content": "      (letfn [(vmi-test [vmi choice counter]"
      },
      {
        "lineNumber": 2981,
        "author": {
          "gitId": "-"
        },
        "content": "                (let [diff (if (\u003d \"Yes\" choice) 1 0)]"
      },
      {
        "lineNumber": 2982,
        "author": {
          "gitId": "-"
        },
        "content": "                  (is (\u003d counter (get-counters (refresh vmi) :agenda)))"
      },
      {
        "lineNumber": 2983,
        "author": {
          "gitId": "-"
        },
        "content": "                  (is (\u003d 4 (:click (get-runner))))"
      },
      {
        "lineNumber": 2984,
        "author": {
          "gitId": "-"
        },
        "content": "                  (click-prompt state :corp choice)"
      },
      {
        "lineNumber": 2985,
        "author": {
          "gitId": "-"
        },
        "content": "                  (is (\u003d (- 4 diff) (:click (get-runner))))"
      },
      {
        "lineNumber": 2986,
        "author": {
          "gitId": "-"
        },
        "content": "                  (is (\u003d (- counter diff) (get-counters (refresh vmi) :agenda)))"
      },
      {
        "lineNumber": 2987,
        "author": {
          "gitId": "-"
        },
        "content": "                  (take-credits state :runner)"
      },
      {
        "lineNumber": 2988,
        "author": {
          "gitId": "-"
        },
        "content": "                  (take-credits state :corp)))]"
      },
      {
        "lineNumber": 2989,
        "author": {
          "gitId": "-"
        },
        "content": "        (play-and-score state \"Voting Machine Initiative\")"
      },
      {
        "lineNumber": 2990,
        "author": {
          "gitId": "-"
        },
        "content": "        (take-credits state :corp)"
      },
      {
        "lineNumber": 2991,
        "author": {
          "gitId": "-"
        },
        "content": "        (let [vmi-scored (get-scored state :corp 0)]"
      },
      {
        "lineNumber": 2992,
        "author": {
          "gitId": "-"
        },
        "content": "          (vmi-test vmi-scored \"Yes\" 3)"
      },
      {
        "lineNumber": 2993,
        "author": {
          "gitId": "-"
        },
        "content": "          (vmi-test vmi-scored \"No\" 2)"
      },
      {
        "lineNumber": 2994,
        "author": {
          "gitId": "-"
        },
        "content": "          (vmi-test vmi-scored \"Yes\" 2)"
      },
      {
        "lineNumber": 2995,
        "author": {
          "gitId": "-"
        },
        "content": "          (vmi-test vmi-scored \"Yes\" 1)"
      },
      {
        "lineNumber": 2996,
        "author": {
          "gitId": "-"
        },
        "content": "          (is (empty (:prompt (get-corp))) \"No prompt as there are no agenda counters left\"))))))"
      },
      {
        "lineNumber": 2997,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2998,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest vulcan-coverup"
      },
      {
        "lineNumber": 2999,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Vulcan Coverup"
      },
      {
        "lineNumber": 3000,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 3001,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [(qty \"Vulcan Coverup\" 2)]}})"
      },
      {
        "lineNumber": 3002,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :corp \"Vulcan Coverup\" \"New remote\")"
      },
      {
        "lineNumber": 3003,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 3004,
        "author": {
          "gitId": "-"
        },
        "content": "    (run-empty-server state :remote1)"
      },
      {
        "lineNumber": 3005,
        "author": {
          "gitId": "-"
        },
        "content": "    (click-prompt state :runner \"Steal\")"
      },
      {
        "lineNumber": 3006,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 1 (:bad-publicity (get-corp))) \"Took 1 bad pub from stolen agenda\")"
      },
      {
        "lineNumber": 3007,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :runner)"
      },
      {
        "lineNumber": 3008,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Vulcan Coverup\")"
      },
      {
        "lineNumber": 3009,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 2 (count (:discard (get-runner)))) \"Did 2 meat damage upon scoring\")))"
      },
      {
        "lineNumber": 3010,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3011,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest vulnerability-audit"
      },
      {
        "lineNumber": 3012,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Vulnerability Audit - cannot be scored while installed"
      },
      {
        "lineNumber": 3013,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 3014,
        "author": {
          "gitId": "-"
        },
        "content": "   (new-game {:corp {:deck [\"Vulnerability Audit\" \"Project Atlas\"]}})"
      },
      {
        "lineNumber": 3015,
        "author": {
          "gitId": "-"
        },
        "content": "   (play-from-hand state :corp \"Vulnerability Audit\" \"New remote\")"
      },
      {
        "lineNumber": 3016,
        "author": {
          "gitId": "-"
        },
        "content": "   (play-from-hand state :corp \"Project Atlas\" \"New remote\")"
      },
      {
        "lineNumber": 3017,
        "author": {
          "gitId": "-"
        },
        "content": "   (core/add-prop state :corp (get-content state :remote1 0) :advance-counter 4)"
      },
      {
        "lineNumber": 3018,
        "author": {
          "gitId": "-"
        },
        "content": "   (core/score state :corp {:card (get-content state :remote1 0)})"
      },
      {
        "lineNumber": 3019,
        "author": {
          "gitId": "-"
        },
        "content": "   (is (\u003d 0 (count (:scored (get-corp)))) \"Cannot be scored on installed turn\")"
      },
      {
        "lineNumber": 3020,
        "author": {
          "gitId": "-"
        },
        "content": "   (core/add-prop state :corp (get-content state :remote2 0) :advance-counter 3)"
      },
      {
        "lineNumber": 3021,
        "author": {
          "gitId": "-"
        },
        "content": "   (core/score state :corp {:card (get-content state :remote2 0)})"
      },
      {
        "lineNumber": 3022,
        "author": {
          "gitId": "-"
        },
        "content": "   (is (\u003d 1 (count (:scored (get-corp)))) \"Can score other agendas just fine\")"
      },
      {
        "lineNumber": 3023,
        "author": {
          "gitId": "-"
        },
        "content": "   (take-credits state :corp)"
      },
      {
        "lineNumber": 3024,
        "author": {
          "gitId": "-"
        },
        "content": "   (take-credits state :runner)"
      },
      {
        "lineNumber": 3025,
        "author": {
          "gitId": "-"
        },
        "content": "   (core/score state :corp {:card (get-content state :remote1 0)})"
      },
      {
        "lineNumber": 3026,
        "author": {
          "gitId": "-"
        },
        "content": "   (is (\u003d 2 (count (:scored (get-corp)))) \"Can be scored turn after install\")))"
      },
      {
        "lineNumber": 3027,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3028,
        "author": {
          "gitId": "-"
        },
        "content": "(deftest water-monopoly"
      },
      {
        "lineNumber": 3029,
        "author": {
          "gitId": "-"
        },
        "content": "  ;; Water Monopoly"
      },
      {
        "lineNumber": 3030,
        "author": {
          "gitId": "-"
        },
        "content": "  (do-game"
      },
      {
        "lineNumber": 3031,
        "author": {
          "gitId": "-"
        },
        "content": "    (new-game {:corp {:deck [\"Water Monopoly\"]}"
      },
      {
        "lineNumber": 3032,
        "author": {
          "gitId": "-"
        },
        "content": "               :runner {:deck [\"Fan Site\" \"Levy Advanced Research Lab\"]}})"
      },
      {
        "lineNumber": 3033,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-and-score state \"Water Monopoly\")"
      },
      {
        "lineNumber": 3034,
        "author": {
          "gitId": "-"
        },
        "content": "    (take-credits state :corp)"
      },
      {
        "lineNumber": 3035,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 5 (:credit (get-runner))) \"Runner should start with 5 credits\")"
      },
      {
        "lineNumber": 3036,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :runner \"Fan Site\")"
      },
      {
        "lineNumber": 3037,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (\u003d 5 (:credit (get-runner))) \"Shouldn\u0027t lose any credits\")"
      },
      {
        "lineNumber": 3038,
        "author": {
          "gitId": "-"
        },
        "content": "    (play-from-hand state :runner \"Levy Advanced Research Lab\")"
      },
      {
        "lineNumber": 3039,
        "author": {
          "gitId": "-"
        },
        "content": "    (is (zero? (:credit (get-runner))) \"Should cost an extra credit to play\")))"
      }
    ],
    "authorContributionMap": {
      "-": 3021,
      "ChooJeremy": 18
    }
  }
]
