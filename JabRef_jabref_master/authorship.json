[
  {
    "path": "src/main/java/org/jabref/gui/EntryTypeView.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package org.jabref.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chelseyong"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.event.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ButtonType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ComboBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TitledPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.util.BaseDialog;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.util.ControlHelper;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.util.ViewModelListCellFactory;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.importer.IdBasedFetcher;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.l10n.Localization;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.EntryTypes;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.database.BibDatabaseMode;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.entry.BiblatexEntryTypes;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.entry.BibtexEntryTypes;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.entry.EntryType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.entry.IEEETranEntryTypes;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.preferences.JabRefPreferences;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import com.airhacks.afterburner.views.ViewLoader;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import org.fxmisc.easybind.EasyBind;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": " * Dialog that prompts the user to choose a type for an entry."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * Returns null if canceled."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "public class EntryTypeView extends BaseDialog\u003cEntryType\u003e {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML private ButtonType generateButton;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML private TextField idTextField;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML private ComboBox\u003cIdBasedFetcher\u003e idBasedFetchers;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML private FlowPane biblatexPane;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML private FlowPane bibTexPane;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML private FlowPane ieeetranPane;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML private FlowPane customPane;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML private TitledPane biblatexTitlePane;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML private TitledPane bibTexTitlePane;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML private TitledPane ieeeTranTitlePane;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML private TitledPane customTitlePane;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    private final BasePanel basePanel;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    private final DialogService dialogService;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    private final JabRefPreferences prefs;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private EntryType type;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private EntryTypeViewModel viewModel;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public EntryTypeView(BasePanel basePanel, DialogService dialogService, JabRefPreferences preferences) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        this.basePanel \u003d basePanel;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        this.dialogService \u003d dialogService;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        this.prefs \u003d preferences;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        this.setTitle(Localization.lang(\"Select entry type\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        ViewLoader.view(this)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                  .load()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                  .setAsDialogPane(this);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        ControlHelper.setAction(generateButton, this.getDialogPane(), event -\u003e viewModel.runFetcherWorker());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        setResultConverter(button -\u003e {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            //The buttonType will always be cancel, even if we pressed one of the entry type buttons"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            return type;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        Button btnGenerate \u003d (Button) this.getDialogPane().lookupButton(generateButton);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        btnGenerate.textProperty().bind(EasyBind.map(viewModel.searchingProperty(), searching -\u003e (searching) ? Localization.lang(\"Searching...\") : Localization.lang(\"Generate\")));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        btnGenerate.disableProperty().bind(viewModel.searchingProperty());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        EasyBind.subscribe(viewModel.searchSuccesfulProperty(), value -\u003e {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            if (value) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                setEntryTypeForReturnAndClose(null);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    private void addEntriesToPane(FlowPane pane, Collection\u003c? extends EntryType\u003e entries) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        for (EntryType entryType : entries) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            Button entryButton \u003d new Button(entryType.getName());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            entryButton.setUserData(entryType);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            entryButton.setOnAction(event -\u003e setEntryTypeForReturnAndClose(entryType));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            pane.getChildren().add(entryButton);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        viewModel \u003d new EntryTypeViewModel(prefs, basePanel, dialogService);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        idBasedFetchers.itemsProperty().bind(viewModel.fetcherItemsProperty());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        idTextField.textProperty().bindBidirectional(viewModel.idTextProperty());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        idBasedFetchers.valueProperty().bindBidirectional(viewModel.selectedItemProperty());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        EasyBind.subscribe(viewModel.getFocusAndSelectAllProperty(), evt -\u003e {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            if (evt) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                idTextField.requestFocus();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                idTextField.selectAll();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        new ViewModelListCellFactory\u003cIdBasedFetcher\u003e().withText(item -\u003e item.getName()).install(idBasedFetchers);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        //we set the managed property so that they will only be rendered when they are visble so that the Nodes only take the space when visible"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        //avoids removing and adding from the scence graph"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        bibTexTitlePane.managedProperty().bind(bibTexTitlePane.visibleProperty());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        ieeeTranTitlePane.managedProperty().bind(ieeeTranTitlePane.visibleProperty());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        biblatexTitlePane.managedProperty().bind(biblatexTitlePane.visibleProperty());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        customTitlePane.managedProperty().bind(customTitlePane.visibleProperty());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        if (basePanel.getBibDatabaseContext().isBiblatexMode()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            addEntriesToPane(biblatexPane, BiblatexEntryTypes.ALL);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            bibTexTitlePane.setVisible(false);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            ieeeTranTitlePane.setVisible(false);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cEntryType\u003e customTypes \u003d EntryTypes.getAllCustomTypes(BibDatabaseMode.BIBLATEX);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            if (customTypes.isEmpty()) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                customTitlePane.setVisible(false);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                addEntriesToPane(customPane, customTypes);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            biblatexTitlePane.setVisible(false);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            addEntriesToPane(bibTexPane, BibtexEntryTypes.ALL);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            addEntriesToPane(ieeetranPane, IEEETranEntryTypes.ALL);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cEntryType\u003e customTypes \u003d EntryTypes.getAllCustomTypes(BibDatabaseMode.BIBTEX);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            if (customTypes.isEmpty()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                customTitlePane.setVisible(false);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                addEntriesToPane(customPane, customTypes);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chelseyong"
        },
        "content": "        Platform.runLater(() -\u003e idTextField.requestFocus());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    public EntryType getChoice() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    private void runFetcherWorker(Event event) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        viewModel.runFetcherWorker();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    private void focusTextField(Event event) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        idTextField.requestFocus();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        idTextField.selectAll();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setEntryTypeForReturnAndClose(EntryType entryType) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        type \u003d entryType;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        viewModel.stopFetching();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        this.close();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 168,
      "chelseyong": 2
    }
  },
  {
    "path": "src/main/java/org/jabref/gui/actions/StandardActions.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package org.jabref.gui.actions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.icon.IconTheme;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.icon.JabRefIcon;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.keyboard.KeyBinding;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.l10n.Localization;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.database.BibDatabaseMode;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public enum StandardActions implements Action {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_MORE(Localization.lang(\"Copy\") + \"...\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_TITLE(Localization.lang(\"Copy title\"), KeyBinding.COPY_TITLE),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_KEY(Localization.lang(\"Copy BibTeX key\"), KeyBinding.COPY_BIBTEX_KEY),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_CITE_KEY(Localization.lang(\"Copy \\\\cite{BibTeX key}\"), KeyBinding.COPY_CITE_BIBTEX_KEY),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_KEY_AND_TITLE(Localization.lang(\"Copy BibTeX key and title\"), KeyBinding.COPY_BIBTEX_KEY_AND_TITLE),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_KEY_AND_LINK(Localization.lang(\"Copy BibTeX key and link\"), KeyBinding.COPY_BIBTEX_KEY_AND_LINK),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_CITATION_HTML(Localization.lang(\"Copy citation\") + \" (HTML)\", KeyBinding.COPY_PREVIEW),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_CITATION_MORE(Localization.lang(\"Copy citation\") + \"...\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_CITATION_TEXT(\"Text\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_CITATION_RTF(\"RTF\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_CITATION_ASCII_DOC(\"AsciiDoc\"),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_CITATION_XSLFO(\"XSL-FO\"),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_CITATION_PREVIEW(Localization.lang(\"Copy preview\"), KeyBinding.COPY_PREVIEW),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    EXPORT_TO_CLIPBOARD(Localization.lang(\"Export to clipboard\"), IconTheme.JabRefIcons.EXPORT_TO_CLIPBOARD),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    EXPORT_SELECTED_TO_CLIPBOARD(Localization.lang(\"Export selected entries to clipboard\"), IconTheme.JabRefIcons.EXPORT_TO_CLIPBOARD),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY(Localization.lang(\"Copy\"), IconTheme.JabRefIcons.COPY, KeyBinding.COPY),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    PASTE(Localization.lang(\"Paste\"), IconTheme.JabRefIcons.PASTE, KeyBinding.PASTE),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    CUT(Localization.lang(\"Cut\"), IconTheme.JabRefIcons.CUT, KeyBinding.CUT),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    DELETE(Localization.lang(\"Delete\"), IconTheme.JabRefIcons.DELETE_ENTRY),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    DELETE_ENTRY(Localization.lang(\"Delete Entry\"), IconTheme.JabRefIcons.DELETE_ENTRY, KeyBinding.DELETE_ENTRY),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    SEND_AS_EMAIL(Localization.lang(\"Send as email\"), IconTheme.JabRefIcons.EMAIL),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    OPEN_EXTERNAL_FILE(Localization.lang(\"Open file\"), IconTheme.JabRefIcons.FILE, KeyBinding.OPEN_FILE),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    OPEN_URL(Localization.lang(\"Open URL or DOI\"), IconTheme.JabRefIcons.WWW, KeyBinding.OPEN_URL_OR_DOI),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    MERGE_WITH_FETCHED_ENTRY(Localization.lang(\"Get BibTeX data from %0\", \"DOI/ISBN/...\")),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    ATTACH_FILE(Localization.lang(\"Attach file\"), IconTheme.JabRefIcons.ATTACH_FILE),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    PRIORITY(Localization.lang(\"Priority\"), IconTheme.JabRefIcons.PRIORITY),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    CLEAR_PRIORITY(Localization.lang(\"Clear priority\")),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    PRIORITY_HIGH(Localization.lang(\"Set priority to high\"), IconTheme.JabRefIcons.PRIORITY_HIGH),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    PRIORITY_MEDIUM(Localization.lang(\"Set priority to medium\"), IconTheme.JabRefIcons.PRIORITY_MEDIUM),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    PRIORITY_LOW(Localization.lang(\"Set priority to low\"), IconTheme.JabRefIcons.PRIORITY_LOW),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    QUALITY(Localization.lang(\"Quality\"), IconTheme.JabRefIcons.QUALITY),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    QUALITY_ASSURED(Localization.lang(\"Toggle quality assured\"), IconTheme.JabRefIcons.QUALITY_ASSURED),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    RANKING(Localization.lang(\"Rank\"), IconTheme.JabRefIcons.RANKING),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    CLEAR_RANK(Localization.lang(\"Clear rank\")),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    RANK_1(Localization.lang(\"Set rank to one\"), IconTheme.JabRefIcons.RANK1),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    RANK_2(Localization.lang(\"Set rank to two\"), IconTheme.JabRefIcons.RANK2),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    RANK_3(Localization.lang(\"Set rank to three\"), IconTheme.JabRefIcons.RANK3),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    RANK_4(Localization.lang(\"Set rank to four\"), IconTheme.JabRefIcons.RANK4),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    RANK_5(Localization.lang(\"Set rank to five\"), IconTheme.JabRefIcons.RANK5),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    PRINTED(Localization.lang(\"Printed\"), IconTheme.JabRefIcons.PRINTED),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    TOGGLE_PRINTED(Localization.lang(\"Toggle print status\"), IconTheme.JabRefIcons.PRINTED),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    READ_STATUS(Localization.lang(\"Read status\"), IconTheme.JabRefIcons.READ_STATUS),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    CLEAR_READ_STATUS(Localization.lang(\"Clear read status\")),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    READ(Localization.lang(\"Set read status to read\"), IconTheme.JabRefIcons.READ_STATUS_READ),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    SKIMMED(Localization.lang(\"Set read status to skimmed\"), IconTheme.JabRefIcons.READ_STATUS_SKIMMED),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    RELEVANCE(Localization.lang(\"Relevance\"), IconTheme.JabRefIcons.RELEVANCE),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    RELEVANT(Localization.lang(\"Toggle relevance\"), IconTheme.JabRefIcons.RELEVANCE),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    NEW_LIBRARY(Localization.lang(\"New library\"), IconTheme.JabRefIcons.NEW),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    NEW_LIBRARY_BIBTEX(Localization.lang(\"New %0 library\", BibDatabaseMode.BIBTEX.getFormattedName()), IconTheme.JabRefIcons.NEW),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    NEW_LIBRARY_BIBLATEX(Localization.lang(\"New %0 library\", BibDatabaseMode.BIBLATEX.getFormattedName()), IconTheme.JabRefIcons.NEW),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    OPEN_LIBRARY(Localization.lang(\"Open library\"), IconTheme.JabRefIcons.OPEN, KeyBinding.OPEN_DATABASE),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    IMPORT(Localization.lang(\"Import\"), IconTheme.JabRefIcons.IMPORT),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "    EXPORT(Localization.lang(\"Export\"), IconTheme.JabRefIcons.EXPORT, KeyBinding.EXPORT),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    MERGE_DATABASE(Localization.lang(\"Append library\"), Localization.lang(\"Append contents from a BibTeX library into the currently viewed library\")),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    SAVE_LIBRARY(Localization.lang(\"Save library\"), IconTheme.JabRefIcons.SAVE, KeyBinding.SAVE_DATABASE),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    SAVE_LIBRARY_AS(Localization.lang(\"Save library as...\"), KeyBinding.SAVE_DATABASE_AS),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    SAVE_SELECTED_AS_PLAIN_BIBTEX(Localization.lang(\"Save selected as plain BibTeX...\")),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    SAVE_ALL(Localization.lang(\"Save all\"), Localization.lang(\"Save all open libraries\"), IconTheme.JabRefIcons.SAVE_ALL, KeyBinding.SAVE_ALL),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    IMPORT_INTO_NEW_LIBRARY(Localization.lang(\"Import into new library\"), KeyBinding.IMPORT_INTO_NEW_DATABASE),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    IMPORT_INTO_CURRENT_LIBRARY(Localization.lang(\"Import into current library\"), KeyBinding.IMPORT_INTO_CURRENT_DATABASE),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    EXPORT_ALL(Localization.lang(\"Export all entries\")),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "    EXPORT_SELECTED(Localization.lang(\"Export selected entries\"), KeyBinding.EXPORT_SELECTED),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    CONNECT_TO_SHARED_DB(Localization.lang(\"Connect to shared database\"), IconTheme.JabRefIcons.CONNECT_DB),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    PULL_CHANGES_FROM_SHARED_DB(Localization.lang(\"Pull changes from shared database\"), KeyBinding.PULL_CHANGES_FROM_SHARED_DATABASE),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    CLOSE_LIBRARY(Localization.lang(\"Close library\"), Localization.lang(\"Close the current library\"), IconTheme.JabRefIcons.CLOSE, KeyBinding.CLOSE_DATABASE),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    QUIT(Localization.lang(\"Quit\"), Localization.lang(\"Quit JabRef\"), IconTheme.JabRefIcons.CLOSE_JABREF, KeyBinding.QUIT_JABREF),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    UNDO(Localization.lang(\"Undo\"), IconTheme.JabRefIcons.UNDO, KeyBinding.UNDO),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    REDO(Localization.lang(\"Redo\"), IconTheme.JabRefIcons.REDO, KeyBinding.REDO),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    REPLACE_ALL(Localization.lang(\"Find and replace\"), KeyBinding.REPLACE_STRING),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    MANAGE_KEYWORDS(Localization.lang(\"Manage keywords\")),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    MASS_SET_FIELDS(Localization.lang(\"Manage field names \u0026 content\")),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    TOGGLE_GROUPS(Localization.lang(\"Groups interface\"), IconTheme.JabRefIcons.TOGGLE_GROUPS, KeyBinding.TOGGLE_GROUPS_INTERFACE),"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    TOOGLE_OO(Localization.lang(\"OpenOffice/LibreOffice\"), IconTheme.JabRefIcons.FILE_OPENOFFICE, KeyBinding.OPEN_OPEN_OFFICE_LIBRE_OFFICE_CONNECTION),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    TOGGLE_WEB_SEARCH(Localization.lang(\"Web search\"), Localization.lang(\"Toggle web search interface\"), IconTheme.JabRefIcons.WWW, KeyBinding.WEB_SEARCH),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    NEW_SUB_LIBRARY_FROM_AUX(Localization.lang(\"New sublibrary based on AUX file\") + \"...\", Localization.lang(\"New BibTeX sublibrary\") + Localization.lang(\"This feature generates a new library based on which entries are needed in an existing LaTeX document.\"), IconTheme.JabRefIcons.NEW),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    WRITE_XMP(Localization.lang(\"Write XMP-metadata to PDFs\"), Localization.lang(\"Will write XMP-metadata to the PDFs linked from selected entries.\"), KeyBinding.WRITE_XMP),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    OPEN_FOLDER(Localization.lang(\"Open folder\"), Localization.lang(\"Open folder\"), KeyBinding.OPEN_FOLDER),"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    OPEN_FILE(Localization.lang(\"Open file\"), Localization.lang(\"Open file\"), IconTheme.JabRefIcons.FILE, KeyBinding.OPEN_FILE),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    OPEN_CONSOLE(Localization.lang(\"Open terminal here\"), Localization.lang(\"Open terminal here\"), IconTheme.JabRefIcons.CONSOLE, KeyBinding.OPEN_CONSOLE),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_LINKED_FILES(Localization.lang(\"Copy linked files to folder...\")),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_DOI(Localization.lang(\"Copy DOI url\")),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    ABBREVIATE(Localization.lang(\"Abbreviate journal names\")),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    ABBREVIATE_ISO(\"ISO\", Localization.lang(\"Abbreviate journal names of the selected entries (ISO abbreviation)\"), KeyBinding.ABBREVIATE),"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    ABBREVIATE_MEDLINE(\"MEDLINE\", Localization.lang(\"Abbreviate journal names of the selected entries (MEDLINE abbreviation)\")),"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    UNABBREVIATE(Localization.lang(\"Unabbreviate journal names\"), Localization.lang(\"Unabbreviate journal names of the selected entries\"), KeyBinding.UNABBREVIATE),"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    MANAGE_CUSTOM_EXPORTS(Localization.lang(\"Manage custom exports\")),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    MANAGE_CUSTOM_IMPORTS(Localization.lang(\"Manage custom imports\")),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    CUSTOMIZE_ENTRY_TYPES(Localization.lang(\"Customize entry types\")),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    SETUP_GENERAL_FIELDS(Localization.lang(\"Set up general fields\")),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    MANAGE_EXTERNAL_FILETYPES(Localization.lang(\"Manage external file types\")),"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    MANAGE_PROTECTED_TERMS(Localization.lang(\"Manage protected terms\")),"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    BIBTEX_KEY_PATTERN(Localization.lang(\"BibTeX key patterns\")),"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    SHOW_PREFS(Localization.lang(\"Preferences\")),"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    MANAGE_JOURNALS(Localization.lang(\"Manage journal abbreviations\")),"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    CUSTOMIZE_KEYBINDING(Localization.lang(\"Customize key bindings\"), IconTheme.JabRefIcons.KEY_BINDINGS),"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    MANAGE_CONTENT_SELECTORS(Localization.lang(\"Manage content selectors\"), IconTheme.JabRefIcons.PREFERENCES),"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    MANAGE_CITE_KEY_PATTERNS(Localization.lang(\"BibTeX key patterns\")),"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    EDIT_ENTRY(Localization.lang(\"Open entry editor\"), IconTheme.JabRefIcons.EDIT_ENTRY, KeyBinding.EDIT_ENTRY),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    SHOW_PDF_VIEWER(Localization.lang(\"Open document viewer\"), IconTheme.JabRefIcons.PDF_FILE),"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    TOGGLE_PREVIEW(Localization.lang(\"Entry preview\"), IconTheme.JabRefIcons.TOGGLE_ENTRY_PREVIEW, KeyBinding.TOGGLE_ENTRY_PREVIEW),"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    NEXT_PREVIEW_STYLE(Localization.lang(\"Next citation style\"), KeyBinding.NEXT_PREVIEW_LAYOUT),"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    PREVIOUS_PREVIEW_STYLE(Localization.lang(\"Previous citation style\"), KeyBinding.PREVIOUS_PREVIEW_LAYOUT),"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    SELECT_ALL(Localization.lang(\"Select all\"), KeyBinding.SELECT_ALL),"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    NEW_ENTRY(Localization.lang(\"New entry\"), IconTheme.JabRefIcons.ADD_ENTRY, KeyBinding.NEW_ENTRY),"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    NEW_ARTICLE(Localization.lang(\"New article\"), IconTheme.JabRefIcons.ADD_ENTRY),"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    NEW_ENTRY_FROM_PLAINTEX(Localization.lang(\"New entry from plain text\"), KeyBinding.NEW_FROM_PLAIN_TEXT),"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    LIBRARY_PROPERTIES(Localization.lang(\"Library properties\")),"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    EDIT_PREAMBLE(Localization.lang(\"Edit preamble\")),"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    EDIT_STRINGS(Localization.lang(\"Edit string constants\"), IconTheme.JabRefIcons.EDIT_STRINGS, KeyBinding.EDIT_STRINGS),"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    FIND_DUPLICATES(Localization.lang(\"Find duplicates\"), IconTheme.JabRefIcons.FIND_DUPLICATES),"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    MERGE_ENTRIES(Localization.lang(\"Merge entries\"), IconTheme.JabRefIcons.MERGE_ENTRIES),"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    RESOLVE_DUPLICATE_KEYS(Localization.lang(\"Resolve duplicate BibTeX keys\"), Localization.lang(\"Find and remove duplicate BibTeX keys\"), KeyBinding.RESOLVE_DUPLICATE_BIBTEX_KEYS),"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    CHECK_INTEGRITY(Localization.lang(\"Check integrity\"), KeyBinding.CHECK_INTEGRITY),"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    FIND_UNLINKED_FILES(Localization.lang(\"Search for unlinked local files\"), IconTheme.JabRefIcons.SEARCH, KeyBinding.FIND_UNLINKED_FILES),"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    AUTO_LINK_FILES(Localization.lang(\"Automatically set file links\"), IconTheme.JabRefIcons.AUTO_FILE_LINK, KeyBinding.AUTOMATICALLY_LINK_FILES),"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    LOOKUP_DOC_IDENTIFIER(Localization.lang(\"Search document identifier online\")),"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    LOOKUP_FULLTEXT(Localization.lang(\"Search full text documents online\"), IconTheme.JabRefIcons.FILE_SEARCH, KeyBinding.DOWNLOAD_FULL_TEXT),"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    GENERATE_CITE_KEY(Localization.lang(\"Generate BibTeX key\"), IconTheme.JabRefIcons.MAKE_KEY, KeyBinding.AUTOGENERATE_BIBTEX_KEYS),"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    GENERATE_CITE_KEYS(Localization.lang(\"Generate BibTeX keys\"), IconTheme.JabRefIcons.MAKE_KEY, KeyBinding.AUTOGENERATE_BIBTEX_KEYS),"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    DOWNLOAD_FULL_TEXT(Localization.lang(\"Search full text documents online\"), IconTheme.JabRefIcons.FILE_SEARCH, KeyBinding.DOWNLOAD_FULL_TEXT),"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    CLEANUP_ENTRIES(Localization.lang(\"Cleanup entries\"), IconTheme.JabRefIcons.CLEANUP_ENTRIES, KeyBinding.CLEANUP),"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    SET_FILE_LINKS(Localization.lang(\"Automatically set file links\"), KeyBinding.AUTOMATICALLY_LINK_FILES),"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    HELP(Localization.lang(\"Online help\"), IconTheme.JabRefIcons.HELP, KeyBinding.HELP),"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    HELP_KEY_PATTERNS(Localization.lang(\"Help on key patterns\"), IconTheme.JabRefIcons.HELP, KeyBinding.HELP),"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    HELP_REGEX_SEARCH(Localization.lang(\"Help on regular expression search\"), IconTheme.JabRefIcons.HELP, KeyBinding.HELP),"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    HELP_NAME_FORMATTER(Localization.lang(\"Help on Name Formatting\"), IconTheme.JabRefIcons.HELP, KeyBinding.HELP),"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    HELP_SPECIAL_FIELDS(Localization.lang(\"Help on special fields\"), IconTheme.JabRefIcons.HELP, KeyBinding.HELP),"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    WEB_MENU(Localization.lang(\"JabRef resources\")),"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    OPEN_WEBPAGE(Localization.lang(\"Website\"), Localization.lang(\"Opens JabRef\u0027s website\")),"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    OPEN_FACEBOOK(\"Facebook\", Localization.lang(\"Opens JabRef\u0027s Facebook page\"), IconTheme.JabRefIcons.FACEBOOK),"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    OPEN_TWITTER(\"Twitter\", Localization.lang(\"Opens JabRef\u0027s Twitter page\"), IconTheme.JabRefIcons.TWITTER),"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    OPEN_BLOG(Localization.lang(\"Blog\"), Localization.lang(\"Opens JabRef\u0027s blog\"), IconTheme.JabRefIcons.BLOG),"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    OPEN_DEV_VERSION_LINK(Localization.lang(\"Development version\"), Localization.lang(\"Opens a link where the current development version can be downloaded\")),"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    OPEN_CHANGELOG(Localization.lang(\"View change log\"), Localization.lang(\"See what has been changed in the JabRef versions\")),"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    FORK_ME(Localization.lang(\"Fork me on GitHub\"), Localization.lang(\"Opens JabRef\u0027s GitHub page\"), IconTheme.JabRefIcons.GITHUB),"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    DONATE(Localization.lang(\"Donate to JabRef\"), Localization.lang(\"Donate to JabRef\"), IconTheme.JabRefIcons.DONATE),"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    OPEN_FORUM(Localization.lang(\"Online help forum\"), Localization.lang(\"Online help forum\"), IconTheme.JabRefIcons.FORUM),"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    ERROR_CONSOLE(Localization.lang(\"View event log\"), Localization.lang(\"Display all error messages\")),"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    SEARCH_FOR_UPDATES(Localization.lang(\"Check for updates\")),"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    ABOUT(Localization.lang(\"About JabRef\"), Localization.lang(\"About JabRef\"));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String text;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Optional\u003cJabRefIcon\u003e icon;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Optional\u003cKeyBinding\u003e keyBinding;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    StandardActions(String text) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        this(text, \"\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    StandardActions(String text, IconTheme.JabRefIcons icon) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d \"\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        this.icon \u003d Optional.of(icon);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        this.keyBinding \u003d Optional.empty();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    StandardActions(String text, IconTheme.JabRefIcons icon, KeyBinding keyBinding) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d \"\";"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        this.icon \u003d Optional.of(icon);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        this.keyBinding \u003d Optional.of(keyBinding);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    StandardActions(String text, String description, IconTheme.JabRefIcons icon) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        this.icon \u003d Optional.of(icon);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        this.keyBinding \u003d Optional.empty();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    StandardActions(String text, String description, IconTheme.JabRefIcons icon, KeyBinding keyBinding) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        this.icon \u003d Optional.of(icon);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        this.keyBinding \u003d Optional.of(keyBinding);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    StandardActions(String text, KeyBinding keyBinding) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d \"\";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        this.keyBinding \u003d Optional.of(keyBinding);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        this.icon \u003d Optional.empty();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    StandardActions(String text, String description) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        this.icon \u003d Optional.empty();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        this.keyBinding \u003d Optional.empty();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    StandardActions(String text, String description, KeyBinding keyBinding) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        this.icon \u003d Optional.empty();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        this.keyBinding \u003d Optional.of(keyBinding);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cJabRefIcon\u003e getIcon() {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        return icon;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cKeyBinding\u003e getKeyBinding() {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        return keyBinding;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getText() {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RonakLakhotia": 2,
      "-": 236
    }
  },
  {
    "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package org.jabref.gui.fieldeditors;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.net.MalformedURLException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "import java.util.function.BiPredicate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.xml.transform.TransformerException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.Observable;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.property.BooleanProperty;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.property.DoubleProperty;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.property.SimpleBooleanProperty;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.property.SimpleDoubleProperty;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.property.StringProperty;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert.AlertType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ButtonBar.ButtonData;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ButtonType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.AbstractViewModel;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.DialogService;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.desktop.JabRefDesktop;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.externalfiles.FileDownloadTask;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.externalfiletype.ExternalFileType;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.externalfiletype.ExternalFileTypes;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.filelist.LinkedFileEditDialogView;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.icon.IconTheme;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.icon.JabRefIcon;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.util.BackgroundTask;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.util.TaskExecutor;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.externalfiles.LinkedFileHandler;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.l10n.Localization;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.net.URLDownload;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.xmp.XmpPreferences;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.xmp.XmpUtilWriter;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.database.BibDatabaseContext;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.entry.BibEntry;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.entry.LinkedFile;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.metadata.FilePreferences;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.strings.StringUtil;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "import org.jabref.model.util.OptionalUtil;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.preferences.JabRefPreferences;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "import org.slf4j.Logger;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "import org.slf4j.LoggerFactory;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "public class LinkedFileViewModel extends AbstractViewModel {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger LOGGER \u003d LoggerFactory.getLogger(LinkedFileViewModel.class);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private final LinkedFile linkedFile;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private final BibDatabaseContext databaseContext;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    private final DoubleProperty downloadProgress \u003d new SimpleDoubleProperty(-1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    private final BooleanProperty downloadOngoing \u003d new SimpleBooleanProperty(false);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    private final BooleanProperty isAutomaticallyFound \u003d new SimpleBooleanProperty(false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    private final BooleanProperty canWriteXMPMetadata \u003d new SimpleBooleanProperty(false);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    private final DialogService dialogService;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    private final BibEntry entry;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    private final TaskExecutor taskExecutor;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    private final FilePreferences filePreferences;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    private final XmpPreferences xmpPreferences;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    private final LinkedFileHandler linkedFileHandler;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public LinkedFileViewModel(LinkedFile linkedFile,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                               BibEntry entry,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                               BibDatabaseContext databaseContext,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                               TaskExecutor taskExecutor,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                               DialogService dialogService,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                               JabRefPreferences preferences) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        this.linkedFile \u003d linkedFile;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filePreferences \u003d preferences.getFilePreferences();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        this.linkedFileHandler \u003d new LinkedFileHandler(linkedFile, entry, databaseContext, filePreferences);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        this.databaseContext \u003d databaseContext;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        this.entry \u003d entry;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        this.dialogService \u003d dialogService;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        this.taskExecutor \u003d taskExecutor;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        xmpPreferences \u003d preferences.getXMPPreferences();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        downloadOngoing.bind(downloadProgress.greaterThanOrEqualTo(0).and(downloadProgress.lessThan(1)));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        canWriteXMPMetadata.setValue(!linkedFile.isOnlineLink() \u0026\u0026 linkedFile.getFileType().equalsIgnoreCase(\"pdf\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    public BooleanProperty canWriteXMPMetadataProperty() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        return canWriteXMPMetadata;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isAutomaticallyFound() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        return isAutomaticallyFound.get();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    public BooleanProperty isAutomaticallyFoundProperty() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        return isAutomaticallyFound;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    public BooleanProperty downloadOngoingProperty() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        return downloadOngoing;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    public DoubleProperty downloadProgressProperty() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        return downloadProgress;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    public StringProperty linkProperty() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        return linkedFile.linkProperty();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    public StringProperty descriptionProperty() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        return linkedFile.descriptionProperty();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        return linkedFile.getDescription();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescriptionAndLink() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        if (StringUtil.isBlank(linkedFile.getDescription())) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            return linkedFile.getLink();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            return linkedFile.getDescription() + \" (\" + linkedFile.getLink() + \")\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cPath\u003e findIn(List\u003cPath\u003e directories) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        return linkedFile.findIn(directories);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "     * TODO: Be a bit smarter and try to infer correct icon, for example using {@link"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "     * org.jabref.gui.externalfiletype.ExternalFileTypes#getExternalFileTypeByName(String)}"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    public JabRefIcon getTypeIcon() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        return IconTheme.JabRefIcons.PDF_FILE;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    public void markAsAutomaticallyFound() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        isAutomaticallyFound.setValue(true);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    public void acceptAsLinked() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        isAutomaticallyFound.setValue(false);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    public Observable[] getObservables() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cObservable\u003e observables \u003d new ArrayList\u003c\u003e(Arrays.asList(linkedFile.getObservables()));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        observables.add(downloadOngoing);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        observables.add(downloadProgress);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        observables.add(isAutomaticallyFound);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        return observables.toArray(new Observable[observables.size()]);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    public void open() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cExternalFileType\u003e type \u003d ExternalFileTypes.getInstance().fromLinkedFile(linkedFile, true);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean successful \u003d JabRefDesktop.openExternalFileAnyFormat(databaseContext, linkedFile.getLink(), type);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!successful) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                dialogService.showErrorDialogAndWait(Localization.lang(\"File not found\"), Localization.lang(\"Could not find file \u0027%0\u0027.\", linkedFile.getLink()));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            dialogService.showErrorDialogAndWait(Localization.lang(\"Error opening file \u0027%0\u0027.\", linkedFile.getLink()), e);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    public void openFolder() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            Path path \u003d null;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            // absolute path"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Paths.get(linkedFile.getLink()).isAbsolute()) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                path \u003d Paths.get(linkedFile.getLink());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "                // relative to file folder"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                for (Path folder : databaseContext.getFileDirectoriesAsPaths(filePreferences)) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                    Path file \u003d folder.resolve(linkedFile.getLink());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (Files.exists(file)) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                        path \u003d file;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            if (path !\u003d null) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                JabRefDesktop.openFolderAndSelectFile(path);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                dialogService.showErrorDialogAndWait(Localization.lang(\"File not found\"));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            LOGGER.debug(\"Cannot open folder\", ex);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    public void renameToSuggestion() {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        renameFileToName(linkedFileHandler.getSuggestedFileName());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    public void askForNameAndRename() {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        String oldFile \u003d this.linkedFile.getLink();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        Path oldFilePath \u003d Paths.get(oldFile);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        Optional\u003cString\u003e askedFileName \u003d dialogService.showInputDialogWithDefaultAndWait(Localization.lang(\"Rename file\"), Localization.lang(\"New Filename\"), oldFilePath.getFileName().toString());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        askedFileName.ifPresent(this::renameFileToName);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    public void renameFileToName(String targetFileName) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        if (linkedFile.isOnlineLink()) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            // Cannot rename remote links"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        Optional\u003cPath\u003e file \u003d linkedFile.findIn(databaseContext, filePreferences);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        if (file.isPresent()) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            performRenameWithConflictCheck(targetFileName);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            dialogService.showErrorDialogAndWait(Localization.lang(\"File not found\"), Localization.lang(\"Could not find file \u0027%0\u0027.\", linkedFile.getLink()));"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    private void performRenameWithConflictCheck(String targetFileName) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        Optional\u003cPath\u003e fileConflictCheck \u003d linkedFileHandler.findExistingFile(linkedFile, entry, targetFileName);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        if (fileConflictCheck.isPresent()) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean confirmOverwrite \u003d dialogService.showConfirmationDialogAndWait("
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                    Localization.lang(\"File exists\"),"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "                    Localization.lang(\"\u0027%0\u0027 exists. Overwrite file?\", targetFileName),"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                    Localization.lang(\"Overwrite\"));"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            if (confirmOverwrite) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                    Files.delete(fileConflictCheck.get());"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "                    dialogService.showErrorDialogAndWait("
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "                            Localization.lang(\"Rename failed\"),"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                            Localization.lang(\"JabRef cannot access the file because it is being used by another process.\"),"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "                            e);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            linkedFileHandler.renameToName(targetFileName);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "            dialogService.showErrorDialogAndWait(Localization.lang(\"Rename failed\"), Localization.lang(\"JabRef cannot access the file because it is being used by another process.\"));"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    public void moveToDefaultDirectory() {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        if (linkedFile.isOnlineLink()) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "            // Cannot move remote links"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        // Get target folder"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        Optional\u003cPath\u003e fileDir \u003d databaseContext.getFirstExistingFileDir(filePreferences);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!fileDir.isPresent()) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            dialogService.showErrorDialogAndWait(Localization.lang(\"Move file\"), Localization.lang(\"File directory is not set or does not exist!\"));"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        Optional\u003cPath\u003e file \u003d linkedFile.findIn(databaseContext, filePreferences);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        if ((file.isPresent())) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            // Found the linked file, so move it"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                linkedFileHandler.moveToDefaultDirectory();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException exception) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "                dialogService.showErrorDialogAndWait("
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "                        Localization.lang(\"Move file\"),"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "                        Localization.lang(\"Could not move file \u0027%0\u0027.\", file.get().toString()),"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "                        exception);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            // File doesn\u0027t exist, so we can\u0027t move it."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            dialogService.showErrorDialogAndWait(Localization.lang(\"File not found\"), Localization.lang(\"Could not find file \u0027%0\u0027.\", linkedFile.getLink()));"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "     * Gets the filename for the current linked file and compares it to the new suggested filename."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "     * @return true if the suggested filename is same as current filename."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "    public boolean isGeneratedNameSameAsOriginal() {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "        Path file \u003d Paths.get(this.linkedFile.getLink());"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "        String currentFileName \u003d file.getFileName().toString();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "        String suggestedFileName \u003d this.linkedFileHandler.getSuggestedFileName();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "        return currentFileName.equals(suggestedFileName);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "     * Compares suggested filepath of current linkedFile with existing filepath."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "     * @return true if suggested filepath is same as existing filepath."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "    public boolean isGeneratedPathSameAsOriginal() {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "        Optional\u003cPath\u003e newDir \u003d databaseContext.getFirstExistingFileDir(filePreferences);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "        Optional\u003cPath\u003e currentDir \u003d linkedFile.findIn(databaseContext, filePreferences);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "        BiPredicate\u003cPath, Path\u003e equality \u003d (fileA, fileB) -\u003e {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "                return Files.isSameFile(fileA, fileB);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "        };"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "        return OptionalUtil.equals(newDir, currentDir, equality);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "    public void moveToDefaultDirectoryAndRename() {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        moveToDefaultDirectory();"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        renameToSuggestion();"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asks the user for confirmation that he really wants to the delete the file from disk (or just remove the link)."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return true if the linked file should be removed afterwards from the entry (i.e because it was deleted"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "     * successfully, does not exist in the first place or the user choose to remove it)"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean delete() {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        Optional\u003cPath\u003e file \u003d linkedFile.findIn(databaseContext, filePreferences);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!file.isPresent()) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "            LOGGER.warn(\"Could not find file \" + linkedFile.getLink());"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        ButtonType removeFromEntry \u003d new ButtonType(Localization.lang(\"Remove from entry\"), ButtonData.YES);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        ButtonType deleteFromEntry \u003d new ButtonType(Localization.lang(\"Delete from disk\"));"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        Optional\u003cButtonType\u003e buttonType \u003d dialogService.showCustomButtonDialogAndWait(AlertType.INFORMATION,"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                Localization.lang(\"Delete \u0027%0\u0027\", file.get().toString()),"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "                Localization.lang(\"Delete the selected file permanently from disk, or just remove the file from the entry? Pressing Delete will delete the file permanently from disk.\"),"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "                removeFromEntry, deleteFromEntry, ButtonType.CANCEL);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "        if (buttonType.isPresent()) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "            if (buttonType.get().equals(removeFromEntry)) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "            if (buttonType.get().equals(deleteFromEntry)) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                    Files.delete(file.get());"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "                } catch (IOException ex) {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "                    dialogService.showErrorDialogAndWait(Localization.lang(\"Cannot delete file\"), Localization.lang(\"File permission error\"));"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                    LOGGER.warn(\"File permission error while deleting: \" + linkedFile, ex);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "    public void edit() {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "        LinkedFileEditDialogView dialog \u003d new LinkedFileEditDialogView(this.linkedFile);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "        Optional\u003cLinkedFile\u003e editedFile \u003d dialog.showAndWait();"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        editedFile.ifPresent(file -\u003e {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "            this.linkedFile.setLink(file.getLink());"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "            this.linkedFile.setDescription(file.getDescription());"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "            this.linkedFile.setFileType(file.getFileType());"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "    public void writeXMPMetadata() {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        // Localization.lang(\"Writing XMP-metadata...\")"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "        BackgroundTask\u003cVoid\u003e writeTask \u003d BackgroundTask.wrap(() -\u003e {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cPath\u003e file \u003d linkedFile.findIn(databaseContext, filePreferences);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!file.isPresent()) {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "                // TODO: Print error message"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "                // Localization.lang(\"PDF does not exist\");"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "                    XmpUtilWriter.writeXmp(file.get(), entry, databaseContext.getDatabase(), xmpPreferences);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "                } catch (IOException | TransformerException ex) {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "                    // TODO: Print error message"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "                    // Localization.lang(\"Error while writing\") + \" \u0027\" + file.toString() + \"\u0027: \" + ex;"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        // Localization.lang(\"Finished writing XMP-metadata.\")"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "        // TODO: Show progress"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "        taskExecutor.execute(writeTask);"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "    public void download() {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!linkedFile.isOnlineLink()) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new UnsupportedOperationException(\"In order to download the file it has to be an online link\");"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cPath\u003e targetDirectory \u003d databaseContext.getFirstExistingFileDir(filePreferences);"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!targetDirectory.isPresent()) {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "                dialogService.showErrorDialogAndWait(Localization.lang(\"Download file\"), Localization.lang(\"File directory is not set or does not exist!\"));"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "            URLDownload urlDownload \u003d new URLDownload(linkedFile.getLink());"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "            BackgroundTask\u003cPath\u003e downloadTask \u003d prepareDownloadTask(targetDirectory.get(), urlDownload);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "            downloadTask.onSuccess(destination -\u003e {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "                LinkedFile newLinkedFile \u003d LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences));"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "                linkedFile.setLink(newLinkedFile.getLink());"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "                linkedFile.setFileType(newLinkedFile.getFileType());"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "            downloadProgress.bind(downloadTask.workDonePercentageProperty());"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "            taskExecutor.execute(downloadTask);"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (MalformedURLException exception) {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "            dialogService.showErrorDialogAndWait(Localization.lang(\"Invalid URL\"), exception);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "    public BackgroundTask\u003cPath\u003e prepareDownloadTask(Path targetDirectory, URLDownload urlDownload) {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "        BackgroundTask\u003cPath\u003e downloadTask \u003d BackgroundTask"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "                .wrap(() -\u003e {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "                    Optional\u003cExternalFileType\u003e suggestedType \u003d inferFileType(urlDownload);"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "                    String suggestedTypeName \u003d suggestedType.map(ExternalFileType::getName).orElse(\"\");"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "                    linkedFile.setFileType(suggestedTypeName);"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "                    String suggestedName \u003d linkedFileHandler.getSuggestedFileName();"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "                    return targetDirectory.resolve(suggestedName);"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "                })"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "                .then(destination -\u003e new FileDownloadTask(urlDownload.getSource(), destination))"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "                .onFailure(exception -\u003e dialogService.showErrorDialogAndWait(\"Download failed\", exception));"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "        return downloadTask;"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "    private Optional\u003cExternalFileType\u003e inferFileType(URLDownload urlDownload) {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "        Optional\u003cExternalFileType\u003e suggestedType \u003d inferFileTypeFromMimeType(urlDownload);"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        // If we did not find a file type from the MIME type, try based on extension:"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!suggestedType.isPresent()) {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "            suggestedType \u003d inferFileTypeFromURL(urlDownload.getSource().toExternalForm());"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        return suggestedType;"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "    private Optional\u003cExternalFileType\u003e inferFileTypeFromMimeType(URLDownload urlDownload) {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "        String mimeType \u003d urlDownload.getMimeType();"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "        if (mimeType !\u003d null) {"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "            LOGGER.debug(\"MIME Type suggested: \" + mimeType);"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "            return ExternalFileTypes.getInstance().getExternalFileTypeByMimeType(mimeType);"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "    private Optional\u003cExternalFileType\u003e inferFileTypeFromURL(String url) {"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "        return URLUtil.getSuffix(url)"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "                      .flatMap(extension -\u003e ExternalFileTypes.getInstance().getExternalFileTypeByExt(extension));"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "    public LinkedFile getFile() {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "        return linkedFile;"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RonakLakhotia": 33,
      "-": 427
    }
  },
  {
    "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFilesEditor.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package org.jabref.gui.fieldeditors;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.binding.Bindings;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Parent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ContextMenu;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.MenuItem;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ProgressBar;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.SeparatorMenuItem;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Tooltip;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.ClipboardContent;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.DragEvent;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.Dragboard;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.MouseButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.MouseEvent;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.TransferMode;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.Globals;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.DialogService;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.DragAndDropDataFormats;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.autocompleter.AutoCompleteSuggestionProvider;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.keyboard.KeyBinding;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.util.TaskExecutor;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.util.ViewModelListCellFactory;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.integrity.FieldCheckers;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.l10n.Localization;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.database.BibDatabaseContext;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.entry.BibEntry;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.entry.LinkedFile;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.preferences.JabRefPreferences;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "import com.airhacks.afterburner.views.ViewLoader;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "import de.jensd.fx.glyphs.materialdesignicons.MaterialDesignIcon;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "import de.jensd.fx.glyphs.materialdesignicons.utils.MaterialDesignIconFactory;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "public class LinkedFilesEditor extends HBox implements FieldEditorFX {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML private final LinkedFilesEditorViewModel viewModel;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML private ListView\u003cLinkedFileViewModel\u003e listView;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public LinkedFilesEditor(String fieldName, DialogService dialogService, BibDatabaseContext databaseContext, TaskExecutor taskExecutor, AutoCompleteSuggestionProvider\u003c?\u003e suggestionProvider,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                             FieldCheckers fieldCheckers,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                             JabRefPreferences preferences) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        this.viewModel \u003d new LinkedFilesEditorViewModel(fieldName, suggestionProvider, dialogService, databaseContext, taskExecutor, fieldCheckers, preferences);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        ViewLoader.view(this)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                  .root(this)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                  .load();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        ViewModelListCellFactory\u003cLinkedFileViewModel\u003e cellFactory \u003d new ViewModelListCellFactory\u003cLinkedFileViewModel\u003e()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                .withTooltip(LinkedFileViewModel::getDescription)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                .withGraphic(LinkedFilesEditor::createFileDisplay)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                .withContextMenu(this::createContextMenuForFile)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                .withOnMouseClickedEvent(this::handleItemMouseClick)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                .setOnDragDetected(this::handleOnDragDetected)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                .setOnDragDropped(this::handleOnDragDropped)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                .setOnDragOver(this::handleOnDragOver);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        listView.setCellFactory(cellFactory);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        Bindings.bindContentBidirectional(listView.itemsProperty().get(), viewModel.filesProperty());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        setUpKeyBindings();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleOnDragOver(LinkedFileViewModel originalItem, DragEvent event) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        if ((event.getGestureSource() !\u003d originalItem) \u0026\u0026 event.getDragboard().hasContent(DragAndDropDataFormats.LINKED_FILE)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            event.acceptTransferModes(TransferMode.MOVE);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleOnDragDetected(@SuppressWarnings(\"unused\") LinkedFileViewModel linkedFile, MouseEvent event) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        LinkedFile selectedItem \u003d listView.getSelectionModel().getSelectedItem().getFile();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        if (selectedItem !\u003d null) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            ClipboardContent content \u003d new ClipboardContent();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            Dragboard dragboard \u003d listView.startDragAndDrop(TransferMode.MOVE);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            //We have to use the model class here, as the content of the dragboard must be serializable"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            content.put(DragAndDropDataFormats.LINKED_FILE, selectedItem);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            dragboard.setContent(content);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        event.consume();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleOnDragDropped(LinkedFileViewModel originalItem, DragEvent event) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        Dragboard dragboard \u003d event.getDragboard();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean success \u003d false;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cLinkedFileViewModel\u003e items \u003d listView.itemsProperty().get();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        if (dragboard.hasContent(DragAndDropDataFormats.LINKED_FILE)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            LinkedFile linkedFile \u003d (LinkedFile) dragboard.getContent(DragAndDropDataFormats.LINKED_FILE);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            LinkedFileViewModel transferedItem \u003d null;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            int draggedIdx \u003d 0;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c items.size(); i++) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                if (items.get(i).getFile().equals(linkedFile)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                    draggedIdx \u003d i;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                    transferedItem \u003d items.get(i);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            int thisIdx \u003d items.indexOf(originalItem);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            items.set(draggedIdx, originalItem);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            items.set(thisIdx, transferedItem);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            success \u003d true;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        event.setDropCompleted(success);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        event.consume();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Node createFileDisplay(LinkedFileViewModel linkedFile) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        Node icon \u003d linkedFile.getTypeIcon().getGraphicNode();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        icon.setOnMouseClicked(event -\u003e linkedFile.open());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        Text link \u003d new Text();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        link.textProperty().bind(linkedFile.linkProperty());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        Text desc \u003d new Text();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        desc.textProperty().bind(linkedFile.descriptionProperty());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        ProgressBar progressIndicator \u003d new ProgressBar();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        progressIndicator.progressProperty().bind(linkedFile.downloadProgressProperty());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        progressIndicator.visibleProperty().bind(linkedFile.downloadOngoingProperty());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        HBox info \u003d new HBox(8);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        info.setStyle(\"-fx-padding: 0.5em 0 0.5em 0;\"); // To align with buttons below which also have 0.5em padding"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        info.getChildren().setAll(icon, link, desc, progressIndicator);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        Button acceptAutoLinkedFile \u003d MaterialDesignIconFactory.get().createIconButton(MaterialDesignIcon.BRIEFCASE_CHECK);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        acceptAutoLinkedFile.setTooltip(new Tooltip(Localization.lang(\"This file was found automatically. Do you want to link it to this entry?\")));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        acceptAutoLinkedFile.visibleProperty().bind(linkedFile.isAutomaticallyFoundProperty());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        acceptAutoLinkedFile.setOnAction(event -\u003e linkedFile.acceptAsLinked());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        acceptAutoLinkedFile.getStyleClass().setAll(\"icon-button\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        Button writeXMPMetadata \u003d MaterialDesignIconFactory.get().createIconButton(MaterialDesignIcon.IMPORT);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        writeXMPMetadata.setTooltip(new Tooltip(Localization.lang(\"Write BibTeXEntry as XMP-metadata to PDF.\")));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        writeXMPMetadata.visibleProperty().bind(linkedFile.canWriteXMPMetadataProperty());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        writeXMPMetadata.setOnAction(event -\u003e linkedFile.writeXMPMetadata());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        writeXMPMetadata.getStyleClass().setAll(\"icon-button\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        HBox container \u003d new HBox(10);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        container.setPrefHeight(Double.NEGATIVE_INFINITY);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        container.getChildren().addAll(info, acceptAutoLinkedFile, writeXMPMetadata);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        return container;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setUpKeyBindings() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        listView.addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cKeyBinding\u003e keyBinding \u003d Globals.getKeyPrefs().mapToKeyBinding(event);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            if (keyBinding.isPresent()) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                switch (keyBinding.get()) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                    case DELETE_ENTRY:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                        LinkedFileViewModel selectedItem \u003d listView.getSelectionModel().getSelectedItem();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (selectedItem !\u003d null) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                            viewModel.deleteFile(selectedItem);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                        event.consume();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                        // Pass other keys to children"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    public LinkedFilesEditorViewModel getViewModel() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        return viewModel;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    public void bindToEntry(BibEntry entry) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        viewModel.bindToEntry(entry);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    public Parent getNode() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    private void addNewFile(ActionEvent event) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        viewModel.addNewFile();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    private void fetchFulltext(ActionEvent event) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        viewModel.fetchFulltext();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    private void addFromURL(ActionEvent event) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        viewModel.addFromURL();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    private ContextMenu createContextMenuForFile(LinkedFileViewModel linkedFile) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        ContextMenu menu \u003d new ContextMenu();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        MenuItem edit \u003d new MenuItem(Localization.lang(\"Edit\"));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        edit.setOnAction(event -\u003e linkedFile.edit());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        MenuItem openFile \u003d new MenuItem(Localization.lang(\"Open\"));"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        openFile.setOnAction(event -\u003e linkedFile.open());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        MenuItem openFolder \u003d new MenuItem(Localization.lang(\"Open folder\"));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        openFolder.setOnAction(event -\u003e linkedFile.openFolder());"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        MenuItem download \u003d new MenuItem(Localization.lang(\"Download file\"));"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        download.setOnAction(event -\u003e linkedFile.download());"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        MenuItem renameFile \u003d new MenuItem(Localization.lang(\"Rename file to defined pattern\"));"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        renameFile.setOnAction(event -\u003e linkedFile.renameToSuggestion());"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "        renameFile.setDisable(linkedFile.getFile().isOnlineLink() || linkedFile.isGeneratedNameSameAsOriginal());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        MenuItem renameFileName \u003d new MenuItem(Localization.lang(\"Rename file to a given name\"));"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        renameFileName.setOnAction(event -\u003e linkedFile.askForNameAndRename());"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        renameFileName.setDisable(linkedFile.getFile().isOnlineLink());"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        MenuItem moveFile \u003d new MenuItem(Localization.lang(\"Move file to file directory\"));"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        moveFile.setOnAction(event -\u003e linkedFile.moveToDefaultDirectory());"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "        moveFile.setDisable(linkedFile.getFile().isOnlineLink() || linkedFile.isGeneratedPathSameAsOriginal());"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        MenuItem renameAndMoveFile \u003d new MenuItem(Localization.lang(\"Move file to file directory and rename file\"));"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        renameAndMoveFile.setOnAction(event -\u003e linkedFile.moveToDefaultDirectoryAndRename());"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "        renameAndMoveFile.setDisable(linkedFile.getFile().isOnlineLink() || linkedFile.isGeneratedPathSameAsOriginal());"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        MenuItem deleteFile \u003d new MenuItem(Localization.lang(\"Permanently delete local file\"));"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteFile.setOnAction(event -\u003e viewModel.deleteFile(linkedFile));"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteFile.setDisable(linkedFile.getFile().isOnlineLink());"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        MenuItem deleteLink \u003d new MenuItem(Localization.lang(\"Remove link\"));"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteLink.setOnAction(event -\u003e viewModel.removeFileLink(linkedFile));"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        menu.getItems().add(edit);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        menu.getItems().add(new SeparatorMenuItem());"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        menu.getItems().addAll(openFile, openFolder);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        menu.getItems().add(new SeparatorMenuItem());"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        if (linkedFile.getFile().isOnlineLink()) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "            menu.getItems().add(download);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        menu.getItems().addAll(renameFile, renameFileName, moveFile, renameAndMoveFile, deleteLink, deleteFile);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        return menu;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleItemMouseClick(LinkedFileViewModel linkedFile, MouseEvent event) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        if (event.getButton().equals(MouseButton.PRIMARY) \u0026\u0026 (event.getClickCount() \u003d\u003d 2)) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            // Double click -\u003e edit"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            linkedFile.edit();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWeight() {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        return 2;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RonakLakhotia": 3,
      "-": 265
    }
  },
  {
    "path": "src/main/java/org/jabref/gui/keyboard/KeyBinding.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package org.jabref.gui.keyboard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.l10n.Localization;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public enum KeyBinding {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    ABBREVIATE(\"Abbreviate\", Localization.lang(\"Abbreviate journal names\"), \"ctrl+alt+A\", KeyBindingCategory.TOOLS),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    AUTOGENERATE_BIBTEX_KEYS(\"Autogenerate BibTeX keys\", Localization.lang(\"Autogenerate BibTeX keys\"), \"ctrl+G\", KeyBindingCategory.QUALITY),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    ACCEPT(\"Accept\", Localization.lang(\"Accept\"), \"ctrl+ENTER\", KeyBindingCategory.EDIT),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    AUTOMATICALLY_LINK_FILES(\"Automatically link files\", Localization.lang(\"Automatically set file links\"), \"F7\", KeyBindingCategory.QUALITY),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    CHECK_INTEGRITY(\"Check integrity\", Localization.lang(\"Check integrity\"), \"ctrl+F8\", KeyBindingCategory.QUALITY),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    CLEANUP(\"Cleanup\", Localization.lang(\"Cleanup entries\"), \"alt+F8\", KeyBindingCategory.QUALITY),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    CLOSE_DATABASE(\"Close library\", Localization.lang(\"Close library\"), \"ctrl+W\", KeyBindingCategory.FILE),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    CLOSE_ENTRY(\"Close entry\", Localization.lang(\"Close entry\"), \"ctrl+E\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    CLOSE(\"Close dialog\", Localization.lang(\"Close dialog\"), \"Esc\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY(\"Copy\", Localization.lang(\"Copy\"), \"ctrl+C\", KeyBindingCategory.EDIT),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_TITLE(\"Copy title\", Localization.lang(\"Copy title\"), \"ctrl+shift+alt+T\", KeyBindingCategory.EDIT),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_CITE_BIBTEX_KEY(\"Copy \\\\cite{BibTeX key}\", Localization.lang(\"Copy \\\\cite{BibTeX key}\"), \"ctrl+K\", KeyBindingCategory.EDIT),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_BIBTEX_KEY(\"Copy BibTeX key\", Localization.lang(\"Copy BibTeX key\"), \"ctrl+shift+K\", KeyBindingCategory.EDIT),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_BIBTEX_KEY_AND_TITLE(\"Copy BibTeX key and title\", Localization.lang(\"Copy BibTeX key and title\"), \"ctrl+shift+alt+K\", KeyBindingCategory.EDIT),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_BIBTEX_KEY_AND_LINK(\"Copy BibTeX key and link\", Localization.lang(\"Copy BibTeX key and link\"), \"ctrl+alt+K\", KeyBindingCategory.EDIT),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    COPY_PREVIEW(\"Copy preview\", Localization.lang(\"Copy preview\"), \"ctrl+shift+C\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    CUT(\"Cut\", Localization.lang(\"Cut\"), \"ctrl+X\", KeyBindingCategory.EDIT),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    //We have to put Entry Editor Previous before, because otherwise the decrease font size is found first"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    ENTRY_EDITOR_PREVIOUS_PANEL_2(\"Entry editor, previous panel 2\", Localization.lang(\"Entry editor, previous panel 2\"), \"ctrl+MINUS\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    DECREASE_TABLE_FONT_SIZE(\"Decrease table font size\", Localization.lang(\"Decrease table font size\"), \"ctrl+MINUS\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    DELETE_ENTRY(\"Delete entry\", Localization.lang(\"Delete entry\"), \"DELETE\", KeyBindingCategory.BIBTEX),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    DEFAULT_DIALOG_ACTION(\"Execute default action in dialog\", Localization.lang(\"Execute default action in dialog\"), \"ctrl+ENTER\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    DOWNLOAD_FULL_TEXT(\"Look up full text documents\", Localization.lang(\"Look up full text documents\"), \"alt+F7\", KeyBindingCategory.QUALITY),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    EDIT_ENTRY(\"Edit entry\", Localization.lang(\"Edit entry\"), \"ctrl+E\", KeyBindingCategory.BIBTEX),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "    EXPORT(\"Export\", Localization.lang(\"Export\"), \"ctrl+alt+e\", KeyBindingCategory.FILE),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "    EXPORT_SELECTED(\"Export Selected\", Localization.lang(\"Export selected entries\"), \"ctrl+shift+e\", KeyBindingCategory.FILE),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    EDIT_STRINGS(\"Edit strings\", Localization.lang(\"Edit strings\"), \"ctrl+T\", KeyBindingCategory.BIBTEX),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    ENTRY_EDITOR_NEXT_ENTRY(\"Entry editor, next entry\", Localization.lang(\"Entry editor, next entry\"), \"alt+DOWN\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    ENTRY_EDITOR_NEXT_PANEL(\"Entry editor, next panel\", Localization.lang(\"Entry editor, next panel\"), \"ctrl+TAB\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    ENTRY_EDITOR_NEXT_PANEL_2(\"Entry editor, next panel 2\", Localization.lang(\"Entry editor, next panel 2\"), \"ctrl+PLUS\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    ENTRY_EDITOR_PREVIOUS_ENTRY(\"Entry editor, previous entry\", Localization.lang(\"Entry editor, previous entry\"), \"alt+UP\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    ENTRY_EDITOR_PREVIOUS_PANEL(\"Entry editor, previous panel\", Localization.lang(\"Entry editor, previous panel\"), \"ctrl+shift+TAB\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    FILE_LIST_EDITOR_MOVE_ENTRY_DOWN(\"File list editor, move entry down\", Localization.lang(\"File list editor, move entry down\"), \"ctrl+DOWN\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    FILE_LIST_EDITOR_MOVE_ENTRY_UP(\"File list editor, move entry up\", Localization.lang(\"File list editor, move entry up\"), \"ctrl+UP\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    FIND_UNLINKED_FILES(\"Find unlinked files\", Localization.lang(\"Find unlinked files\"), \"shift+F7\", KeyBindingCategory.QUALITY),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    FOCUS_ENTRY_TABLE(\"Focus entry table\", Localization.lang(\"Focus entry table\"), \"alt+1\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    HELP(\"Help\", Localization.lang(\"Help\"), \"F1\", KeyBindingCategory.FILE),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    IMPORT_INTO_CURRENT_DATABASE(\"Import into current library\", Localization.lang(\"Import into current library\"), \"ctrl+I\", KeyBindingCategory.FILE),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    IMPORT_INTO_NEW_DATABASE(\"Import into new library\", Localization.lang(\"Import into new library\"), \"ctrl+alt+I\", KeyBindingCategory.FILE),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    INCREASE_TABLE_FONT_SIZE(\"Increase table font size\", Localization.lang(\"Increase table font size\"), \"ctrl+PLUS\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    DEFAULT_TABLE_FONT_SIZE(\"Default table font size\", Localization.lang(\"Default table font size\"), \"ctrl+0\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    NEW_ARTICLE(\"New article\", Localization.lang(\"New article\"), \"ctrl+shift+A\", KeyBindingCategory.BIBTEX),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    NEW_BOOK(\"New book\", Localization.lang(\"New book\"), \"ctrl+shift+B\", KeyBindingCategory.BIBTEX),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    NEW_ENTRY(\"New entry\", Localization.lang(\"New entry\"), \"ctrl+N\", KeyBindingCategory.BIBTEX),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    NEW_FROM_PLAIN_TEXT(\"New from plain text\", Localization.lang(\"New from plain text\"), \"ctrl+shift+N\", KeyBindingCategory.BIBTEX),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    NEW_INBOOK(\"New inbook\", Localization.lang(\"New inbook\"), \"ctrl+shift+I\", KeyBindingCategory.BIBTEX),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    NEW_MASTERSTHESIS(\"New mastersthesis\", Localization.lang(\"New mastersthesis\"), \"ctrl+shift+M\", KeyBindingCategory.BIBTEX),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    NEW_PHDTHESIS(\"New phdthesis\", Localization.lang(\"New phdthesis\"), \"ctrl+shift+T\", KeyBindingCategory.BIBTEX),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    NEW_PROCEEDINGS(\"New proceedings\", Localization.lang(\"New proceedings\"), \"ctrl+shift+P\", KeyBindingCategory.BIBTEX),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    NEW_UNPUBLISHED(\"New unpublished\", Localization.lang(\"New unpublished\"), \"ctrl+shift+U\", KeyBindingCategory.BIBTEX),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    NEW_TECHREPORT(\"New technical report\", Localization.lang(\"New technical report\"), \"ctrl+shift+R\", KeyBindingCategory.BIBTEX),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    NEXT_PREVIEW_LAYOUT(\"Next preview layout\", Localization.lang(\"Next preview layout\"), \"F9\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    NEXT_LIBRARY(\"Next library\", Localization.lang(\"Next library\"), \"ctrl+PAGE_DOWN\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    OPEN_CONSOLE(\"Open terminal here\", Localization.lang(\"Open terminal here\"), \"ctrl+shift+L\", KeyBindingCategory.TOOLS),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    OPEN_DATABASE(\"Open library\", Localization.lang(\"Open library\"), \"ctrl+O\", KeyBindingCategory.FILE),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    OPEN_FILE(\"Open file\", Localization.lang(\"Open file\"), \"F4\", KeyBindingCategory.TOOLS),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    OPEN_FOLDER(\"Open folder\", Localization.lang(\"Open folder\"), \"ctrl+shift+O\", KeyBindingCategory.TOOLS),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    OPEN_OPEN_OFFICE_LIBRE_OFFICE_CONNECTION(\"Open OpenOffice/LibreOffice connection\", Localization.lang(\"Open OpenOffice/LibreOffice connection\"), \"alt+0\", KeyBindingCategory.TOOLS),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    OPEN_URL_OR_DOI(\"Open URL or DOI\", Localization.lang(\"Open URL or DOI\"), \"F3\", KeyBindingCategory.TOOLS),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    PASTE(\"Paste\", Localization.lang(\"Paste\"), \"ctrl+V\", KeyBindingCategory.EDIT),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    PULL_CHANGES_FROM_SHARED_DATABASE(\"Pull changes from shared database\", Localization.lang(\"Pull changes from shared database\"), \"ctrl+shift+R\", KeyBindingCategory.FILE),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    PREAMBLE_EDITOR_STORE_CHANGES(\"Preamble editor, store changes\", Localization.lang(\"Preamble editor, store changes\"), \"alt+S\", KeyBindingCategory.FILE),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    PREVIOUS_PREVIEW_LAYOUT(\"Previous preview layout\", Localization.lang(\"Previous preview layout\"), \"shift+F9\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    PREVIOUS_LIBRARY(\"Previous library\", Localization.lang(\"Previous library\"), \"ctrl+PAGE_UP\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    PUSH_TO_APPLICATION(\"Push to application\", Localization.lang(\"Push to application\"), \"ctrl+L\", KeyBindingCategory.TOOLS),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    QUIT_JABREF(\"Quit JabRef\", Localization.lang(\"Quit JabRef\"), \"ctrl+Q\", KeyBindingCategory.FILE),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    REDO(\"Redo\", Localization.lang(\"Redo\"), \"ctrl+Y\", KeyBindingCategory.EDIT),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    REFRESH_OO(\"Refresh OO\", Localization.lang(\"Refresh OpenOffice/LibreOffice\"), \"ctrl+alt+O\", KeyBindingCategory.TOOLS),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    REPLACE_STRING(\"Replace string\", Localization.lang(\"Replace string\"), \"ctrl+R\", KeyBindingCategory.SEARCH),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    RESOLVE_DUPLICATE_BIBTEX_KEYS(\"Resolve duplicate BibTeX keys\", Localization.lang(\"Resolve duplicate BibTeX keys\"), \"ctrl+shift+D\", KeyBindingCategory.BIBTEX),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    SAVE_ALL(\"Save all\", Localization.lang(\"Save all\"), \"ctrl+alt+S\", KeyBindingCategory.FILE),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    SAVE_DATABASE(\"Save library\", Localization.lang(\"Save library\"), \"ctrl+S\", KeyBindingCategory.FILE),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    SAVE_DATABASE_AS(\"Save library as ...\", Localization.lang(\"Save library as...\"), \"ctrl+shift+S\", KeyBindingCategory.FILE),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    SEARCH(\"Search\", Localization.lang(\"Search\"), \"ctrl+F\", KeyBindingCategory.SEARCH),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    SELECT_ALL(\"Select all\", Localization.lang(\"Select all\"), \"ctrl+A\", KeyBindingCategory.EDIT),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    SELECT_FIRST_ENTRY(\"Select first entry\", Localization.lang(\"Select first entry\"), \"HOME\", KeyBindingCategory.EDIT),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    SELECT_LAST_ENTRY(\"Select last entry\", Localization.lang(\"Select last entry\"), \"END\", KeyBindingCategory.EDIT),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    STRING_DIALOG_ADD_STRING(\"String dialog, add string\", Localization.lang(\"String dialog, add string\"), \"ctrl+N\", KeyBindingCategory.FILE),"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    STRING_DIALOG_REMOVE_STRING(\"String dialog, remove string\", Localization.lang(\"String dialog, remove string\"), \"shift+DELETE\", KeyBindingCategory.FILE),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    SYNCHRONIZE_FILES(\"Synchronize files\", Localization.lang(\"Synchronize files\"), \"ctrl+shift+F7\", KeyBindingCategory.QUALITY),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    TOGGLE_ENTRY_PREVIEW(\"Toggle entry preview\", Localization.lang(\"Toggle entry preview\"), \"alt+2\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    TOGGLE_GROUPS_INTERFACE(\"Toggle groups interface\", Localization.lang(\"Toggle groups interface\"), \"alt+3\", KeyBindingCategory.VIEW),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    UNABBREVIATE(\"Unabbreviate\", Localization.lang(\"Unabbreviate\"), \"ctrl+alt+shift+A\", KeyBindingCategory.TOOLS),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    UNDO(\"Undo\", Localization.lang(\"Undo\"), \"ctrl+Z\", KeyBindingCategory.EDIT),"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    WEB_SEARCH(\"Web search\", Localization.lang(\"Web search\"), \"alt+4\", KeyBindingCategory.SEARCH),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    WRITE_XMP(\"Write XMP\", Localization.lang(\"Write XMP\"), \"F6\", KeyBindingCategory.TOOLS),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    CLEAR_SEARCH(\"Clear search\", Localization.lang(\"Clear search\"), \"ESCAPE\", KeyBindingCategory.SEARCH);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String constant;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String localization;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String defaultBinding;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    private final KeyBindingCategory category;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    KeyBinding(String constantName, String localization, String defaultKeyBinding, KeyBindingCategory category) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        this.constant \u003d constantName;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        this.localization \u003d localization;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        this.defaultBinding \u003d defaultKeyBinding;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method returns the enum constant value"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getConstant() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        return constant;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getLocalization() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        return localization;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method returns the default key binding, the key(s) which are assigned"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The default key binding"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDefaultKeyBinding() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        return defaultBinding;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    public KeyBindingCategory getCategory() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RonakLakhotia": 2,
      "-": 128
    }
  },
  {
    "path": "src/main/java/org/jabref/gui/preferences/PreviewPreferencesTab.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package org.jabref.gui.preferences;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.binding.Bindings;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.binding.BooleanBinding;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ButtonType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.DialogPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.Globals;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.JabRefGUI;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.BasePanel;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.DialogService;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.preview.PreviewViewer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.util.BackgroundTask;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.util.TaskExecutor;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.gui.util.ViewModelListCellFactory;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.citationstyle.CitationStyle;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.citationstyle.CitationStylePreviewLayout;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.citationstyle.PreviewLayout;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.citationstyle.TextBasedPreviewLayout;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.l10n.Localization;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.util.TestEntry;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.database.BibDatabaseContext;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.preferences.PreviewPreferences;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "import org.slf4j.Logger;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import org.slf4j.LoggerFactory;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "public class PreviewPreferencesTab implements PrefsTab {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger LOGGER \u003d LoggerFactory.getLogger(PreviewPreferencesTab.class);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private final ObservableList\u003cPreviewLayout\u003e availableModel \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    private final ObservableList\u003cPreviewLayout\u003e chosenModel \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    private final ListView\u003cPreviewLayout\u003e available \u003d new ListView\u003c\u003e(availableModel);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    private final ListView\u003cPreviewLayout\u003e chosen \u003d new ListView\u003c\u003e(chosenModel);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Button btnRight \u003d new Button(\"»\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Button btnLeft \u003d new Button(\"«\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Button btnUp \u003d new Button(Localization.lang(\"Up\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Button btnDown \u003d new Button(Localization.lang(\"Down\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    private final GridPane gridPane \u003d new GridPane();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private final TextArea previewTextArea \u003d new TextArea();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Button btnTest \u003d new Button(Localization.lang(\"Test\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Button btnDefault \u003d new Button(Localization.lang(\"Default\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    private final ScrollPane scrollPane \u003d new ScrollPane(previewTextArea);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    private final DialogService dialogService;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    private final TaskExecutor taskExecutor;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public PreviewPreferencesTab(DialogService dialogService, TaskExecutor taskExecutor) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        this.dialogService \u003d dialogService;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        this.taskExecutor \u003d taskExecutor;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        setupLogic();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        setupGui();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setupLogic() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        BooleanBinding nothingSelectedFromChosen \u003d Bindings.isEmpty(chosen.getSelectionModel().getSelectedItems());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        btnLeft.disableProperty().bind(nothingSelectedFromChosen);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        btnDown.disableProperty().bind(nothingSelectedFromChosen);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        btnUp.disableProperty().bind(nothingSelectedFromChosen);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        btnRight.disableProperty().bind(Bindings.isEmpty(available.getSelectionModel().getSelectedItems()));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        btnRight.setOnAction(event -\u003e {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            for (PreviewLayout layout : available.getSelectionModel().getSelectedItems()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                availableModel.remove(layout);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                chosenModel.add(layout);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        btnLeft.setOnAction(event -\u003e {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            for (PreviewLayout layout : chosen.getSelectionModel().getSelectedItems()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                availableModel.add(layout);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                chosenModel.remove(layout);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        btnUp.setOnAction(event -\u003e {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cInteger\u003e newSelectedIndices \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int oldIndex : chosen.getSelectionModel().getSelectedIndices()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                boolean alreadyTaken \u003d newSelectedIndices.contains(oldIndex - 1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                int newIndex \u003d ((oldIndex \u003e 0) \u0026\u0026 !alreadyTaken) ? oldIndex - 1 : oldIndex;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                chosenModel.add(newIndex, chosenModel.remove(oldIndex));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                chosen.getSelectionModel().select(newIndex);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        btnDown.setOnAction(event -\u003e {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cInteger\u003e newSelectedIndices \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            ObservableList\u003cInteger\u003e selectedIndices \u003d chosen.getSelectionModel().getSelectedIndices();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d selectedIndices.size() - 1; i \u003e\u003d 0; i--) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                int oldIndex \u003d selectedIndices.get(i);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                boolean alreadyTaken \u003d newSelectedIndices.contains(oldIndex + 1);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                int newIndex \u003d ((oldIndex \u003c (chosenModel.size() - 1)) \u0026\u0026 !alreadyTaken) ? oldIndex + 1 : oldIndex;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                chosenModel.add(newIndex, chosenModel.remove(oldIndex));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                chosen.getSelectionModel().select(newIndex);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        btnDefault.setOnAction(event -\u003e previewTextArea.setText(Globals.prefs.getPreviewPreferences()"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                             .getDefaultPreviewStyle()"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                             .replace(\"__NEWLINE__\", \"\\n\")));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        btnTest.setOnAction(event -\u003e {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewViewer testPane \u003d new PreviewViewer(new BibDatabaseContext(), dialogService);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                testPane.setEntry(TestEntry.getTestEntry());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewLayout layout \u003d chosen.getSelectionModel().getSelectedItem();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                testPane.setLayout(layout);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogPane pane \u003d new DialogPane();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                pane.setContent(testPane);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                dialogService.showCustomDialogAndWait(Localization.lang(\"Preview\"), pane, ButtonType.OK);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (StringIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                LOGGER.warn(\"Parsing error.\", exception);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                dialogService.showErrorDialogAndWait(Localization.lang(\"Parsing error\"), Localization.lang(\"Parsing error\") + \": \" + Localization.lang(\"illegal backslash expression\"), exception);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setupGui() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        VBox vBox \u003d new VBox();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        btnRight.setPrefSize(80, 20);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        btnLeft.setPrefSize(80, 20);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        btnUp.setPrefSize(80, 20);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        btnDown.setPrefSize(80, 20);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        vBox.getChildren().addAll(new Label(\"\"), new Label(\"\"), new Label(\"\"), new Label(\"\"), new Label(\"\"),"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                new Label(\"\"), new Label(\"\"), btnRight, btnLeft, new Label(\"\"), new Label(\"\"), new Label(\"\"),"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                btnUp, btnDown);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        Label currentPreview \u003d new Label(Localization.lang(\"Current Preview\"));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        currentPreview.getStyleClass().add(\"sectionHeader\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        gridPane.add(currentPreview, 1, 1);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        gridPane.add(available, 1, 2);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        gridPane.add(vBox, 2, 2);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        gridPane.add(chosen, 3, 2);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        gridPane.add(btnTest, 2, 6);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        gridPane.add(btnDefault, 3, 6);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        previewTextArea.setPrefSize(600, 300);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        gridPane.add(scrollPane, 1, 9);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        btnTest.disableProperty().bind(Bindings.isEmpty(chosen.getSelectionModel().getSelectedItems()));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        new ViewModelListCellFactory\u003cPreviewLayout\u003e().withText(PreviewLayout::getName).install(chosen);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        new ViewModelListCellFactory\u003cPreviewLayout\u003e().withText(PreviewLayout::getName).install(available);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    public Node getBuilder() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        return gridPane;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setValues() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        PreviewPreferences previewPreferences \u003d Globals.prefs.getPreviewPreferences();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        chosenModel.clear();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        chosenModel.addAll(previewPreferences.getPreviewCycle());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        availableModel.clear();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        if (chosenModel.stream().noneMatch(layout -\u003e layout instanceof TextBasedPreviewLayout)) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            availableModel.add(previewPreferences.getTextBasedPreviewLayout());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        BackgroundTask.wrap(CitationStyle::discoverCitationStyles)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                      .onSuccess(value -\u003e value.stream()"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                                               .map(CitationStylePreviewLayout::new)"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                                               .filter(style -\u003e !chosenModel.contains(style))"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                                               .sorted(Comparator.comparing(PreviewLayout::getName))"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                                               .forEach(availableModel::add))"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                      .onFailure(ex -\u003e {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "                          LOGGER.error(\"something went wrong while adding the discovered CitationStyles to the list \", ex);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                          dialogService.showErrorDialogAndWait(Localization.lang(\"Error adding discovered CitationStyles\"), ex);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "                      })"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                      .executeWith(taskExecutor);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        previewTextArea.setText(previewPreferences.getPreviewStyle().replace(\"__NEWLINE__\", \"\\n\"));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    public void storeSettings() {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        PreviewPreferences previewPreferences \u003d Globals.prefs.getPreviewPreferences();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        if (chosenModel.isEmpty()) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            chosenModel.add(previewPreferences.getTextBasedPreviewLayout());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        PreviewPreferences newPreviewPreferences \u003d Globals.prefs.getPreviewPreferences()"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                .getBuilder()"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                .withPreviewCycle(chosenModel)"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                .withPreviewStyle(previewTextArea.getText().replace(\"\\n\", \"__NEWLINE__\"))"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                .build();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "chelseyong"
        },
        "content": "        if (!chosen.getSelectionModel().isEmpty()) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            newPreviewPreferences \u003d newPreviewPreferences.getBuilder().withPreviewCyclePosition(chosen.getSelectionModel().getSelectedIndex()).build();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chelseyong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        Globals.prefs.storePreviewPreferences(newPreviewPreferences);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        for (BasePanel basePanel : JabRefGUI.getMainFrame().getBasePanelList()) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            // TODO: Find a better way to update preview"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            basePanel.closeBottomPane();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            //basePanel.getPreviewPanel().updateLayout(Globals.prefs.getPreviewPreferences());"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean validateSettings() {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        return !chosenModel.isEmpty();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getTabName() {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        return Localization.lang(\"Entry preview\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 229,
      "chelseyong": 2
    }
  },
  {
    "path": "src/main/java/org/jabref/logic/integrity/EditionChecker.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package org.jabref.logic.integrity;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.l10n.Localization;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.database.BibDatabaseContext;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.strings.StringUtil;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditionChecker implements ValueChecker {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Predicate\u003cString\u003e FIRST_LETTER_CAPITALIZED \u003d Pattern.compile(\"^[A-Z]\").asPredicate();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Predicate\u003cString\u003e ONLY_NUMERALS_OR_LITERALS \u003d Pattern.compile(\"^([0-9]+|[^0-9].+)$\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            .asPredicate();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "    private static final String FIRST_EDITION \u003d \"1\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private final BibDatabaseContext bibDatabaseContextEdition;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditionChecker(BibDatabaseContext bibDatabaseContext) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        this.bibDatabaseContextEdition \u003d Objects.requireNonNull(bibDatabaseContext);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks, if field contains only an integer or a literal (biblatex mode)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks, if the first letter is capitalized (BibTeX mode)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * biblatex package documentation:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * The edition of a printed publication. This must be an integer, not an ordinal."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * It is also possible to give the edition as a literal string, for example \"Third, revised and expanded edition\"."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Official BibTeX specification:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * The edition of a book-for example, \"Second\"."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * This should be an ordinal, and should have the first letter capitalized."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cString\u003e checkValue(String value) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        if (StringUtil.isBlank(value)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "        if (value.equals(FIRST_EDITION)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "            return Optional.of(Localization.lang(\"edition of book reported as just 1\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        //biblatex"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        if (bibDatabaseContextEdition.isBiblatexMode() \u0026\u0026 !ONLY_NUMERALS_OR_LITERALS.test(value.trim())) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.of(Localization.lang(\"should contain an integer or a literal\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        //BibTeX"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!bibDatabaseContextEdition.isBiblatexMode() \u0026\u0026 !FIRST_LETTER_CAPITALIZED.test(value.trim())) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.of(Localization.lang(\"should have the first letter capitalized\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        return Optional.empty();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RonakLakhotia": 5,
      "-": 53
    }
  },
  {
    "path": "src/main/java/org/jabref/model/util/OptionalUtil.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package org.jabref.model.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.BiFunction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "import java.util.function.BiPredicate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class OptionalUtil {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e List\u003cT\u003e toList(Optional\u003cT\u003e value) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        if (value.isPresent()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            return Collections.singletonList(value.get());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            return Collections.emptyList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "    public static \u003cT, U\u003e boolean equals(Optional\u003cT\u003e left, Optional\u003cU\u003e right, BiPredicate\u003cT, U\u003e equality) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "        if (!left.isPresent()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "            return !right.isPresent();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "            if (right.isPresent()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "                return equality.test(left.get(), right.get());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * No longer needed in Java 9 where {@code Optional\u003cT\u003e.stream()} is added."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e Stream\u003cT\u003e toStream(Optional\u003cT\u003e value) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        if (value.isPresent()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            return Stream.of(value.get());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            return Stream.empty();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @SafeVarargs"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e List\u003cT\u003e toList(Optional\u003cT\u003e... values) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return Stream.of(values).flatMap(optional -\u003e toList(optional).stream()).collect(Collectors.toList());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT, R\u003e Stream\u003cR\u003e flatMapFromStream(Optional\u003cT\u003e value, Function\u003c? super T, ? extends Stream\u003c? extends R\u003e\u003e mapper) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        return toStream(value).flatMap(mapper);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT, R\u003e Stream\u003cR\u003e flatMap(Optional\u003cT\u003e value, Function\u003c? super T, ? extends Collection\u003c? extends R\u003e\u003e mapper) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        return toStream(value).flatMap(element -\u003e mapper.apply(element).stream());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e Boolean isPresentAnd(Optional\u003cT\u003e value, Predicate\u003cT\u003e check) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        return value.isPresent() \u0026\u0026 check.test(value.get());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e Boolean isPresentAndTrue(Optional\u003cBoolean\u003e value) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        return value.isPresent() \u0026\u0026 value.get();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT, S, R\u003e Optional\u003cR\u003e combine(Optional\u003cT\u003e valueOne, Optional\u003cS\u003e valueTwo, BiFunction\u003cT, S, R\u003e combine) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        if (valueOne.isPresent() \u0026\u0026 valueTwo.isPresent()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.ofNullable(combine.apply(valueOne.get(), valueTwo.get()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e Optional\u003cT\u003e orElse(Optional\u003cT\u003e valueOne, Optional\u003cT\u003e valueTwo) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        if (valueOne.isPresent()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            return valueOne;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            return valueTwo;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RonakLakhotia": 13,
      "-": 70
    }
  },
  {
    "path": "src/test/java/org/jabref/logic/integrity/IntegrityCheckTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package org.jabref.logic.integrity;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.UUID;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.bibtexkeypattern.BibtexKeyPatternPreferences;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.journals.Abbreviation;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.logic.journals.JournalAbbreviationRepository;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.Defaults;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.bibtexkeypattern.GlobalBibtexKeyPattern;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.database.BibDatabase;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.database.BibDatabaseContext;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.database.BibDatabaseMode;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.entry.BibEntry;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.entry.InternalBibtexFields;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.metadata.FilePreferences;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import org.jabref.model.metadata.MetaData;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import org.mockito.Mockito;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.mockito.Matchers.any;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.mockito.Mockito.mock;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "class IntegrityCheckTest {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    void testEntryTypeChecks() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"title\", \"sometitle\", \"article\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"title\", \"sometitle\", \"patent\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect((withMode(createContext(\"title\", \"sometitle\", \"patent\"), BibDatabaseMode.BIBLATEX)));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"title\", \"sometitle\", \"article\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    void testUrlChecks() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"url\", \"http://www.google.com\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"url\", \"file://c:/asdf/asdf\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"url\", \"http://scikit-learn.org/stable/modules/ensemble.html#random-forests\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"url\", \"www.google.com\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"url\", \"google.com\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"url\", \"c:/asdf/asdf\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    void testYearChecks() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"year\", \"2014\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"year\", \"1986\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"year\", \"around 1986\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"year\", \"(around 1986)\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"year\", \"1986,\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"year\", \"1986}%\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"year\", \"1986(){},.;!?\u003c\u003e%\u0026$\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"year\", \"abc\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"year\", \"86\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"year\", \"204\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"year\", \"1986a\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"year\", \"(1986a)\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"year\", \"1986a,\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"year\", \"1986}a%\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"year\", \"1986a(){},.;!?\u003c\u003e%\u0026$\"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    void testEditionChecks() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"edition\", \"Second\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"edition\", \"Third\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"edition\", \"second\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"edition\", \"2\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"edition\", \"2nd\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"edition\", \"2\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"edition\", \"10\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect("
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                withMode(createContext(\"edition\", \"Third, revised and expanded edition\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"edition\", \"Edition 2000\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"edition\", \"2nd\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "RonakLakhotia"
        },
        "content": "        assertWrong(createContext(\"edition\", \"1\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    void testNoteChecks() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"note\", \"Lorem ipsum\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"note\", \"Lorem ipsum? 10\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"note\", \"lorem ipsum\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"note\", \"Lorem ipsum\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"note\", \"\\\\url{someurl}\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"note\", \"lorem ipsum\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    void testHowpublishedChecks() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"howpublished\", \"Lorem ipsum\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"howpublished\", \"Lorem ipsum? 10\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"howpublished\", \"lorem ipsum\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"howpublished\", \"\\\\url{someurl}\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"howpublished\", \"Lorem ipsum\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"howpublished\", \"lorem ipsum\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    void testMonthChecks() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"month\", \"#mar#\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"month\", \"#dec#\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"month\", \"#bla#\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"month\", \"Dec\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"month\", \"December\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"month\", \"Lorem\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"month\", \"10\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"month\", \"1\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"month\", \"10\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"month\", \"#jan#\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"month\", \"jan\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"month\", \"january\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"month\", \"January\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"month\", \"Lorem\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    void testJournaltitleChecks() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"journaltitle\", \"A journal\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"journaltitle\", \"A journal\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    void testBibtexkeyChecks() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        final BibDatabaseContext correctContext \u003d createContext(\"bibtexkey\", \"Knuth2014\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        correctContext.getDatabase().getEntries().get(0).setField(\"author\", \"Knuth\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        correctContext.getDatabase().getEntries().get(0).setField(\"year\", \"2014\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(correctContext);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        final BibDatabaseContext wrongContext \u003d createContext(\"bibtexkey\", \"Knuth2014a\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        wrongContext.getDatabase().getEntries().get(0).setField(\"author\", \"Knuth\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        wrongContext.getDatabase().getEntries().get(0).setField(\"year\", \"2014\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(wrongContext);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    void testBracketChecks() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"title\", \"x\"));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"title\", \"{x}\"));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"title\", \"{x}x{}x{{}}\"));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"title\", \"{x}x{}}x{{}}\"));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"title\", \"}\"));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"title\", \"{\"));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    void testAuthorNameChecks() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String field : InternalBibtexFields.getPersonNameFields()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            // getPersonNameFields returns fields that are available in biblatex only"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            // if run without mode, the NoBibtexFieldChecker will complain that \"afterword\" is a biblatex only field"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            assertCorrect(withMode(createContext(field, \"\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            assertCorrect(withMode(createContext(field, \"Knuth\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            assertWrong(withMode(createContext(field, \"   Knuth, Donald E. \"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            assertWrong(withMode(createContext(field, \"Knuth, Donald E. and Kurt Cobain and A. Einstein\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            assertCorrect(withMode(createContext(field, \"Donald E. Knuth and Kurt Cobain and A. Einstein\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            assertWrong(withMode(createContext(field, \", and Kurt Cobain and A. Einstein\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            assertWrong(withMode(createContext(field, \"Donald E. Knuth and Kurt Cobain and ,\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            assertWrong(withMode(createContext(field, \"and Kurt Cobain and A. Einstein\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            assertWrong(withMode(createContext(field, \"Donald E. Knuth and Kurt Cobain and\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    void testTitleChecks() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"title\", \"This is a title\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"title\", \"This is a Title\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"title\", \"This is a {T}itle\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"title\", \"{This is a Title}\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"title\", \"This is a {Title}\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"title\", \"{C}urrent {C}hronicle\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"title\", \"{A Model-Driven Approach for Monitoring {ebBP} BusinessTransactions}\"), BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"title\", \"This is a title\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"title\", \"This is a Title\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"title\", \"This is a {T}itle\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"title\", \"{This is a Title}\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"title\", \"This is a {Title}\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"title\", \"{C}urrent {C}hronicle\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"title\", \"{A Model-Driven Approach for Monitoring {ebBP} BusinessTransactions}\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    void testAbbreviationChecks() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String field : Arrays.asList(\"booktitle\", \"journal\")) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            assertCorrect(createContext(field, \"IEEE Software\"));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            assertCorrect(createContext(field, \"\"));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            assertWrong(createContext(field, \"IEEE SW\"));"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    void testJournalIsKnownInAbbreviationList() {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"journal\", \"IEEE Software\"));"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"journal\", \"IEEE Whocares\"));"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    void testFileChecks() {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        MetaData metaData \u003d mock(MetaData.class);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        Mockito.when(metaData.getDefaultFileDirectory()).thenReturn(Optional.of(\".\"));"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        Mockito.when(metaData.getUserFileDirectory(any(String.class))).thenReturn(Optional.empty());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        // FIXME: must be set as checkBibtexDatabase only activates title checker based on database mode"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        Mockito.when(metaData.getMode()).thenReturn(Optional.of(BibDatabaseMode.BIBTEX));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"file\", \":build.gradle:gradle\", metaData));"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"file\", \"description:build.gradle:gradle\", metaData));"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"file\", \":asflakjfwofja:PDF\", metaData));"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    void fileCheckFindsFilesRelativeToBibFile(@TempDir Path testFolder) throws IOException {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        Path bibFile \u003d testFolder.resolve(\"lit.bib\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        Files.createFile(bibFile);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        Path pdfFile \u003d testFolder.resolve(\"file.pdf\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        Files.createFile(pdfFile);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        BibDatabaseContext databaseContext \u003d createContext(\"file\", \":file.pdf:PDF\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        databaseContext.setDatabaseFile(bibFile);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(databaseContext);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    void testTypeChecks() {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"pages\", \"11--15\", \"inproceedings\"));"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"pages\", \"11--15\", \"proceedings\"));"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    void testBooktitleChecks() {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"booktitle\", \"2014 Fourth International Conference on Digital Information and Communication Technology and it\u0027s Applications (DICTAP)\", \"proceedings\"));"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"booktitle\", \"Digital Information and Communication Technology and it\u0027s Applications (DICTAP), 2014 Fourth International Conference on\", \"proceedings\"));"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    void testPageNumbersChecks() {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"pages\", \"1--2\"));"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"pages\", \"12\"));"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"pages\", \"1-2\"));"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"pages\", \"1,2,3\"));"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"pages\", \"43+\"));"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"pages\", \"1 2\"));"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"pages\", \"{1}-{2}\"));"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"pages\", \"7,41,73--97\"));"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"pages\", \"7,41--42,73\"));"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"pages\", \"7--11,41--43,73\"));"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"pages\", \"7+,41--43,73\"));"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    void testBiblatexPageNumbersChecks() {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"pages\", \"1--2\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"pages\", \"12\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"pages\", \"1-2\"), BibDatabaseMode.BIBLATEX)); // only diff to bibtex"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"pages\", \"1,2,3\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"pages\", \"43+\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"pages\", \"1 2\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(withMode(createContext(\"pages\", \"{1}-{2}\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"pages\", \"7,41,73--97\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"pages\", \"7,41--42,73\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"pages\", \"7--11,41--43,73\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(withMode(createContext(\"pages\", \"7+,41--43,73\"), BibDatabaseMode.BIBLATEX));"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    void testBibStringChecks() {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"title\", \"Not a single hash mark\"));"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"month\", \"#jan#\"));"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"author\", \"#einstein# and #newton#\"));"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"month\", \"#jan\"));"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"author\", \"#einstein# #amp; #newton#\"));"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "    void testHTMLCharacterChecks() {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"title\", \"Not a single {HTML} character\"));"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"month\", \"#jan#\"));"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"author\", \"A. Einstein and I. Newton\"));"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"url\", \"http://www.thinkmind.org/index.php?view\u003darticle\u0026amp;articleid\u003dcloud_computing_2013_1_20_20130\"));"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"author\", \"Lenhard, J\u0026ouml;rg\"));"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"author\", \"Lenhard, J\u0026#227;rg\"));"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"journal\", \"\u0026Auml;rling Str\u0026ouml;m for \u0026#8211; \u0026#x2031;\"));"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "    void testISSNChecks() {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"issn\", \"0020-7217\"));"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"issn\", \"1687-6180\"));"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"issn\", \"2434-561x\"));"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"issn\", \"Some other stuff\"));"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"issn\", \"0020-7218\"));"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "    void testISBNChecks() {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"isbn\", \"0-201-53082-1\"));"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"isbn\", \"0-9752298-0-X\"));"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"isbn\", \"978-0-306-40615-7\"));"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"isbn\", \"Some other stuff\"));"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"isbn\", \"0-201-53082-2\"));"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"isbn\", \"978-0-306-40615-8\"));"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "    void testDOIChecks() {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"doi\", \"10.1023/A:1022883727209\"));"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"doi\", \"10.17487/rfc1436\"));"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"doi\", \"10.1002/(SICI)1097-4571(199205)43:4\u003c284::AID-ASI3\u003e3.0.CO;2-0\"));"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"doi\", \"asdf\"));"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "    void testEntryIsUnchangedAfterChecks() {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        BibEntry entry \u003d new BibEntry();"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        // populate with all known fields"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String fieldName : InternalBibtexFields.getAllPublicAndInternalFieldNames()) {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "            entry.setField(fieldName, UUID.randomUUID().toString());"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        // add a random field"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        entry.setField(UUID.randomUUID().toString(), UUID.randomUUID().toString());"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        // duplicate entry"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        BibEntry clonedEntry \u003d (BibEntry) entry.clone();"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        BibDatabase bibDatabase \u003d new BibDatabase();"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "        bibDatabase.insertEntry(entry);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "        BibDatabaseContext context \u003d new BibDatabaseContext(bibDatabase, new Defaults());"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        new IntegrityCheck(context,"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "                mock(FilePreferences.class),"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "                createBibtexKeyPatternPreferences(),"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "                new JournalAbbreviationRepository(new Abbreviation(\"IEEE Software\", \"IEEE SW\")), true)"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                .checkBibtexDatabase();"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(clonedEntry, entry);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    void testASCIIChecks() {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCorrect(createContext(\"title\", \"Only ascii characters!\u0027@12\"));"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"month\", \"Umlauts are nöt ällowed\"));"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        assertWrong(createContext(\"author\", \"Some unicode ⊕\"));"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "    private BibDatabaseContext createContext(String field, String value, String type) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        BibEntry entry \u003d new BibEntry();"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "        entry.setField(field, value);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        entry.setType(type);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        BibDatabase bibDatabase \u003d new BibDatabase();"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        bibDatabase.insertEntry(entry);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        return new BibDatabaseContext(bibDatabase, new Defaults());"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "    private BibDatabaseContext createContext(String field, String value, MetaData metaData) {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        BibEntry entry \u003d new BibEntry();"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        entry.setField(field, value);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "        BibDatabase bibDatabase \u003d new BibDatabase();"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        bibDatabase.insertEntry(entry);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        return new BibDatabaseContext(bibDatabase, metaData, new Defaults());"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "    private BibDatabaseContext createContext(String field, String value) {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        return createContext(field, value, new MetaData());"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertWrong(BibDatabaseContext context) {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cIntegrityMessage\u003e messages \u003d new IntegrityCheck(context,"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "                mock(FilePreferences.class),"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "                createBibtexKeyPatternPreferences(),"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "                new JournalAbbreviationRepository(new Abbreviation(\"IEEE Software\", \"IEEE SW\")), true)"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "                .checkBibtexDatabase();"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(messages.isEmpty(), messages.toString());"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCorrect(BibDatabaseContext context) {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cIntegrityMessage\u003e messages \u003d new IntegrityCheck(context,"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "                mock(FilePreferences.class),"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "                createBibtexKeyPatternPreferences(),"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "                new JournalAbbreviationRepository(new Abbreviation(\"IEEE Software\", \"IEEE SW\")), true"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "        ).checkBibtexDatabase();"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(Collections.emptyList(), messages);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "    private BibtexKeyPatternPreferences createBibtexKeyPatternPreferences() {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        final GlobalBibtexKeyPattern keyPattern \u003d GlobalBibtexKeyPattern.fromPattern(\"[auth][year]\");"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        return new BibtexKeyPatternPreferences("
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "                \"\","
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "                \"\","
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "                false,"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "                false,"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "                false,"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "                keyPattern,"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0027,\u0027);"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "    private BibDatabaseContext withMode(BibDatabaseContext context, BibDatabaseMode mode) {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "        context.setMode(mode);"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "        return context;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RonakLakhotia": 1,
      "-": 411
    }
  }
]
